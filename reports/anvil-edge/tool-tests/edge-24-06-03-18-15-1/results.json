{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 73, "errors": 6, "failures": 6, "skips": 2}, "tests": [{"id": "bcftools_filter/1.10-0", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 0, "time_seconds": 30.834925174713135, "inputs": {"input_file": {"src": "hda", "id": "77072f7e9c2f6087"}, "sec_filter|SnpGap": "2", "sec_filter|IndelGap": "2", "sec_filter|mode": "x", "output_type": "v"}, "job": {"model_class": "Job", "id": "952cce0dc2825aa4", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:05:43.749649", "create_time": "2024-06-03T19:05:29.010374", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-dzlsn", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/4/4/b/dataset_44b4f372-fa27-4f04-a35a-f8598c80ae1f.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --SnpGap \"2\" --IndelGap \"2\" --mode 'x'                --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/f/0/9/dataset_f09c316a-07f4-4d40-bd82-17281e73bd95.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"2\", \"SnpGap\": \"2\", \"mode\": \"x\", \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "77072f7e9c2f6087", "src": "hda", "uuid": "44b4f372-fa27-4f04-a35a-f8598c80ae1f"}}, "outputs": {"output_file": {"id": "abf2016d5fa8d831", "src": "hda", "uuid": "f09c316a-07f4-4d40-bd82-17281e73bd95"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:05:34", "plugin": "core", "name": "end_epoch", "raw_value": "1717441534.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:05:34", "plugin": "core", "name": "start_epoch", "raw_value": "1717441534.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-1", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 1, "time_seconds": 26.204739809036255, "inputs": {"input_file": {"src": "hda", "id": "e43ac00a17a92855"}, "sec_restrict|exclude": "QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))", "sec_filter|soft_filter": "Modified", "sec_filter|select_set_GTs": ".", "output_type": "v"}, "job": {"model_class": "Job", "id": "8b4096acadd142a0", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:06:10.096366", "create_time": "2024-06-03T19:05:59.197215", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-f99ls", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/b/5/c/dataset_b5c5fd40-16ae-4b7b-8ca3-b4b58c97b149.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --soft-filter \"Modified\" --set-GTs \".\"             --exclude 'QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/8/a/6/dataset_8a6e054f-6bcd-4507-a869-b31fd88c65f4.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": \".\", \"soft_filter\": \"Modified\"}", "sec_restrict": "{\"exclude\": \"QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "e43ac00a17a92855", "src": "hda", "uuid": "b5c5fd40-16ae-4b7b-8ca3-b4b58c97b149"}}, "outputs": {"output_file": {"id": "d475e84aaa7c1ed3", "src": "hda", "uuid": "8a6e054f-6bcd-4507-a869-b31fd88c65f4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:06:01", "plugin": "core", "name": "end_epoch", "raw_value": "1717441561.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:06:00", "plugin": "core", "name": "start_epoch", "raw_value": "1717441560.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-2", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 2, "time_seconds": 27.076839685440063, "inputs": {"input_file": {"src": "hda", "id": "8f6b9bef96d0691c"}, "sec_restrict|exclude": "INFO/DP=19", "output_type": "v"}, "job": {"model_class": "Job", "id": "f9cba1162a5334a3", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:06:37.033024", "create_time": "2024-06-03T19:06:25.869554", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-fnnv8", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/4/1/1/dataset_411ca12c-9e18-4051-abaa-5e4027939fe2.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter              --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/6/4/5/dataset_6457035e-e377-48dd-8bba-073b1b787111.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "8f6b9bef96d0691c", "src": "hda", "uuid": "411ca12c-9e18-4051-abaa-5e4027939fe2"}}, "outputs": {"output_file": {"id": "c73f9de0bdefdf5f", "src": "hda", "uuid": "6457035e-e377-48dd-8bba-073b1b787111"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:06:27", "plugin": "core", "name": "end_epoch", "raw_value": "1717441587.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:06:27", "plugin": "core", "name": "start_epoch", "raw_value": "1717441587.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-3", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 3, "time_seconds": 27.847063779830933, "inputs": {"input_file": {"src": "hda", "id": "362c1c3d2fa823f8"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "e65b5c5c19f6ec6f", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:07:05.019749", "create_time": "2024-06-03T19:06:53.421980", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-gt4t4", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/1/5/dataset_215c7bbd-5cda-4be2-a339-9047eb314b3a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/d/0/9/dataset_d0992c5c-5acf-4989-a508-8e8f97cecd3a.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "362c1c3d2fa823f8", "src": "hda", "uuid": "215c7bbd-5cda-4be2-a339-9047eb314b3a"}}, "outputs": {"output_file": {"id": "117d14c5176dfe22", "src": "hda", "uuid": "d0992c5c-5acf-4989-a508-8e8f97cecd3a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:06:56", "plugin": "core", "name": "end_epoch", "raw_value": "1717441616.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:06:55", "plugin": "core", "name": "start_epoch", "raw_value": "1717441615.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-4", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 4, "time_seconds": 26.16652202606201, "inputs": {"input_file": {"src": "hda", "id": "af2619b09bf8ac2b"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|mode": "+", "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "f177b6b3f76f59f7", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:07:31.366553", "create_time": "2024-06-03T19:07:20.493160", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-m65tg", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/a/0/7/dataset_a0757046-781c-4d67-acd2-f5dc9b7672a1.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --mode '+' --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/6/9/5/dataset_695e30bd-8793-4b6b-ae51-e1cb127cb466.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": \"+\", \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "af2619b09bf8ac2b", "src": "hda", "uuid": "a0757046-781c-4d67-acd2-f5dc9b7672a1"}}, "outputs": {"output_file": {"id": "950c82982e54bec6", "src": "hda", "uuid": "695e30bd-8793-4b6b-ae51-e1cb127cb466"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:07:22", "plugin": "core", "name": "end_epoch", "raw_value": "1717441642.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:07:22", "plugin": "core", "name": "start_epoch", "raw_value": "1717441642.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-5", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 5, "time_seconds": 28.727495431900024, "inputs": {"input_file": {"src": "hda", "id": "78e488b4d9c1de6d"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|mode": "x", "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "4228b7f93d2ebcdd", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:07:59.980054", "create_time": "2024-06-03T19:07:47.189474", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-lvqrc", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/7/7/3/dataset_773ded4a-5b54-4435-b799-953f1137ec54.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --mode 'x' --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/e/1/c/dataset_e1ce1c41-587c-4b25-8123-c4d761d03fbb.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": \"x\", \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "78e488b4d9c1de6d", "src": "hda", "uuid": "773ded4a-5b54-4435-b799-953f1137ec54"}}, "outputs": {"output_file": {"id": "d0317b98d08e0ff0", "src": "hda", "uuid": "e1ce1c41-587c-4b25-8123-c4d761d03fbb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:07:50", "plugin": "core", "name": "end_epoch", "raw_value": "1717441670.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:07:49", "plugin": "core", "name": "start_epoch", "raw_value": "1717441669.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-6", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 6, "time_seconds": 26.150964736938477, "inputs": {"input_file": {"src": "hda", "id": "aff376b862ebe918"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|mode": ["+", "x"], "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "71278d243fd46443", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:08:26.331003", "create_time": "2024-06-03T19:08:15.226631", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-ln5d9", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/6/b/1/dataset_6b14d385-b851-4632-9742-604cda0dbdc9.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --mode '+x' --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/d/0/d/dataset_d0d716f1-c797-46bd-b8a1-1a7b87de568b.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": [\"+\", \"x\"], \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "aff376b862ebe918", "src": "hda", "uuid": "6b14d385-b851-4632-9742-604cda0dbdc9"}}, "outputs": {"output_file": {"id": "61a241add6647047", "src": "hda", "uuid": "d0d716f1-c797-46bd-b8a1-1a7b87de568b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:08:17", "plugin": "core", "name": "end_epoch", "raw_value": "1717441697.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:08:17", "plugin": "core", "name": "start_epoch", "raw_value": "1717441697.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-7", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 7, "time_seconds": 25.31277847290039, "inputs": {"input_file": {"src": "hda", "id": "16fe6b63098e51d7"}, "sec_restrict|exclude": "FMT/GT=\"0/2\"", "output_type": "v"}, "job": {"model_class": "Job", "id": "ade059ae8b523116", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:08:51.803956", "create_time": "2024-06-03T19:08:40.953062", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-cqqlc", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/f/7/dataset_2f72e354-30f2-4cbc-b203-be2da2e4dd0a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter              --exclude 'FMT/GT=\"0/2\"'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/3/d/f/dataset_3df4066e-114b-4916-a4b3-991c15eef70e.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": \"FMT/GT=\\\"0/2\\\"\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "16fe6b63098e51d7", "src": "hda", "uuid": "2f72e354-30f2-4cbc-b203-be2da2e4dd0a"}}, "outputs": {"output_file": {"id": "e8613ec87d84fac2", "src": "hda", "uuid": "3df4066e-114b-4916-a4b3-991c15eef70e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:08:43", "plugin": "core", "name": "end_epoch", "raw_value": "1717441723.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:08:43", "plugin": "core", "name": "start_epoch", "raw_value": "1717441723.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-8", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 8, "time_seconds": 26.286330223083496, "inputs": {"input_file": {"src": "hda", "id": "ad052ab0102ab802"}, "sec_restrict|include": "FMT/GT=\"0/0\" && AC[*]=2", "output_type": "v"}, "job": {"model_class": "Job", "id": "5f0cab5e2067dcb6", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:09:18.279054", "create_time": "2024-06-03T19:09:07.224291", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-lqdv9", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/5/1/dataset_251ccd7c-41bd-42f1-9aa0-816d7eaa1ba8.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter            --include 'FMT/GT=\"0/0\" && AC[*]=2'      --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/f/b/7/dataset_fb758129-a1bf-43dd-903c-e19990f5ba03.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": null, \"include\": \"FMT/GT=\\\"0/0\\\" && AC[*]=2\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "ad052ab0102ab802", "src": "hda", "uuid": "251ccd7c-41bd-42f1-9aa0-816d7eaa1ba8"}}, "outputs": {"output_file": {"id": "034835b1bef4aa9c", "src": "hda", "uuid": "fb758129-a1bf-43dd-903c-e19990f5ba03"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:09:09", "plugin": "core", "name": "end_epoch", "raw_value": "1717441749.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:09:08", "plugin": "core", "name": "start_epoch", "raw_value": "1717441748.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-0", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 0, "time_seconds": 34.43287420272827, "inputs": {"input|input_bam": {"src": "hda", "id": "0e4723ed492659b0"}, "input|input_number": "single", "reference_source|ref_file": {"src": "hda", "id": "517fa58e87123105"}, "reference_source|reference_source_selector": "history", "output_type": "v"}, "job": {"model_class": "Job", "id": "94263b265f404ab3", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:03:35.802500", "create_time": "2024-06-03T19:03:18.712918", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-rg98x", "command_line": "ln -s '/galaxy/server/database/objects/b/b/e/dataset_bbe03fbe-6ceb-4aa3-b7de-8c72408508eb.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/b/f/d/metadata_bfdac515-f803-4eaa-9fc3-05e2a65e4ade.dat' mpileup_1.bam.bai &&  ln -s '/galaxy/server/database/objects/1/5/0/dataset_15077775-48e6-4421-8968-0d207f40aa56.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"                 --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam > '/galaxy/server/database/objects/0/d/2/dataset_0d274dfc-5499-4c34-bae8-472369d6949c.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 201, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 200, \"src\": \"hda\"}]}, \"input_number\": \"single\"}"}, "inputs": {"reference_source|ref_file": {"id": "517fa58e87123105", "src": "hda", "uuid": "15077775-48e6-4421-8968-0d207f40aa56"}, "input|input_bam": {"id": "0e4723ed492659b0", "src": "hda", "uuid": "bbe03fbe-6ceb-4aa3-b7de-8c72408508eb"}}, "outputs": {"output_file": {"id": "51be9bab2a0ff57f", "src": "hda", "uuid": "0d274dfc-5499-4c34-bae8-472369d6949c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:03:25", "plugin": "core", "name": "end_epoch", "raw_value": "1717441405.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:03:25", "plugin": "core", "name": "start_epoch", "raw_value": "1717441405.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-1", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 1, "status": "skip"}}, {"id": "bcftools_mpileup/1.10-2", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 2, "time_seconds": 8.45023488998413, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_mpileup/1.10-3", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 3, "time_seconds": 34.31014919281006, "inputs": {"input|input_bams": [{"src": "hda", "id": "f2464d386cd0b48a"}, {"src": "hda", "id": "b1d99a2a8dfbb2ce"}, {"src": "hda", "id": "8f03dfc068650aef"}], "input|input_number": "multiple", "reference_source|ref_file": {"src": "hda", "id": "43425a920114accd"}, "reference_source|reference_source_selector": "history", "sec_restrict|regions|regions_0|chrom": "17", "sec_restrict|regions|regions_0|start": "100", "sec_restrict|regions|regions_0|stop": "110", "sec_restrict|regions|regions_src": "regions", "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"], "output_type": "v"}, "job": {"model_class": "Job", "id": "aea4129ce482f225", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:04:18.837919", "create_time": "2024-06-03T19:04:08.144443", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-t7tpq", "command_line": "ln -s '/galaxy/server/database/objects/6/0/b/dataset_60b6896c-77cc-43e3-9e04-0ef3b804a591.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/f/9/metadata_af9963e4-46da-461f-a63e-2d1ae72403b4.dat' mpileup_1.bam.bai && ln -s '/galaxy/server/database/objects/9/6/d/dataset_96dd983d-bcdf-4f3c-8091-73b9fa8f9202.dat' mpileup_2.bam && ln -s '/galaxy/server/database/objects/_metadata_files/6/d/0/metadata_6d01caf2-8c30-4f5e-b1ff-67925f065c86.dat' mpileup_2.bam.bai && ln -s '/galaxy/server/database/objects/c/8/6/dataset_c8665938-7d53-44b3-8162-92880ac27a23.dat' mpileup_3.bam && ln -s '/galaxy/server/database/objects/_metadata_files/c/5/2/metadata_c52c4171-2638-49d2-9fd8-efbd7d0de2aa.dat' mpileup_3.bam.bai &&  ln -s '/galaxy/server/database/objects/f/5/a/dataset_f5a80165-6561-4ab2-96a1-5043b68b8ef9.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"   --annotate \"DP,INFO/AD,DV\"            --regions '17:100-110'         --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam mpileup_2.bam mpileup_3.bam > '/galaxy/server/database/objects/f/1/a/dataset_f1a22d6d-fef4-4f0f-ba61-0906b8b056ec.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"110\"}], \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 208, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}, {\"id\": 206, \"src\": \"hda\"}, {\"id\": 207, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}"}, "inputs": {"reference_source|ref_file": {"id": "43425a920114accd", "src": "hda", "uuid": "f5a80165-6561-4ab2-96a1-5043b68b8ef9"}, "input|input_bams3": {"id": "8f03dfc068650aef", "src": "hda", "uuid": "c8665938-7d53-44b3-8162-92880ac27a23"}, "input|input_bams2": {"id": "b1d99a2a8dfbb2ce", "src": "hda", "uuid": "96dd983d-bcdf-4f3c-8091-73b9fa8f9202"}, "input|input_bams1": {"id": "f2464d386cd0b48a", "src": "hda", "uuid": "60b6896c-77cc-43e3-9e04-0ef3b804a591"}, "input|input_bams": {"id": "f2464d386cd0b48a", "src": "hda", "uuid": "60b6896c-77cc-43e3-9e04-0ef3b804a591"}}, "outputs": {"output_file": {"id": "cb8efd617f3225e2", "src": "hda", "uuid": "f1a22d6d-fef4-4f0f-ba61-0906b8b056ec"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:04:10", "plugin": "core", "name": "end_epoch", "raw_value": "1717441450.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:04:10", "plugin": "core", "name": "start_epoch", "raw_value": "1717441450.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-4", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 4, "time_seconds": 33.60997557640076, "inputs": {"input|input_bams": [{"src": "hda", "id": "dbc19575fe58f2df"}, {"src": "hda", "id": "e13b8dcdb8761ebd"}, {"src": "hda", "id": "078c548a8e9466af"}], "input|input_number": "multiple", "reference_source|ref_file": {"src": "hda", "id": "af34f82009f6616b"}, "reference_source|reference_source_selector": "history", "sec_restrict|targets|targets_0|chrom": "17", "sec_restrict|targets|targets_0|start": "100", "sec_restrict|targets|targets_0|stop": "104", "sec_restrict|targets|targets_src": "targets", "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"], "output_type": "v"}, "job": {"model_class": "Job", "id": "b0cb020e5712c036", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:04:52.795242", "create_time": "2024-06-03T19:04:42.133107", "galaxy_version": "23.1", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-ztcx9", "command_line": "ln -s '/galaxy/server/database/objects/7/6/2/dataset_7625a6bc-23e9-448f-bd73-4ff3009d5634.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/4/d/metadata_a4dcb253-49d9-4b5f-87d2-c1a1709e743a.dat' mpileup_1.bam.bai && ln -s '/galaxy/server/database/objects/b/f/3/dataset_bf3ca922-40e7-4295-b1c0-943b5d901380.dat' mpileup_2.bam && ln -s '/galaxy/server/database/objects/_metadata_files/c/3/c/metadata_c3c29991-4a5c-415e-9e2b-3eec6684553f.dat' mpileup_2.bam.bai && ln -s '/galaxy/server/database/objects/5/e/2/dataset_5e2f11f5-a1cf-4aa4-99d7-3c4fdd41a270.dat' mpileup_3.bam && ln -s '/galaxy/server/database/objects/_metadata_files/4/5/0/metadata_450c2cc0-b827-4617-80ab-d0c89ab8b50e.dat' mpileup_3.bam.bai &&  ln -s '/galaxy/server/database/objects/e/a/8/dataset_ea84b422-f675-4965-acb2-beab3ded8d58.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"   --annotate \"DP,INFO/AD,DV\"                --targets '17:100-104'     --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam mpileup_2.bam mpileup_3.bam > '/galaxy/server/database/objects/6/b/e/dataset_6be6989e-1b82-4413-b378-dbae103c6d02.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 1, \"invert_targets_file\": false, \"targets\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"104\"}], \"targets_src\": \"targets\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 213, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 210, \"src\": \"hda\"}, {\"id\": 211, \"src\": \"hda\"}, {\"id\": 212, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}"}, "inputs": {"reference_source|ref_file": {"id": "af34f82009f6616b", "src": "hda", "uuid": "ea84b422-f675-4965-acb2-beab3ded8d58"}, "input|input_bams3": {"id": "078c548a8e9466af", "src": "hda", "uuid": "5e2f11f5-a1cf-4aa4-99d7-3c4fdd41a270"}, "input|input_bams2": {"id": "e13b8dcdb8761ebd", "src": "hda", "uuid": "bf3ca922-40e7-4295-b1c0-943b5d901380"}, "input|input_bams1": {"id": "dbc19575fe58f2df", "src": "hda", "uuid": "7625a6bc-23e9-448f-bd73-4ff3009d5634"}, "input|input_bams": {"id": "dbc19575fe58f2df", "src": "hda", "uuid": "7625a6bc-23e9-448f-bd73-4ff3009d5634"}}, "outputs": {"output_file": {"id": "f5f196bc03556c90", "src": "hda", "uuid": "6be6989e-1b82-4413-b378-dbae103c6d02"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:04:44", "plugin": "core", "name": "end_epoch", "raw_value": "1717441484.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:04:43", "plugin": "core", "name": "start_epoch", "raw_value": "1717441483.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-5", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 5, "time_seconds": 19.195475339889526, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "deeptools_bam_pe_fragmentsize/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 55.19188189506531, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "a753e397f1a04881"}, "histogram": true, "plotTitle": "Test Plot"}, "job": {"model_class": "Job", "id": "bfaaf92732c8c8a9", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:39:10.067761", "create_time": "2024-06-03T18:38:31.332608", "galaxy_version": "23.1", "command_version": "bamPEFragmentSize 3.3.2", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-gk58m", "command_line": "ln -s '/galaxy/server/database/objects/b/3/2/dataset_b327b149-4d5d-47bd-a0f1-4b50c8b36a0b.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/1/7/3/metadata_1734396d-079e-4f1d-81d1-4217d66517ee.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --histogram '/galaxy/server/database/objects/3/0/c/dataset_30c1e59a-333b-49cd-8a75-5d9b431c0612.dat' --plotFileFormat 'png' --plotTitle 'Test Plot' > '/galaxy/server/database/objects/2/c/b/dataset_2cb15f6c-39c3-474c-822a-2f11a6708b65.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "plotTitle": "\"Test Plot\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "true", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 59, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"multibam_conditional|bamfiles": {"id": "a753e397f1a04881", "src": "hda", "uuid": "b327b149-4d5d-47bd-a0f1-4b50c8b36a0b"}, "multibam_conditional|bamfiles1": {"id": "a753e397f1a04881", "src": "hda", "uuid": "b327b149-4d5d-47bd-a0f1-4b50c8b36a0b"}}, "outputs": {"outfile": {"id": "7a8439979c3f1695", "src": "hda", "uuid": "2cb15f6c-39c3-474c-822a-2f11a6708b65"}, "histogram_outfile": {"id": "7341643d19eef04a", "src": "hda", "uuid": "30c1e59a-333b-49cd-8a75-5d9b431c0612"}, "table": {"id": "540968fa894d1bcb", "src": "hda", "uuid": "e8cef0ba-d604-4ab6-a8c1-7cb51d9a7517"}, "fragLengths": {"id": "5cb50c965c754db9", "src": "hda", "uuid": "dc49fcf8-4736-4052-afc1-3e2d49b587a0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "4 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "4.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:38:54", "plugin": "core", "name": "end_epoch", "raw_value": "1717439934.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:38:50", "plugin": "core", "name": "start_epoch", "raw_value": "1717439930.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_pe_fragmentsize/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 29.174667596817017, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "f076ed8845472596"}, "advancedOpt|table": true, "advancedOpt|outRawFragmentLengths": true, "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "401b616c9df5660a", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:39:39.444069", "create_time": "2024-06-03T18:39:26.708839", "galaxy_version": "23.1", "command_version": "bamPEFragmentSize 3.3.2", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-662lr", "command_line": "ln -s '/galaxy/server/database/objects/4/a/8/dataset_4a8f545d-307a-4511-be1c-12f236238659.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/1/5/c/metadata_15c2a495-ec35-4000-81fb-3a6510a8276a.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --plotTitle '' --binSize '1000' --distanceBetweenBins '1000000'  --maxFragmentLength '0'     --table '/galaxy/server/database/objects/3/c/3/dataset_3c3196fa-5da0-446f-9a69-250fb6d1852b.dat' --outRawFragmentLengths '/galaxy/server/database/objects/9/0/d/dataset_90df5800-d6c6-4cac-8240-faa953e6d5ad.dat' > '/galaxy/server/database/objects/c/6/f/dataset_c6fca31b-277e-4bc0-82ab-d43566e6c69b.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": false, \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": true, \"showAdvancedOpt\": \"yes\", \"table\": true}", "plotTitle": "\"\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "false", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"multibam_conditional|bamfiles": {"id": "f076ed8845472596", "src": "hda", "uuid": "4a8f545d-307a-4511-be1c-12f236238659"}, "multibam_conditional|bamfiles1": {"id": "f076ed8845472596", "src": "hda", "uuid": "4a8f545d-307a-4511-be1c-12f236238659"}}, "outputs": {"outfile": {"id": "c11e292895036804", "src": "hda", "uuid": "c6fca31b-277e-4bc0-82ab-d43566e6c69b"}, "table": {"id": "e00725865b15a525", "src": "hda", "uuid": "3c3196fa-5da0-446f-9a69-250fb6d1852b"}, "fragLengths": {"id": "ffd2380eb412d11b", "src": "hda", "uuid": "90df5800-d6c6-4cac-8240-faa953e6d5ad"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:39:31", "plugin": "core", "name": "end_epoch", "raw_value": "1717439971.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:39:28", "plugin": "core", "name": "start_epoch", "raw_value": "1717439968.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "dropletutils_empty_drops/1.0.4+galaxy0-0", "has_data": true, "data": {"tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0", "test_index": 0, "time_seconds": 0.21328973770141602, "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error"}}, {"id": "fastq_filter/1.1.5-0", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 0, "time_seconds": 35.32587432861328, "inputs": {"input_file": {"src": "hda", "id": "7d549d9ee12b0b57"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "baee28a4c08e739b", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:40:16.216393", "create_time": "2024-06-03T18:39:57.304982", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-mgqwt", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/8/6/b/dataset_86bb5b02-d9b5-4e20-b576-0dfec06b366f.dat' '/galaxy/server/database/jobs_directory/000/30/configs/tmp9jv5se4o' '/galaxy/server/database/objects/0/c/5/dataset_0c57d00e-708a-4bcf-88ea-edf138371ad3.dat' '/galaxy/server/database/objects/0/c/5/dataset_0c57d00e-708a-4bcf-88ea-edf138371ad3_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "7d549d9ee12b0b57", "src": "hda", "uuid": "86bb5b02-d9b5-4e20-b576-0dfec06b366f"}}, "outputs": {"output_file": {"id": "73d2d5f9a6d1e544", "src": "hda", "uuid": "0c57d00e-708a-4bcf-88ea-edf138371ad3"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:40:06", "plugin": "core", "name": "end_epoch", "raw_value": "1717440006.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:40:06", "plugin": "core", "name": "start_epoch", "raw_value": "1717440006.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-1", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 1, "time_seconds": 25.40339469909668, "inputs": {"input_file": {"src": "hda", "id": "7e193c9388f4966c"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "911db306943b0b99", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:40:41.679488", "create_time": "2024-06-03T18:40:31.873073", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-r4pfp", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/3/e/f/dataset_3ef1ce52-75f8-42aa-8ef1-fd32dd185d72.dat' '/galaxy/server/database/jobs_directory/000/32/configs/tmptsy31kdb' '/galaxy/server/database/objects/a/4/1/dataset_a411f917-71c3-4350-b971-9dbad2b15455.dat' '/galaxy/server/database/objects/a/4/1/dataset_a411f917-71c3-4350-b971-9dbad2b15455_files' 'sanger.gz'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "7e193c9388f4966c", "src": "hda", "uuid": "3ef1ce52-75f8-42aa-8ef1-fd32dd185d72"}}, "outputs": {"output_file": {"id": "c74012831b730419", "src": "hda", "uuid": "a411f917-71c3-4350-b971-9dbad2b15455"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:40:33", "plugin": "core", "name": "end_epoch", "raw_value": "1717440033.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:40:33", "plugin": "core", "name": "start_epoch", "raw_value": "1717440033.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-2", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 2, "time_seconds": 26.43962860107422, "inputs": {"input_file": {"src": "hda", "id": "e5a2ed2cfb8a1300"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "a1ae3adb0868c80b", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:41:08.261003", "create_time": "2024-06-03T18:40:57.412482", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-w7rzc", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/5/3/8/dataset_538734f0-de3e-4a66-95a6-ffe3401b0d1d.dat' '/galaxy/server/database/jobs_directory/000/34/configs/tmpxw0nz22b' '/galaxy/server/database/objects/5/7/b/dataset_57b48f62-fb04-4ab8-9f15-85d5164d8353.dat' '/galaxy/server/database/objects/5/7/b/dataset_57b48f62-fb04-4ab8-9f15-85d5164d8353_files' 'cssanger'", "traceback": null, "params": {"min_size": "\"0\"", "max_size": "\"0\"", "min_quality": "\"0.0\"", "max_quality": "\"0.0\"", "max_num_deviants": "\"0\"", "paired_end": "false", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastqcssanger\""}, "inputs": {"input_file": {"id": "e5a2ed2cfb8a1300", "src": "hda", "uuid": "538734f0-de3e-4a66-95a6-ffe3401b0d1d"}}, "outputs": {"output_file": {"id": "1e250b81970e69b5", "src": "hda", "uuid": "57b48f62-fb04-4ab8-9f15-85d5164d8353"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:40:59", "plugin": "core", "name": "end_epoch", "raw_value": "1717440059.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:40:59", "plugin": "core", "name": "start_epoch", "raw_value": "1717440059.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-3", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 3, "time_seconds": 25.49089741706848, "inputs": {"input_file": {"src": "hda", "id": "8640633cd340e2c7"}, "min_size": "0", "max_size": "0", "min_quality": "1", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "a4b654e1c89d712f", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:41:33.639411", "create_time": "2024-06-03T18:41:23.850128", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-5fbks", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/8/e/6/dataset_8e6b6025-fabc-4c74-ac8c-2a7d494089ce.dat' '/galaxy/server/database/jobs_directory/000/36/configs/tmp0zhfl9iq' '/galaxy/server/database/objects/a/8/2/dataset_a820aeff-d97b-41f5-bdaa-c0cd5020e51d.dat' '/galaxy/server/database/objects/a/8/2/dataset_a820aeff-d97b-41f5-bdaa-c0cd5020e51d_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"1.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "8640633cd340e2c7", "src": "hda", "uuid": "8e6b6025-fabc-4c74-ac8c-2a7d494089ce"}}, "outputs": {"output_file": {"id": "3995d498066f64c1", "src": "hda", "uuid": "a820aeff-d97b-41f5-bdaa-c0cd5020e51d"}}, "output_collections": {}, "tool_stdout": "Kept 0 of 2 reads (0.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 0 of 2 reads (0.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:41:25", "plugin": "core", "name": "end_epoch", "raw_value": "1717440085.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:41:25", "plugin": "core", "name": "start_epoch", "raw_value": "1717440085.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-4", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 4, "time_seconds": 26.06800651550293, "inputs": {"input_file": {"src": "hda", "id": "be30e3e64187080b"}, "min_size": "0", "max_size": "0", "min_quality": "1", "max_quality": "0", "max_num_deviants": "1", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "266357f16a923e4a", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:41:59.867154", "create_time": "2024-06-03T18:41:48.989205", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-4szs5", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/3/4/3/dataset_343b3774-b534-424d-bf8b-9c223f53bb5d.dat' '/galaxy/server/database/jobs_directory/000/38/configs/tmp8rjye7yd' '/galaxy/server/database/objects/a/d/3/dataset_ad32ec26-081a-4a8b-ac52-77d527727a48.dat' '/galaxy/server/database/objects/a/d/3/dataset_ad32ec26-081a-4a8b-ac52-77d527727a48_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"1\"", "max_quality": "\"0.0\"", "min_quality": "\"1.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "be30e3e64187080b", "src": "hda", "uuid": "343b3774-b534-424d-bf8b-9c223f53bb5d"}}, "outputs": {"output_file": {"id": "aa44f08334397424", "src": "hda", "uuid": "ad32ec26-081a-4a8b-ac52-77d527727a48"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:41:51", "plugin": "core", "name": "end_epoch", "raw_value": "1717440111.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:41:51", "plugin": "core", "name": "start_epoch", "raw_value": "1717440111.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-5", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 5, "time_seconds": 25.670794010162354, "inputs": {"input_file": {"src": "hda", "id": "fdc9d8982c1fdae8"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "c3e3366ee6546867", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:42:25.527591", "create_time": "2024-06-03T18:42:15.485100", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-7l972", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/0/0/9/dataset_009d7bef-b318-4c2e-92e6-c9f85f9970e6.dat' '/galaxy/server/database/jobs_directory/000/40/configs/tmp3mhnay01' '/galaxy/server/database/objects/3/b/6/dataset_3b6191c5-8a16-455e-baf5-9436d23d71ca.dat' '/galaxy/server/database/objects/3/b/6/dataset_3b6191c5-8a16-455e-baf5-9436d23d71ca_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "fdc9d8982c1fdae8", "src": "hda", "uuid": "009d7bef-b318-4c2e-92e6-c9f85f9970e6"}}, "outputs": {"output_file": {"id": "891186dc558cc0dc", "src": "hda", "uuid": "3b6191c5-8a16-455e-baf5-9436d23d71ca"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:42:16", "plugin": "core", "name": "end_epoch", "raw_value": "1717440136.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:42:16", "plugin": "core", "name": "start_epoch", "raw_value": "1717440136.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-6", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 6, "time_seconds": 25.470900058746338, "inputs": {"input_file": {"src": "hda", "id": "6fceab20c8be2154"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "max", "fastq_filters_0|score_comparison": "<=", "fastq_filters_0|score": "92"}, "job": {"model_class": "Job", "id": "fc6227545f0a3886", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:42:50.862093", "create_time": "2024-06-03T18:42:40.984457", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-d8gpt", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/4/e/7/dataset_4e7314e7-1d77-4f33-a418-be3611776ad5.dat' '/galaxy/server/database/jobs_directory/000/42/configs/tmpzjlu9lte' '/galaxy/server/database/objects/e/a/6/dataset_ea619992-a7d6-453d-8e68-975c23a7bcfb.dat' '/galaxy/server/database/objects/e/a/6/dataset_ea619992-a7d6-453d-8e68-975c23a7bcfb_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"92.0\", \"score_comparison\": \"<=\", \"score_operation\": \"max\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "6fceab20c8be2154", "src": "hda", "uuid": "4e7314e7-1d77-4f33-a418-be3611776ad5"}}, "outputs": {"output_file": {"id": "fd5007f57c508933", "src": "hda", "uuid": "ea619992-a7d6-453d-8e68-975c23a7bcfb"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:42:42", "plugin": "core", "name": "end_epoch", "raw_value": "1717440162.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:42:42", "plugin": "core", "name": "start_epoch", "raw_value": "1717440162.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-7", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 7, "time_seconds": 26.193302392959595, "inputs": {"input_file": {"src": "hda", "id": "4f1b4b3d002e50e1"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1.075", "fastq_filters_0|offset_type|right_column_offset": "1.075", "fastq_filters_0|offset_type|base_offset_type": "offsets_percent", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "5f976882de3109c3", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:43:17.330944", "create_time": "2024-06-03T18:43:06.611604", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-s8dsj", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/d/3/5/dataset_d3501b23-2546-49fa-8cb9-a3ab75d65d25.dat' '/galaxy/server/database/jobs_directory/000/44/configs/tmpo5dvivgm' '/galaxy/server/database/objects/d/6/8/dataset_d68450e0-32c0-4446-8275-dc839df24e3c.dat' '/galaxy/server/database/objects/d/6/8/dataset_d68450e0-32c0-4446-8275-dc839df24e3c_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 1, \"base_offset_type\": \"offsets_percent\", \"left_column_offset\": \"1.075\", \"right_column_offset\": \"1.075\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "4f1b4b3d002e50e1", "src": "hda", "uuid": "d3501b23-2546-49fa-8cb9-a3ab75d65d25"}}, "outputs": {"output_file": {"id": "810d17c4b0cbb190", "src": "hda", "uuid": "d68450e0-32c0-4446-8275-dc839df24e3c"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:43:08", "plugin": "core", "name": "end_epoch", "raw_value": "1717440188.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:43:08", "plugin": "core", "name": "start_epoch", "raw_value": "1717440188.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-8", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 8, "time_seconds": 25.987425327301025, "inputs": {"input_file": {"src": "hda", "id": "58fe351b9124d0ef"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": true, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_percent", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "350bab2d012d8812", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:43:43.506694", "create_time": "2024-06-03T18:43:33.850669", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-lzhkx", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/d/b/6/dataset_db6fe19c-79d4-4086-9ec7-f3cc7571c353.dat' '/galaxy/server/database/jobs_directory/000/46/configs/tmpjzfwx3jm' '/galaxy/server/database/objects/3/4/1/dataset_34123927-caa7-4823-b6c3-55de3504e0e5.dat' '/galaxy/server/database/objects/3/4/1/dataset_34123927-caa7-4823-b6c3-55de3504e0e5_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 1, \"base_offset_type\": \"offsets_percent\", \"left_column_offset\": \"1.0\", \"right_column_offset\": \"1.0\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "true", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "58fe351b9124d0ef", "src": "hda", "uuid": "db6fe19c-79d4-4086-9ec7-f3cc7571c353"}}, "outputs": {"output_file": {"id": "66f582d80ff76065", "src": "hda", "uuid": "34123927-caa7-4823-b6c3-55de3504e0e5"}}, "output_collections": {}, "tool_stdout": "Kept 0 of 2 reads (0.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 0 of 2 reads (0.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:43:35", "plugin": "core", "name": "end_epoch", "raw_value": "1717440215.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:43:35", "plugin": "core", "name": "start_epoch", "raw_value": "1717440215.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-0", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 0, "time_seconds": 35.19016909599304, "inputs": {"input": {"src": "hda", "id": "9770a44aaa4e0d96"}, "linefilters_0|filter|regex_pattern": "^\\d+", "linefilters_0|filter|regex_action": "include_find", "linefilters_0|filter|filter_type": "regex", "linefilters_1|filter|filter_type": "append_line_num", "linefilters_2|filter|columns": "7,2,3,4,1", "linefilters_2|filter|filter_type": "select_columns", "linefilters_3|filter|column": "c4", "linefilters_3|filter|regex_pattern": "(\\d+)/(\\d+)/(\\d+)", "linefilters_3|filter|regex_replace": "19\\3-\\2-\\1", "linefilters_3|filter|filter_type": "replace"}, "job": {"model_class": "Job", "id": "f78fad7e7e462bfd", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:02:07.525895", "create_time": "2024-06-03T19:01:48.291605", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-mbjk7", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/e/8/1/dataset_e81d38f5-5275-495f-89db-c4a0c5cb53e3.dat' -j '/galaxy/server/database/jobs_directory/000/128/configs/tmphddc9u90' -o '/galaxy/server/database/objects/e/b/a/dataset_eba3e073-1862-4aad-ac88-defa16c40041.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 3, \"filter_type\": \"append_line_num\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 7, \"columns\": \"7,2,3,4,1\", \"filter_type\": \"select_columns\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": null, \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \"(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"regex_replace\": \"19\\\\3-\\\\2-\\\\1\"}}]"}, "inputs": {"input": {"id": "9770a44aaa4e0d96", "src": "hda", "uuid": "e81d38f5-5275-495f-89db-c4a0c5cb53e3"}}, "outputs": {"output": {"id": "d2faedf2890a82b9", "src": "hda", "uuid": "eba3e073-1862-4aad-ac88-defa16c40041"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:01:57", "plugin": "core", "name": "end_epoch", "raw_value": "1717441317.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:01:57", "plugin": "core", "name": "start_epoch", "raw_value": "1717441317.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-1", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 1, "time_seconds": 26.357253551483154, "inputs": {"input": {"src": "hda", "id": "356b2236bc8e8803"}, "linefilters_0|filter|comment_char": "35", "linefilters_0|filter|filter_type": "comment", "linefilters_1|filter|regex_pattern": "^\\d+", "linefilters_1|filter|regex_action": "include_find", "linefilters_1|filter|filter_type": "regex", "linefilters_2|filter|filter_type": "append_line_num", "linefilters_3|filter|columns": "c7,c5,c6", "linefilters_3|filter|filter_type": "select_columns", "linefilters_4|filter|columns": "c2,c3", "linefilters_4|filter|separator": ",", "linefilters_4|filter|filter_type": "normalize", "linefilters_5|filter|regex_pattern": "^\\d+\\t\\t", "linefilters_5|filter|regex_action": "exclude_match", "linefilters_5|filter|filter_type": "regex"}, "job": {"model_class": "Job", "id": "a11a207309d76b96", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:02:33.957558", "create_time": "2024-06-03T19:02:23.787465", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-2vqlv", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/8/2/1/dataset_82101646-6149-41b8-8622-350185b66541.dat' -j '/galaxy/server/database/jobs_directory/000/130/configs/tmpdrl7p0nj' -o '/galaxy/server/database/objects/c/8/8/dataset_c88e6fa4-cb21-4a3c-b5cc-59b49f3ff7f2.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 1, \"comment_char\": \"35\", \"filter_type\": \"comment\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 3, \"filter_type\": \"append_line_num\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 7, \"columns\": \"c7,c5,c6\", \"filter_type\": \"select_columns\"}}, {\"__index__\": 4, \"filter\": {\"__current_case__\": 9, \"columns\": \"c2,c3\", \"filter_type\": \"normalize\", \"separator\": \",\"}}, {\"__index__\": 5, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"exclude_match\", \"regex_pattern\": \"^\\\\d+\\\\t\\\\t\"}}]"}, "inputs": {"input": {"id": "356b2236bc8e8803", "src": "hda", "uuid": "82101646-6149-41b8-8622-350185b66541"}}, "outputs": {"output": {"id": "22c768464d68fd49", "src": "hda", "uuid": "c88e6fa4-cb21-4a3c-b5cc-59b49f3ff7f2"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:02:25", "plugin": "core", "name": "end_epoch", "raw_value": "1717441345.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:02:25", "plugin": "core", "name": "start_epoch", "raw_value": "1717441345.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-2", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 2, "time_seconds": 24.06717348098755, "inputs": {"input": {"src": "hda", "id": "e2be5b759b5cb85d"}, "linefilters_0|filter|regex_pattern": "^\\d+", "linefilters_0|filter|regex_action": "include_find", "linefilters_0|filter|filter_type": "regex", "linefilters_1|filter|column": "c4", "linefilters_1|filter|regex_pattern": ".*@(.*)", "linefilters_1|filter|regex_replace": "\\1", "linefilters_1|filter|add": "after", "linefilters_1|filter|filter_type": "replace", "linefilters_2|filter|column": "c4", "linefilters_2|filter|regex_pattern": ".*(com|org|net)$", "linefilters_2|filter|regex_replace": "\\1", "linefilters_2|filter|add": "append", "linefilters_2|filter|filter_type": "replace", "linefilters_3|filter|column": "c6", "linefilters_3|filter|regex_pattern": "^(\\d+)-(\\d+)-(\\d+)$", "linefilters_3|filter|regex_replace": "\\1", "linefilters_3|filter|add": "prepend", "linefilters_3|filter|filter_type": "replace"}, "job": {"model_class": "Job", "id": "09e9bde8aac7a97c", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:02:58.131556", "create_time": "2024-06-03T19:02:47.982963", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-ssrgw", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/b/0/e/dataset_b0e86d05-38c3-435a-8dfa-a6fa0723ef15.dat' -j '/galaxy/server/database/jobs_directory/000/132/configs/tmpzsbcxpfd' -o '/galaxy/server/database/objects/a/6/d/dataset_a6d24894-2b08-4c45-b757-04284687c0a5.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 8, \"add\": \"after\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*@(.*)\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 8, \"add\": \"append\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*(com|org|net)$\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": \"prepend\", \"column\": \"c6\", \"filter_type\": \"replace\", \"regex_pattern\": \"^(\\\\d+)-(\\\\d+)-(\\\\d+)$\", \"regex_replace\": \"\\\\1\"}}]"}, "inputs": {"input": {"id": "e2be5b759b5cb85d", "src": "hda", "uuid": "b0e86d05-38c3-435a-8dfa-a6fa0723ef15"}}, "outputs": {"output": {"id": "a6f4c9042ae8331f", "src": "hda", "uuid": "a6d24894-2b08-4c45-b757-04284687c0a5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:02:50", "plugin": "core", "name": "end_epoch", "raw_value": "1717441370.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:02:50", "plugin": "core", "name": "start_epoch", "raw_value": "1717441370.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "mummer_nucmer/4.0.0beta2+galaxy1-0", "has_data": true, "data": {"tool_id": "mummer_nucmer", "tool_version": "4.0.0beta2+galaxy1", "test_index": 0, "time_seconds": 55.21008634567261, "inputs": {"reference_sequence": {"src": "hda", "id": "aea4129ce482f225"}, "query_sequence": {"src": "hda", "id": "6382fc7c001137e9"}, "options|advanced": "defaults", "mumplot|sequences|seq_input": "yes", "mumplot|plot": "yes"}, "job": {"model_class": "Job", "id": "4f1b4b3d002e50e1", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:50:35.772627", "create_time": "2024-06-03T18:49:58.439652", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mummer_nucmer/mummer_nucmer/4.0.0beta2+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-nddgl", "command_line": "ln -s /galaxy/server/database/objects/a/0/d/dataset_a0d5ea46-875e-4f45-a2c5-1c95885ab40c.dat reference.fa && ln -s /galaxy/server/database/objects/e/e/3/dataset_ee386c8f-f112-40a6-8577-d93699022d4d.dat query.fa && nucmer  -b '200' -c '65' -D '5' -d '0.12'   -g '90' -l '20' -L '0'   --threads \"${GALAXY_SLOTS:-1}\" 'reference.fa' 'query.fa' && mummerplot -R '/galaxy/server/database/objects/a/0/d/dataset_a0d5ea46-875e-4f45-a2c5-1c95885ab40c.dat' -Q '/galaxy/server/database/objects/e/e/3/dataset_ee386c8f-f112-40a6-8577-d93699022d4d.dat'  -b '20'     -s 'small' -terminal png -title 'Title'  'out.delta' && gnuplot < out.gp", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mumplot": "{\"__current_case__\": 0, \"breaklen\": \"20\", \"color\": \"\", \"coverage\": \"\", \"fat\": false, \"filter\": false, \"labels\": {\"IDs\": \"no\", \"__current_case__\": 1}, \"plot\": \"yes\", \"range\": {\"__current_case__\": 1, \"custom\": \"no\"}, \"sequences\": {\"__current_case__\": 0, \"layout\": false, \"query_sequence\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"reference_sequence\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"seq_input\": \"yes\"}, \"size\": \"small\", \"snp\": false, \"title\": \"Title\"}", "options": "{\"__current_case__\": 1, \"advanced\": \"defaults\"}", "nosimplify": "false", "nooptimize": "false", "minalign": "\"0\"", "minmatch": "\"20\"", "maxgap": "\"90\"", "direction": "\"\"", "noextend": "false", "diagfactor": "\"0.12\"", "diagdiff": "\"5\"", "mincluster": "\"65\"", "breaklen": "\"200\"", "anchoring": "\"\""}, "inputs": {"reference_sequence": {"id": "aea4129ce482f225", "src": "hda", "uuid": "a0d5ea46-875e-4f45-a2c5-1c95885ab40c"}, "query_sequence": {"id": "6382fc7c001137e9", "src": "hda", "uuid": "ee386c8f-f112-40a6-8577-d93699022d4d"}, "mumplot|sequences|reference_sequence": {"id": "6382fc7c001137e9", "src": "hda", "uuid": "ee386c8f-f112-40a6-8577-d93699022d4d"}, "mumplot|sequences|query_sequence": {"id": "6382fc7c001137e9", "src": "hda", "uuid": "ee386c8f-f112-40a6-8577-d93699022d4d"}, "mumplot|sequences|query_sequence1": {"id": "6382fc7c001137e9", "src": "hda", "uuid": "ee386c8f-f112-40a6-8577-d93699022d4d"}}, "outputs": {"delta_output": {"id": "a00b1e3c77b12a31", "src": "hda", "uuid": "d885d4bb-7501-4818-b027-2aed46af414a"}, "png_output": {"id": "81ab170a37bce508", "src": "hda", "uuid": "66777542-ce3a-4454-add1-20043b225582"}}, "output_collections": {}, "tool_stdout": "gnuplot 5.2 patchlevel 7\n", "tool_stderr": "Reading delta file out.delta\nWriting plot files out.fplot, out.rplot, out.hplot\nWriting gnuplot script out.gp\nRendering plot out.png\nWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device\n", "job_stdout": "", "job_stderr": "", "stderr": "Reading delta file out.delta\nWriting plot files out.fplot, out.rplot, out.hplot\nWriting gnuplot script out.gp\nRendering plot out.png\nWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device\n", "stdout": "gnuplot 5.2 patchlevel 7\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:50:19", "plugin": "core", "name": "end_epoch", "raw_value": "1717440619.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:50:19", "plugin": "core", "name": "start_epoch", "raw_value": "1717440619.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "poretools_occupancy/0.6.1a1.1-0", "has_data": true, "data": {"tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1", "test_index": 0, "time_seconds": 56.33919167518616, "inputs": {"input": {"src": "hda", "id": "591436f0d2538a23"}, "extension": "png", "plot_type": "read_count"}, "job": {"model_class": "Job", "id": "58fe351b9124d0ef", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:51:33.729254", "create_time": "2024-06-03T18:50:54.473562", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-xxjtw", "command_line": "export MPLBACKEND=\"agg\" && poretools occupancy '/galaxy/server/database/objects/e/7/6/dataset_e769de10-bf68-4391-9735-7ef41e9c328b.dat' --saveas occupancy.png --plot-type read_count && mv occupancy.png '/galaxy/server/database/objects/e/5/d/dataset_e5de5ad3-2784-4093-a712-928efde9eb57.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_type": "\"read_count\"", "extension": "\"png\""}, "inputs": {"input": {"id": "591436f0d2538a23", "src": "hda", "uuid": "e769de10-bf68-4391-9735-7ef41e9c328b"}}, "outputs": {"output": {"id": "b0cb020e5712c036", "src": "hda", "uuid": "e5de5ad3-2784-4093-a712-928efde9eb57"}}, "output_collections": {}, "tool_stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:51:17", "plugin": "core", "name": "end_epoch", "raw_value": "1717440677.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:51:14", "plugin": "core", "name": "start_epoch", "raw_value": "1717440674.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_occupancy/0.6.1a1.1-1", "has_data": true, "data": {"tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1", "test_index": 1, "time_seconds": 30.27029824256897, "inputs": {"input": {"src": "hda", "id": "f5a18375c414d090"}, "extension": "pdf", "plot_type": "total_bp"}, "job": {"model_class": "Job", "id": "da09dcba8a3e15be", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:52:04.069243", "create_time": "2024-06-03T18:51:50.086234", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-vc649", "command_line": "export MPLBACKEND=\"agg\" && poretools occupancy '/galaxy/server/database/objects/1/4/b/dataset_14b81c83-74e0-4503-a1b9-c686f99ebbb6.dat' --saveas occupancy.pdf --plot-type total_bp && mv occupancy.pdf '/galaxy/server/database/objects/4/4/d/dataset_44dfb5e4-39fa-4b00-9253-6a2a65ea2716.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_type": "\"total_bp\"", "extension": "\"pdf\""}, "inputs": {"input": {"id": "f5a18375c414d090", "src": "hda", "uuid": "14b81c83-74e0-4503-a1b9-c686f99ebbb6"}}, "outputs": {"output": {"id": "5b246329e405541b", "src": "hda", "uuid": "44dfb5e4-39fa-4b00-9253-6a2a65ea2716"}}, "output_collections": {}, "tool_stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:51:54", "plugin": "core", "name": "end_epoch", "raw_value": "1717440714.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:51:51", "plugin": "core", "name": "start_epoch", "raw_value": "1717440711.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "retrieve_scxa/v0.0.2+galaxy2-0", "has_data": true, "data": {"tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2", "test_index": 0, "time_seconds": 54.06758499145508, "inputs": {"accession": "E-GEOD-100058", "matrix_type": "tpm"}, "job": {"model_class": "Job", "id": "5cebbdd86442579f", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:01:21.895766", "create_time": "2024-06-03T19:00:38.138771", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-vlbvn", "command_line": "wget -O exp_quant.zip 'https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=' && unzip exp_quant.zip; mv 'E-GEOD-100058'.expression_tpm.mtx /galaxy/server/database/objects/3/d/0/dataset_3d05517e-ba3f-4b3b-a7d0-b9a1aea79a94.dat && awk '{OFS=\"\\t\"; print $2,$2}' 'E-GEOD-100058'.expression_tpm.mtx_rows > /galaxy/server/database/objects/c/1/2/dataset_c12fda6d-0b35-429d-ab63-e5c97cea992b.dat && cut -f2 'E-GEOD-100058'.expression_tpm.mtx_cols > /galaxy/server/database/objects/c/2/6/dataset_c263a292-2b74-4acc-91de-0b6e2828edc1.dat;   wget -O exp_design.tsv 'https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=';", "traceback": null, "params": {"__input_ext": "\"data\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "matrix_type": "\"tpm\"", "accession": "\"E-GEOD-100058\""}, "inputs": {}, "outputs": {"matrix_mtx": {"id": "4c9aa92aa2654612", "src": "hda", "uuid": "3d05517e-ba3f-4b3b-a7d0-b9a1aea79a94"}, "genes_tsv": {"id": "ed2040a58a415940", "src": "hda", "uuid": "c12fda6d-0b35-429d-ab63-e5c97cea992b"}, "barcode_tsv": {"id": "ae1e7b00046ca53f", "src": "hda", "uuid": "c263a292-2b74-4acc-91de-0b6e2828edc1"}, "design_tsv": {"id": "b79f5af6b9016db9", "src": "hda", "uuid": "465dc018-5e46-437e-979b-9121553b275d"}}, "output_collections": {}, "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n", "tool_stderr": "--2024-06-03 19:00:43--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: 'exp_quant.zip'\n\n     0K .......... .......... .......... .......... ..........  188K\n    50K .......... .......... .......... .......... ..........  283K\n   100K .......... .......... .......... .......... ..........  283K\n   150K .......... .......... .......... .......... ..........  566K\n   200K .......... .......... .......... .......... ..........  564K\n   250K .......... .......... .......... .......... ..........  565K\n   300K .......... .......... .......... .......... ..........  566K\n   350K .......... .......... .......... .......... ..........  565K\n   400K .......... .......... .......... .......... .......... 1.19M\n   450K .......... .......... .......... .......... .......... 1.02M\n   500K .......... .......... .......... .......... ..........  566K\n   550K .......... .......... .......... .......... .......... 1.17M\n   600K .......... .......... .......... .......... .......... 1.04M\n   650K .......... .......... .......... .......... ..........  562K\n   700K .......... .......... .......... .......... ..........  117M\n   750K .......... .......... .......... .......... ..........  567K\n   800K .......... .......... .......... .......... .......... 1.16M\n   850K .......... .......... .......... .......... .......... 1.05M\n   900K .......... .......... .......... .......... .......... 1.17M\n   950K .......... .......... .......... .......... .......... 1.04M\n  1000K .......... .......... .......... .......... .......... 1.16M\n  1050K .......... .......... .......... .......... .......... 1.05M\n  1100K .......... .......... .......... .......... .......... 1.16M\n  1150K .......... .......... .......... .......... .......... 1.05M\n  1200K .......... .......... .......... .......... .......... 1.17M\n  1250K .......... .......... .......... .......... .......... 1.05M\n  1300K .......... .......... .......... .......... .......... 1.16M\n  1350K .......... .......... .......... .......... .......... 1.05M\n  1400K .......... .......... .......... .......... ..........  200M\n  1450K .......... .......... .......... .......... .......... 1.17M\n  1500K .......... .......... .......... .......... .......... 1.05M\n  1550K .......... .......... .......... .......... .......... 1.17M\n  1600K .......... .......... .......... .......... .......... 1.04M\n  1650K .......... .......... .......... .......... ..........  303M\n  1700K .......... .......... .......... .......... ..........  565K\n  1750K .......... .......... .......... .......... ..........  290M\n  1800K .......... .......... .......... .......... .......... 1.17M\n  1850K .......... .......... .......... .......... .......... 1.05M\n  1900K .......... .......... .......... .......... ..........  300M\n  1950K .......... .......... .......... .......... .......... 1.16M\n  2000K .......... .......... .......... .......... .......... 1.05M\n  2050K .......... .......... .......... .......... ..........  285M\n  2100K .......... .......... .......... .......... ..........  567K\n  2150K .......... .......... .......... .......... ..........  267M\n  2200K .......... .......... .......... .......... ..........  332M\n  2250K .......... .......... .......... .......... ..........  566K\n  2300K .......... .......... .......... .......... ..........  243M\n  2350K .......... .......... .......... .......... .......... 1.17M\n  2400K .......... .......... .......... .......... .......... 1.05M\n  2450K .......... .......... .......... .......... ..........  262M\n  2500K .......... .......... .......... .......... ..........  271M\n  2550K .......... .......... .......... .......... ..........  567K\n  2600K .......... .......... .......... .......... ..........  249M\n  2650K .......... .......... .......... .......... ..........  325M\n  2700K .......... .......... .......... .......... .......... 1.17M\n  2750K .......... .......... .......... .......... .......... 1.04M\n  2800K .......... .......... .......... .......... ..........  285M\n  2850K .......... .......... .......... .......... .......... 1.18M\n  2900K .......... .......... .......... .......... .......... 1.04M\n  2950K .......... .......... .......... .......... ..........  105M\n  3000K .......... .......... .......... .......... .......... 1.19M\n  3050K .......... .......... .......... .......... .......... 1.04M\n  3100K .......... .......... .......... .......... ..........  213M\n  3150K .......... .......... .......... .......... .......... 1.19M\n  3200K .......... .......... .......... .......... .......... 1.03M\n  3250K .......... .......... .......... .......... ..........  205M\n  3300K .......... .......... .......... .......... ..........  300M\n  3350K .......... .......... .......... .......... .......... 1.20M\n  3400K .......... .......... .......... .......... .......... 1.03M\n  3450K .......... .......... .......... .......... ..........  247M\n  3500K .......... .......... .......... .......... ..........  297M\n  3550K .......... .......... .......... .......... .......... 1.20M\n  3600K .......... .......... .......... .......... .......... 1.03M\n  3650K .......... .......... .......... .......... ..........  316M\n  3700K .......... .......... .......... .......... ..........  233M\n  3750K .......... .......... .......... .......... .......... 1.17M\n  3800K .......... .......... .......... .......... .......... 1.05M\n  3850K .......... .......... .......... .......... ..........  291M\n  3900K .......... .......... .......... .......... ..........  234M\n  3950K .......... .......... .......... .......... .......... 1.17M\n  4000K .......... .......... .......... .......... .......... 1.05M\n  4050K .......... .......... .......... .......... ..........  212M\n  4100K .......... .......... .......... .......... ..........  212M\n  4150K .......... .......... .......... .......... .......... 1.18M\n  4200K .......... .......... .......... .......... .......... 1.04M\n  4250K .......... .......... .......... .......... ..........  352M\n  4300K .......... .......... .......... .......... ..........  220M\n  4350K .......... .......... .......... .......... .......... 1.18M\n  4400K .......... .......... .......... .......... .......... 1.04M\n  4450K .......... .......... .......... .......... ..........  224M\n  4500K .......... .......... .......... .......... ..........  213M\n  4550K .......... .......... .......... .......... .......... 1.19M\n  4600K .......... .......... .......... .......... ..........  212M\n  4650K .......... .......... .......... .......... .......... 1.04M\n  4700K .......... .......... .......... .......... ..........  117M\n  4750K .......... .......... .......... .......... ..........  236M\n  4800K .......... .......... .......... .......... .......... 1.20M\n  4850K .......... .......... .......... .......... .......... 1.03M\n  4900K .......... .......... .......... .......... ..........  352M\n  4950K .......... .......... .......... .......... ..........  369M\n  5000K .......... .......... .......... .......... ..........  140M\n  5050K .......... .......... .......... .......... .......... 1.21M\n  5100K .......... .......... .......... .......... .......... 1.03M\n  5150K .......... .......... .......... .......... ..........  206M\n  5200K .......... .......... .......... .......... ..........  251M\n  5250K .......... .......... .......... .......... .......... 1.20M\n  5300K .......... .......... .......... .......... ..........  226M\n  5350K .......... .......... .......... .......... .......... 1.03M\n  5400K .......... .......... .......... .......... ..........  202M\n  5450K .......... .......... .......... .......... ..........  260M\n  5500K .......... .......... .......... .......... .......... 1.20M\n  5550K .......... .......... .......... .......... .......... 1.04M\n  5600K .......... .......... .......... .......... ..........  171M\n  5650K .......... .......... .......... .......... ..........  265M\n  5700K .......... .......... .......... .......... .......... 10.6M\n  5750K .......... .......... .......... .......... .......... 1.34M\n  5800K .......... .......... .......... .......... ..........  301M\n  5850K .......... .......... .......... .......... .......... 1.04M\n  5900K .......... .......... .......... .......... ..........  336M\n  5950K .......... .......... .......... .......... .......... 9.34M\n  6000K .......... .......... .......... .......... .......... 1.36M\n  6050K .......... .......... .......... .......... ..........  301M\n  6100K .......... .......... .......... .......... .......... 1.04M\n  6150K .......... .......... .......... .......... ..........  295M\n  6200K .......... .......... .......... .......... ..........  310M\n  6250K .......... .......... .......... .......... .......... 6.46M\n  6300K .......... .......... .......... .......... .......... 1.44M\n  6350K .......... .......... .......... .......... .......... 1.04M\n  6400K .......... .......... .......... .......... ..........  233M\n  6450K .......... .......... .......... .......... ..........  236M\n  6500K .......... .......... .......... .......... .......... 9.48M\n  6550K .......... .......... .......... .......... .......... 1.35M\n  6600K .......... .......... .......... .......... ..........  265M\n  6650K .......... .......... .......... .......... .......... 1.05M\n  6700K .......... .......... .......... .......... ..........  248M\n  6750K .......... .......... .......... .......... ..........  196M\n  6800K .......... .......... .......... .......... .......... 8.98M\n  6850K .......... .......... .......... .......... .......... 1.36M\n  6900K .......... .......... .......... .......... ..........  279M\n  6950K .......... .......... .......... .......... .......... 1.05M\n  7000K .......... .......... .......... .......... ..........  171M\n  7050K .......... .......... .......... .......... ..........  187M\n  7100K .......... .......... .......... .......... .......... 8.55M\n  7150K .......... .......... .......... .......... .......... 1.35M\n  7200K .......... .......... .......... .......... ..........  208M\n  7250K .......... .......... .......... .......... .......... 1.06M\n  7300K .......... .......... .......... .......... ..........  248M\n  7350K .......... .......... .......... .......... ..........  347M\n  7400K .......... .......... .......... .......... .......... 8.59M\n  7450K .......... .......... .......... .......... .......... 24.1M\n  7500K .......... .......... .......... .......... .......... 1.42M\n  7550K .......... .......... .......... .......... ..........  377K\n  7600K .......... .......... .......... .......... ..........  185M\n  7650K .......... .......... .......... .......... ..........  327M\n  7700K .......... .......... .......... .......... ..........  275M\n  7750K .......... .......... .......... .......... ..........  182M\n  7800K .......... .......... .......... .......... ..........  190M\n  7850K .......... .......... .......... .......... ..........  212M\n  7900K .......... .......... .......... .......... .......... 24.8M\n  7950K .......... .......... .......... .......... .......... 7.67M\n  8000K .......... .......... .......... .......... .......... 11.2M\n  8050K .......... .......... .......... .......... .......... 1.61M\n  8100K .......... .......... .......... .......... .......... 1.04M\n  8150K .......... .......... .......... .......... ..........  213M\n  8200K .......... .......... .......... .......... .......... 7.65M\n  8250K .......... .......... .......... .......... .......... 11.5M\n  8300K .......... .......... .......... .......... .......... 1.59M\n  8350K .......... .......... .......... .......... .......... 1.04M\n  8400K .......... .......... .......... .......... ..........  195M\n  8450K .......... .......... .......... .......... .......... 4.42M\n  8500K .......... .......... .......... .......... .......... 1.62M\n  8550K .......... .......... .......... .......... ..........  273M\n  8600K .......... .......... .......... .......... .......... 1.04M\n  8650K .......... .......... .......... .......... ..........  282M\n  8700K .......... .......... .......... .......... .......... 4.27M\n  8750K .......... .......... .......... .......... .......... 1.64M\n  8800K .......... .......... .......... .......... .......... 1.07M\n  8850K .......... .......... .......... .......... .......... 32.9M\n  8900K .......... .......... .......... .......... ..........  117M\n  8950K .......... .......... .......... .......... .......... 4.25M\n  9000K .......... .......... .......... .......... .......... 1.64M\n  9050K .......... .......... .......... .......... ..........  341M\n  9100K .......... .......... .......... .......... .......... 1.04M\n  9150K .......... .......... .......... .......... .......... 7.51M\n  9200K .......... .......... .......... .......... .......... 9.55M\n  9250K .......... .......... .......... .......... .......... 1.62M\n  9300K .......... .......... .......... .......... ..........  205M\n  9350K .......... .......... .......... .......... .......... 1.05M\n  9400K .......... .......... .......... .......... ..........  147M\n  9450K .......... .......... .......... .......... .......... 4.40M\n  9500K .......... .......... .......... .......... .......... 1.61M\n  9550K .......... .......... .......... .......... .......... 1.07M\n  9600K .......... .......... .......... .......... .......... 40.9M\n  9650K .......... .......... .......... .......... .......... 96.4M\n  9700K .......... .......... .......... .......... .......... 4.53M\n  9750K .......... .......... .......... .......... .......... 1.61M\n  9800K .......... .......... .......... .......... ..........  203M\n  9850K .......... .......... .......... .......... .......... 1.06M\n  9900K .......... .......... .......... .......... .......... 75.0M\n  9950K .......... .......... .......... .......... .......... 6.95M\n 10000K .......... .......... .......... .......... .......... 11.0M\n 10050K .......... .......... .......... .......... .......... 1.57M\n 10100K .......... .......... .......... .......... .......... 1.08M\n 10150K .......... .......... .......... .......... ..........  318M\n 10200K .......... .......... .......... .......... .......... 6.19M\n 10250K .......... .......... .......... .......... .......... 12.1M\n 10300K .......... .......... .......... .......... .......... 1.57M\n 10350K .......... .......... .......... .......... .......... 1.08M\n 10400K .......... .......... .......... .......... .......... 16.8M\n 10450K .......... .......... .......... .......... ..........  209M\n 10500K .......... .......... .......... .......... .......... 5.39M\n 10550K .......... .......... .......... .......... .......... 1.57M\n 10600K .......... .......... .......... .......... ..........  130M\n 10650K .......... .......... .......... .......... .......... 1.09M\n 10700K .......... .......... .......... .......... .......... 16.5M\n 10750K .......... .......... .......... .......... .......... 8.93M\n 10800K .......... .......... .......... .......... .......... 10.9M\n 10850K .......... .......... .......... .......... .......... 1.59M\n 10900K .......... .......... .......... .......... .......... 1.09M\n 10950K .......... .......... .......... .......... .......... 16.4M\n 11000K .......... .......... .......... .......... ..........  228M\n 11050K .......... .......... .......... .......... .......... 4.97M\n 11100K .......... .......... .......... .......... .......... 1.60M\n 11150K .......... .......... .......... .......... ..........  131M\n 11200K .......... .......... .......... .......... .......... 1.09M\n 11250K .......... .......... .......... .......... .......... 20.0M\n 11300K .......... .......... .......... .......... .......... 8.34M\n 11350K .......... .......... .......... .......... .......... 10.3M\n 11400K .......... .......... .......... .......... .......... 1.28M\n 11450K .......... .......... .......... .......... ..........  240M\n 11500K .......... .......... .......... .......... .......... 1.23M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 70.9M\n 50150K .......... .......... .......... .......... .......... 3.24M\n 50200K .......... .......... .......... .......... .......... 45.9M\n 50250K .......... .......... .......... .......... .......... 4.30M\n 50300K .......... .......... .......... .......... .......... 4.90M\n 50350K .......... .......... .......... .......... ..........  979K\n 50400K .......... .......... .......... .......... .......... 3.37M\n 50450K .......... .......... .......... .......... ..........  218M\n 50500K .......... .......... .......... .......... .......... 7.35M\n 50550K .......... .......... .......... .......... .......... 5.29M\n 50600K .......... .......... .......... .......... .......... 3.99M\n 50650K .......... .......... .......... .......... .......... 1.07M\n 50700K .......... .......... .......... .......... .......... 3.33M\n 50750K .......... .......... .......... .......... ..........  318M\n 50800K .......... .......... .......... .......... .......... 3.80M\n 50850K .......... .......... .......... .......... .......... 4.95M\n 50900K .......... .......... .......... .......... ..........  987K\n 50950K .......... .......... .......... .......... ..........  211M\n 51000K .......... .......... .......... .......... .......... 3.31M\n 51050K .......... .......... .......... .......... .......... 16.3M\n 51100K .......... .......... .......... .......... .......... 4.88M\n 51150K .......... .......... .......... .......... .......... 4.75M\n 51200K .......... .......... .......... .......... ..........  991K\n 51250K .......... .......... .......... .......... .......... 3.37M\n 51300K .......... .......... .......... .......... ..........  149M\n 51350K .......... .......... .......... .......... .......... 6.71M\n 51400K .......... .......... .......... .......... .......... 7.92M\n 51450K .......... .......... .......... .......... .......... 3.38M\n 51500K .......... .......... .......... .......... .......... 1.07M\n 51550K .......... .......... .......... .......... .......... 3.22M\n 51600K .......... .......... .......... .......... ..........  209M\n 51650K .......... .......... .......... .......... .......... 7.16M\n 51700K .......... .......... .......... .......... .......... 2.75M\n 51750K .......... .......... .......... .......... .......... 18.1M\n 51800K .......... .......... .......... .......... .......... 1.05M\n 51850K .......... .......... .......... .......... .......... 3.42M\n 51900K .......... .......... .......... .......... ..........  360M\n 51950K .......... .......... .......... .......... .......... 6.77M\n 52000K .......... .......... .......... .......... .......... 2.75M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... ..........  159M\n 52150K .......... .......... .......... .......... .......... 3.37M\n 52200K .......... .......... .......... .......... .......... 15.1M\n 52250K .......... .......... .......... .......... .......... 4.77M\n 52300K .......... .......... .......... .......... .......... 3.79M\n 52350K .......... .......... .......... .......... .......... 1.03M\n 52400K .......... .......... .......... .......... .......... 3.40M\n 52450K .......... .......... .......... .......... ..........  159M\n 52500K .......... .......... .......... .......... .......... 16.7M\n 52550K .......... .......... .......... .......... .......... 4.61M\n 52600K .......... .......... .......... .......... .......... 3.83M\n 52650K .......... .......... .......... .......... .......... 1.03M\n 52700K .......... .......... .......... .......... ..........  225M\n 52750K .......... .......... .......... .......... .......... 3.35M\n 52800K .......... .......... .......... .......... .......... 6.15M\n 52850K .......... .......... .......... .......... .......... 9.31M\n 52900K .......... .......... .......... .......... .......... 3.86M\n 52950K .......... .......... .......... .......... .......... 1.02M\n 53000K .......... .......... .......... .......... .......... 3.34M\n 53050K .......... .......... .......... .......... ..........  322M\n 53100K .......... .......... .......... .......... .......... 15.7M\n 53150K .......... .......... .......... .......... .......... 4.80M\n 53200K .......... .......... .......... .......... .......... 3.87M\n 53250K .......... .......... .......... .......... .......... 1.02M\n 53300K .......... .......... .......... .......... .......... 3.38M\n 53350K .......... .......... .......... .......... ..........  206M\n 53400K .......... .......... .......... .......... .......... 15.8M\n 53450K .......... .......... .......... .......... .......... 4.84M\n 53500K .......... .......... .......... .......... .......... 3.89M\n 53550K .......... .......... .......... .......... .......... 1.02M\n 53600K .......... .......... .......... .......... .......... 3.34M\n 53650K .......... .......... .......... .......... ..........  264M\n 53700K .......... .......... .......... .......... .......... 15.8M\n 53750K .......... .......... .......... .......... .......... 4.89M\n 53800K .......... .......... .......... .......... .......... 3.87M\n 53850K .......... .......... .......... .......... .......... 1.02M\n 53900K .......... .......... .......... .......... ..........  330M\n 53950K .......... .......... .......... .......... .......... 3.30M\n 54000K .......... .......... .......... .......... .......... 18.2M\n 54050K .......... .......... .......... .......... .......... 4.73M\n 54100K .......... .......... .......... .......... .......... 3.78M\n 54150K .......... .......... .......... .......... .......... 1.01M\n 54200K .......... .......... .......... .......... ..........  176M\n 54250K .......... .......... .......... .......... .......... 3.49M\n 54300K .......... .......... .......... .......... ..........  234M\n 54350K .......... .......... .......... .......... .......... 3.61M\n 54400K .......... .......... .......... .......... .......... 3.99M\n 54450K .......... .......... .......... .......... .......... 1.02M\n 54500K .......... .......... .......... .......... ..........  203M\n 54550K .......... .......... .......... .......... .......... 2.92M\n 54600K .......... .......... .......... .......... ..........  217M\n 54650K .......... .......... .......... .......... .......... 9.80M\n 54700K .......... .......... .......... .......... .......... 6.91M\n 54750K .......... .......... .......... .......... .......... 4.16M\n 54800K .......... .......... .......... .......... .......... 1.02M\n 54850K .......... .......... .......... .......... .......... 3.04M\n 54900K .......... .......... .......... .......... ..........  125M\n 54950K .......... .......... .......... .......... .......... 55.2M\n 55000K .......... .......... .......... .......... .......... 4.42M\n 55050K .......... .......... .......... .......... .......... 4.08M\n 55100K .......... .......... .......... .......... .......... 1.02M\n 55150K .......... .......... .......... .......... .......... 48.3M\n 55200K .......... .......... .......... .......... .......... 3.12M\n 55250K .......... .......... .......... .......... .......... 49.1M\n 55300K .......... .......... .......... .......... .......... 4.40M\n 55350K .......... .......... .......... .......... .......... 16.9M\n 55400K .......... .......... .......... .......... .......... 5.24M\n 55450K .......... .......... .......... .......... .......... 1.02M\n 55500K .......... .......... .......... .......... .......... 2.87M\n 55550K .......... .......... .......... .......... ..........  211M\n 55600K .......... .......... .......... .......... .......... 7.67M\n 55650K .......... .......... .......... .......... .......... 9.34M\n 55700K .......... .......... .......... .......... .......... 4.02M\n 55750K .......... .......... .......... .......... .......... 1.03M\n 55800K .......... .......... .......... .......... .......... 44.3M\n 55850K .......... .......... .......... .......... .......... 3.01M\n 55900K .......... .......... .......... .......... ..........  224M\n 55950K .......... .......... .......... .......... .......... 4.28M\n 56000K .......... .......... .......... .......... .......... 4.02M\n 56050K .......... .......... .......... .......... .......... 1.09M\n 56100K .......... .......... .......... .......... .......... 18.4M\n 56150K .......... .......... .......... .......... .......... 2.87M\n 56200K .......... .......... .......... .......... ..........  173M\n 56250K .......... .......... .......... .......... ..........  100M\n 56300K .......... .......... .......... .......... .......... 4.44M\n 56350K .......... .......... .......... .......... .......... 3.82M\n 56400K .......... .......... .......... .......... .......... 1.04M\n 56450K .......... .......... .......... .......... .......... 34.9M\n 56500K .......... .......... .......... .......... .......... 3.06M\n 56550K .......... .......... .......... .......... ..........  224M\n 56600K .......... .......... .......... .......... .......... 6.09M\n 56650K .......... .......... .......... .......... .......... 12.7M\n 56700K .......... .......... .......... .......... .......... 3.53M\n 56750K .......... .......... .......... .......... .......... 1.08M\n 56800K .......... .......... .......... .......... .......... 2.84M\n 56850K .......... .......... .......... .......... ..........  273M\n 56900K .......... .......... .......... .......... .......... 38.9M\n 56950K .......... .......... .......... .......... .......... 4.66M\n 57000K .......... .......... .......... .......... .......... 9.42M\n 57050K .......... .......... .......... .......... .......... 5.46M\n 57100K .......... .......... .......... .......... .......... 1.08M\n 57150K .......... .......... .......... .......... .......... 2.85M\n 57200K .......... .......... .......... .......... ..........  176M\n 57250K .......... .......... .......... .......... .......... 32.7M\n 57300K .......... .......... .......... .......... .......... 4.67M\n 57350K .......... .......... .......... .......... .......... 3.53M\n 57400K .......... .......... .......... .......... .......... 1.13M\n 57450K .......... .......... .......... .......... .......... 22.9M\n 57500K .......... .......... .......... .......... .......... 2.86M\n 57550K .......... .......... .......... .......... ..........  127M\n 57600K .......... .......... .......... .......... .......... 7.82M\n 57650K .......... .......... .......... .......... .......... 8.38M\n 57700K .......... .......... .......... .......... .......... 3.57M\n 57750K .......... .......... .......... .......... .......... 1.13M\n 57800K .......... .......... .......... .......... .......... 31.5M\n 57850K .......... .......... .......... .......... .......... 2.64M\n 57900K .......... .......... .......... .......... ..........  194M\n 57950K .......... .......... .......... .......... .......... 10.1M\n 58000K .......... .......... .......... .......... .......... 7.35M\n 58050K .......... .......... .......... .......... .......... 3.39M\n 58100K .......... .......... .......... .......... .......... 1.15M\n 58150K .......... .......... .......... .......... .......... 32.1M\n 58200K .......... .......... .......... .......... .......... 2.58M\n 58250K .......... .......... .......... .......... ..........  243M\n 58300K .......... .......... .......... .......... ..........  217M\n 58350K .......... .......... .......... .......... .......... 4.72M\n 58400K .......... .......... .......... .......... .......... 3.31M\n 58450K .......... .......... .......... .......... .......... 1.16M\n 58500K .......... .......... .......... .......... .......... 29.0M\n 58550K .......... .......... .......... .......... .......... 2.57M\n 58600K .......... .......... .......... .......... ..........  220M\n 58650K .......... .......... .......... .......... .......... 67.0M\n 58700K .......... .......... .......... .......... .......... 5.46M\n 58750K .......... .......... .......... .......... .......... 3.10M\n 58800K .......... .......... .......... .......... .......... 1.16M\n 58850K .......... .......... .......... .......... .......... 29.3M\n 58900K .......... .......... .......... .......... ..........  156M\n 58950K .......... .......... .......... .......... .......... 2.50M\n 59000K .......... .......... .......... .......... ..........  166M\n 59050K .......... .......... .......... .......... .......... 10.5M\n 59100K .......... .......... .......... .......... .......... 4.68M\n 59150K .......... .......... .......... .......... .......... 4.63M\n 59200K .......... .......... .......... .......... .......... 1.15M\n 59250K .......... .......... .......... .......... ..........  253M\n 59300K .......... .......... .......... .......... .......... 2.49M\n 59350K .......... .......... .......... .......... ..........  171M\n 59400K .......... .......... .......... .......... .......... 10.1M\n 59450K .......... .......... .......... .......... .......... 8.04M\n 59500K .......... .......... .......... .......... .......... 3.24M\n 59550K .......... .......... .......... .......... .......... 1.16M\n 59600K .......... .......... .......... .......... ..........  107M\n 59650K .......... .......... .......... .......... .......... 2.53M\n 59700K .......... .......... .......... .......... ..........  245M\n 59750K .......... .......... .......... .......... ..........  207M\n 59800K .......... .......... .......... .......... .......... 4.97M\n 59850K .......... .......... .......... .......... .......... 8.28M\n 59900K .......... .......... .......... .......... .......... 4.66M\n 59950K .......... .......... .......... .......... .......... 1.16M\n 60000K .......... .......... .......... .......... .......... 84.3M\n 60050K .......... .......... .......... .......... .......... 2.56M\n 60100K .......... .......... .......... .......... ..........  344M\n 60150K .......... .......... .......... .......... .......... 8.88M\n 60200K .......... .......... .......... .......... .......... 7.58M\n 60250K .......... .......... .......... .......... .......... 3.35M\n 60300K .......... .......... .......... .......... .......... 1.16M\n 60350K .......... .......... .......... .......... ..........  163M\n 60400K .......... .......... .......... .......... .......... 2.52M\n 60450K .......... .......... .......... .......... ..........  230M\n 60500K .......... .......... .......... .......... ..........  148M\n 60550K .......... .......... .......... .......... .......... 4.79M\n 60600K .......... .......... .......... .......... .......... 21.4M\n 60650K .......... .........                                   5.80M=22s\n\n2024-06-03 19:01:05 (2.72 MB/s) - 'exp_quant.zip' saved [62125370]\n\n--2024-06-03 19:01:09--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: 'exp_design.tsv'\n\n     0K .......... .......... .......... .......... ..........  6%  188K 4s\n    50K .......... .......... .......... .......... .......... 12%  283K 3s\n   100K .......... .......... .......... .......... .......... 18%  566K 2s\n   150K .......... .......... .......... .......... .......... 24%  565K 2s\n   200K .......... .......... .......... .......... .......... 30%  564K 2s\n   250K .......... .......... .......... .......... .......... 36%  562K 1s\n   300K .......... .......... .......... .......... .......... 42%  388M 1s\n   350K .......... .......... .......... .......... .......... 48%  563K 1s\n   400K .......... .......... .......... .......... .......... 54%  565K 1s\n   450K .......... .......... .......... .......... .......... 60%  566K 1s\n   500K .......... .......... .......... .......... .......... 66%  565K 1s\n   550K .......... .......... .......... .......... .......... 72%  317M 0s\n   600K .......... .......... .......... .......... .......... 78%  565K 0s\n   650K .......... .......... .......... .......... .......... 84%  562K 0s\n   700K .......... .......... .......... .......... .......... 90%  392M 0s\n   750K .......... .......... .......... .......... .......... 96%  561K 0s\n   800K .......... .......... .......                         100%  314M=1.4s\n\n2024-06-03 19:01:10 (584 KB/s) - 'exp_design.tsv' saved [847657/847657]\n\n", "job_stdout": "", "job_stderr": "", "stderr": "--2024-06-03 19:00:43--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: 'exp_quant.zip'\n\n     0K .......... .......... .......... .......... ..........  188K\n    50K .......... .......... .......... .......... ..........  283K\n   100K .......... .......... .......... .......... ..........  283K\n   150K .......... .......... .......... .......... ..........  566K\n   200K .......... .......... .......... .......... ..........  564K\n   250K .......... .......... .......... .......... ..........  565K\n   300K .......... .......... .......... .......... ..........  566K\n   350K .......... .......... .......... .......... ..........  565K\n   400K .......... .......... .......... .......... .......... 1.19M\n   450K .......... .......... .......... .......... .......... 1.02M\n   500K .......... .......... .......... .......... ..........  566K\n   550K .......... .......... .......... .......... .......... 1.17M\n   600K .......... .......... .......... .......... .......... 1.04M\n   650K .......... .......... .......... .......... ..........  562K\n   700K .......... .......... .......... .......... ..........  117M\n   750K .......... .......... .......... .......... ..........  567K\n   800K .......... .......... .......... .......... .......... 1.16M\n   850K .......... .......... .......... .......... .......... 1.05M\n   900K .......... .......... .......... .......... .......... 1.17M\n   950K .......... .......... .......... .......... .......... 1.04M\n  1000K .......... .......... .......... .......... .......... 1.16M\n  1050K .......... .......... .......... .......... .......... 1.05M\n  1100K .......... .......... .......... .......... .......... 1.16M\n  1150K .......... .......... .......... .......... .......... 1.05M\n  1200K .......... .......... .......... .......... .......... 1.17M\n  1250K .......... .......... .......... .......... .......... 1.05M\n  1300K .......... .......... .......... .......... .......... 1.16M\n  1350K .......... .......... .......... .......... .......... 1.05M\n  1400K .......... .......... .......... .......... ..........  200M\n  1450K .......... .......... .......... .......... .......... 1.17M\n  1500K .......... .......... .......... .......... .......... 1.05M\n  1550K .......... .......... .......... .......... .......... 1.17M\n  1600K .......... .......... .......... .......... .......... 1.04M\n  1650K .......... .......... .......... .......... ..........  303M\n  1700K .......... .......... .......... .......... ..........  565K\n  1750K .......... .......... .......... .......... ..........  290M\n  1800K .......... .......... .......... .......... .......... 1.17M\n  1850K .......... .......... .......... .......... .......... 1.05M\n  1900K .......... .......... .......... .......... ..........  300M\n  1950K .......... .......... .......... .......... .......... 1.16M\n  2000K .......... .......... .......... .......... .......... 1.05M\n  2050K .......... .......... .......... .......... ..........  285M\n  2100K .......... .......... .......... .......... ..........  567K\n  2150K .......... .......... .......... .......... ..........  267M\n  2200K .......... .......... .......... .......... ..........  332M\n  2250K .......... .......... .......... .......... ..........  566K\n  2300K .......... .......... .......... .......... ..........  243M\n  2350K .......... .......... .......... .......... .......... 1.17M\n  2400K .......... .......... .......... .......... .......... 1.05M\n  2450K .......... .......... .......... .......... ..........  262M\n  2500K .......... .......... .......... .......... ..........  271M\n  2550K .......... .......... .......... .......... ..........  567K\n  2600K .......... .......... .......... .......... ..........  249M\n  2650K .......... .......... .......... .......... ..........  325M\n  2700K .......... .......... .......... .......... .......... 1.17M\n  2750K .......... .......... .......... .......... .......... 1.04M\n  2800K .......... .......... .......... .......... ..........  285M\n  2850K .......... .......... .......... .......... .......... 1.18M\n  2900K .......... .......... .......... .......... .......... 1.04M\n  2950K .......... .......... .......... .......... ..........  105M\n  3000K .......... .......... .......... .......... .......... 1.19M\n  3050K .......... .......... .......... .......... .......... 1.04M\n  3100K .......... .......... .......... .......... ..........  213M\n  3150K .......... .......... .......... .......... .......... 1.19M\n  3200K .......... .......... .......... .......... .......... 1.03M\n  3250K .......... .......... .......... .......... ..........  205M\n  3300K .......... .......... .......... .......... ..........  300M\n  3350K .......... .......... .......... .......... .......... 1.20M\n  3400K .......... .......... .......... .......... .......... 1.03M\n  3450K .......... .......... .......... .......... ..........  247M\n  3500K .......... .......... .......... .......... ..........  297M\n  3550K .......... .......... .......... .......... .......... 1.20M\n  3600K .......... .......... .......... .......... .......... 1.03M\n  3650K .......... .......... .......... .......... ..........  316M\n  3700K .......... .......... .......... .......... ..........  233M\n  3750K .......... .......... .......... .......... .......... 1.17M\n  3800K .......... .......... .......... .......... .......... 1.05M\n  3850K .......... .......... .......... .......... ..........  291M\n  3900K .......... .......... .......... .......... ..........  234M\n  3950K .......... .......... .......... .......... .......... 1.17M\n  4000K .......... .......... .......... .......... .......... 1.05M\n  4050K .......... .......... .......... .......... ..........  212M\n  4100K .......... .......... .......... .......... ..........  212M\n  4150K .......... .......... .......... .......... .......... 1.18M\n  4200K .......... .......... .......... .......... .......... 1.04M\n  4250K .......... .......... .......... .......... ..........  352M\n  4300K .......... .......... .......... .......... ..........  220M\n  4350K .......... .......... .......... .......... .......... 1.18M\n  4400K .......... .......... .......... .......... .......... 1.04M\n  4450K .......... .......... .......... .......... ..........  224M\n  4500K .......... .......... .......... .......... ..........  213M\n  4550K .......... .......... .......... .......... .......... 1.19M\n  4600K .......... .......... .......... .......... ..........  212M\n  4650K .......... .......... .......... .......... .......... 1.04M\n  4700K .......... .......... .......... .......... ..........  117M\n  4750K .......... .......... .......... .......... ..........  236M\n  4800K .......... .......... .......... .......... .......... 1.20M\n  4850K .......... .......... .......... .......... .......... 1.03M\n  4900K .......... .......... .......... .......... ..........  352M\n  4950K .......... .......... .......... .......... ..........  369M\n  5000K .......... .......... .......... .......... ..........  140M\n  5050K .......... .......... .......... .......... .......... 1.21M\n  5100K .......... .......... .......... .......... .......... 1.03M\n  5150K .......... .......... .......... .......... ..........  206M\n  5200K .......... .......... .......... .......... ..........  251M\n  5250K .......... .......... .......... .......... .......... 1.20M\n  5300K .......... .......... .......... .......... ..........  226M\n  5350K .......... .......... .......... .......... .......... 1.03M\n  5400K .......... .......... .......... .......... ..........  202M\n  5450K .......... .......... .......... .......... ..........  260M\n  5500K .......... .......... .......... .......... .......... 1.20M\n  5550K .......... .......... .......... .......... .......... 1.04M\n  5600K .......... .......... .......... .......... ..........  171M\n  5650K .......... .......... .......... .......... ..........  265M\n  5700K .......... .......... .......... .......... .......... 10.6M\n  5750K .......... .......... .......... .......... .......... 1.34M\n  5800K .......... .......... .......... .......... ..........  301M\n  5850K .......... .......... .......... .......... .......... 1.04M\n  5900K .......... .......... .......... .......... ..........  336M\n  5950K .......... .......... .......... .......... .......... 9.34M\n  6000K .......... .......... .......... .......... .......... 1.36M\n  6050K .......... .......... .......... .......... ..........  301M\n  6100K .......... .......... .......... .......... .......... 1.04M\n  6150K .......... .......... .......... .......... ..........  295M\n  6200K .......... .......... .......... .......... ..........  310M\n  6250K .......... .......... .......... .......... .......... 6.46M\n  6300K .......... .......... .......... .......... .......... 1.44M\n  6350K .......... .......... .......... .......... .......... 1.04M\n  6400K .......... .......... .......... .......... ..........  233M\n  6450K .......... .......... .......... .......... ..........  236M\n  6500K .......... .......... .......... .......... .......... 9.48M\n  6550K .......... .......... .......... .......... .......... 1.35M\n  6600K .......... .......... .......... .......... ..........  265M\n  6650K .......... .......... .......... .......... .......... 1.05M\n  6700K .......... .......... .......... .......... ..........  248M\n  6750K .......... .......... .......... .......... ..........  196M\n  6800K .......... .......... .......... .......... .......... 8.98M\n  6850K .......... .......... .......... .......... .......... 1.36M\n  6900K .......... .......... .......... .......... ..........  279M\n  6950K .......... .......... .......... .......... .......... 1.05M\n  7000K .......... .......... .......... .......... ..........  171M\n  7050K .......... .......... .......... .......... ..........  187M\n  7100K .......... .......... .......... .......... .......... 8.55M\n  7150K .......... .......... .......... .......... .......... 1.35M\n  7200K .......... .......... .......... .......... ..........  208M\n  7250K .......... .......... .......... .......... .......... 1.06M\n  7300K .......... .......... .......... .......... ..........  248M\n  7350K .......... .......... .......... .......... ..........  347M\n  7400K .......... .......... .......... .......... .......... 8.59M\n  7450K .......... .......... .......... .......... .......... 24.1M\n  7500K .......... .......... .......... .......... .......... 1.42M\n  7550K .......... .......... .......... .......... ..........  377K\n  7600K .......... .......... .......... .......... ..........  185M\n  7650K .......... .......... .......... .......... ..........  327M\n  7700K .......... .......... .......... .......... ..........  275M\n  7750K .......... .......... .......... .......... ..........  182M\n  7800K .......... .......... .......... .......... ..........  190M\n  7850K .......... .......... .......... .......... ..........  212M\n  7900K .......... .......... .......... .......... .......... 24.8M\n  7950K .......... .......... .......... .......... .......... 7.67M\n  8000K .......... .......... .......... .......... .......... 11.2M\n  8050K .......... .......... .......... .......... .......... 1.61M\n  8100K .......... .......... .......... .......... .......... 1.04M\n  8150K .......... .......... .......... .......... ..........  213M\n  8200K .......... .......... .......... .......... .......... 7.65M\n  8250K .......... .......... .......... .......... .......... 11.5M\n  8300K .......... .......... .......... .......... .......... 1.59M\n  8350K .......... .......... .......... .......... .......... 1.04M\n  8400K .......... .......... .......... .......... ..........  195M\n  8450K .......... .......... .......... .......... .......... 4.42M\n  8500K .......... .......... .......... .......... .......... 1.62M\n  8550K .......... .......... .......... .......... ..........  273M\n  8600K .......... .......... .......... .......... .......... 1.04M\n  8650K .......... .......... .......... .......... ..........  282M\n  8700K .......... .......... .......... .......... .......... 4.27M\n  8750K .......... .......... .......... .......... .......... 1.64M\n  8800K .......... .......... .......... .......... .......... 1.07M\n  8850K .......... .......... .......... .......... .......... 32.9M\n  8900K .......... .......... .......... .......... ..........  117M\n  8950K .......... .......... .......... .......... .......... 4.25M\n  9000K .......... .......... .......... .......... .......... 1.64M\n  9050K .......... .......... .......... .......... ..........  341M\n  9100K .......... .......... .......... .......... .......... 1.04M\n  9150K .......... .......... .......... .......... .......... 7.51M\n  9200K .......... .......... .......... .......... .......... 9.55M\n  9250K .......... .......... .......... .......... .......... 1.62M\n  9300K .......... .......... .......... .......... ..........  205M\n  9350K .......... .......... .......... .......... .......... 1.05M\n  9400K .......... .......... .......... .......... ..........  147M\n  9450K .......... .......... .......... .......... .......... 4.40M\n  9500K .......... .......... .......... .......... .......... 1.61M\n  9550K .......... .......... .......... .......... .......... 1.07M\n  9600K .......... .......... .......... .......... .......... 40.9M\n  9650K .......... .......... .......... .......... .......... 96.4M\n  9700K .......... .......... .......... .......... .......... 4.53M\n  9750K .......... .......... .......... .......... .......... 1.61M\n  9800K .......... .......... .......... .......... ..........  203M\n  9850K .......... .......... .......... .......... .......... 1.06M\n  9900K .......... .......... .......... .......... .......... 75.0M\n  9950K .......... .......... .......... .......... .......... 6.95M\n 10000K .......... .......... .......... .......... .......... 11.0M\n 10050K .......... .......... .......... .......... .......... 1.57M\n 10100K .......... .......... .......... .......... .......... 1.08M\n 10150K .......... .......... .......... .......... ..........  318M\n 10200K .......... .......... .......... .......... .......... 6.19M\n 10250K .......... .......... .......... .......... .......... 12.1M\n 10300K .......... .......... .......... .......... .......... 1.57M\n 10350K .......... .......... .......... .......... .......... 1.08M\n 10400K .......... .......... .......... .......... .......... 16.8M\n 10450K .......... .......... .......... .......... ..........  209M\n 10500K .......... .......... .......... .......... .......... 5.39M\n 10550K .......... .......... .......... .......... .......... 1.57M\n 10600K .......... .......... .......... .......... ..........  130M\n 10650K .......... .......... .......... .......... .......... 1.09M\n 10700K .......... .......... .......... .......... .......... 16.5M\n 10750K .......... .......... .......... .......... .......... 8.93M\n 10800K .......... .......... .......... .......... .......... 10.9M\n 10850K .......... .......... .......... .......... .......... 1.59M\n 10900K .......... .......... .......... .......... .......... 1.09M\n 10950K .......... .......... .......... .......... .......... 16.4M\n 11000K .......... .......... .......... .......... ..........  228M\n 11050K .......... .......... .......... .......... .......... 4.97M\n 11100K .......... .......... .......... .......... .......... 1.60M\n 11150K .......... .......... .......... .......... ..........  131M\n 11200K .......... .......... .......... .......... .......... 1.09M\n 11250K .......... .......... .......... .......... .......... 20.0M\n 11300K .......... .......... .......... .......... .......... 8.34M\n 11350K .......... .......... .......... .......... .......... 10.3M\n 11400K .......... .......... .......... .......... .......... 1.28M\n 11450K .......... .......... .......... .......... ..........  240M\n 11500K .......... .......... .......... .......... .......... 1.23M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 70.9M\n 50150K .......... .......... .......... .......... .......... 3.24M\n 50200K .......... .......... .......... .......... .......... 45.9M\n 50250K .......... .......... .......... .......... .......... 4.30M\n 50300K .......... .......... .......... .......... .......... 4.90M\n 50350K .......... .......... .......... .......... ..........  979K\n 50400K .......... .......... .......... .......... .......... 3.37M\n 50450K .......... .......... .......... .......... ..........  218M\n 50500K .......... .......... .......... .......... .......... 7.35M\n 50550K .......... .......... .......... .......... .......... 5.29M\n 50600K .......... .......... .......... .......... .......... 3.99M\n 50650K .......... .......... .......... .......... .......... 1.07M\n 50700K .......... .......... .......... .......... .......... 3.33M\n 50750K .......... .......... .......... .......... ..........  318M\n 50800K .......... .......... .......... .......... .......... 3.80M\n 50850K .......... .......... .......... .......... .......... 4.95M\n 50900K .......... .......... .......... .......... ..........  987K\n 50950K .......... .......... .......... .......... ..........  211M\n 51000K .......... .......... .......... .......... .......... 3.31M\n 51050K .......... .......... .......... .......... .......... 16.3M\n 51100K .......... .......... .......... .......... .......... 4.88M\n 51150K .......... .......... .......... .......... .......... 4.75M\n 51200K .......... .......... .......... .......... ..........  991K\n 51250K .......... .......... .......... .......... .......... 3.37M\n 51300K .......... .......... .......... .......... ..........  149M\n 51350K .......... .......... .......... .......... .......... 6.71M\n 51400K .......... .......... .......... .......... .......... 7.92M\n 51450K .......... .......... .......... .......... .......... 3.38M\n 51500K .......... .......... .......... .......... .......... 1.07M\n 51550K .......... .......... .......... .......... .......... 3.22M\n 51600K .......... .......... .......... .......... ..........  209M\n 51650K .......... .......... .......... .......... .......... 7.16M\n 51700K .......... .......... .......... .......... .......... 2.75M\n 51750K .......... .......... .......... .......... .......... 18.1M\n 51800K .......... .......... .......... .......... .......... 1.05M\n 51850K .......... .......... .......... .......... .......... 3.42M\n 51900K .......... .......... .......... .......... ..........  360M\n 51950K .......... .......... .......... .......... .......... 6.77M\n 52000K .......... .......... .......... .......... .......... 2.75M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... ..........  159M\n 52150K .......... .......... .......... .......... .......... 3.37M\n 52200K .......... .......... .......... .......... .......... 15.1M\n 52250K .......... .......... .......... .......... .......... 4.77M\n 52300K .......... .......... .......... .......... .......... 3.79M\n 52350K .......... .......... .......... .......... .......... 1.03M\n 52400K .......... .......... .......... .......... .......... 3.40M\n 52450K .......... .......... .......... .......... ..........  159M\n 52500K .......... .......... .......... .......... .......... 16.7M\n 52550K .......... .......... .......... .......... .......... 4.61M\n 52600K .......... .......... .......... .......... .......... 3.83M\n 52650K .......... .......... .......... .......... .......... 1.03M\n 52700K .......... .......... .......... .......... ..........  225M\n 52750K .......... .......... .......... .......... .......... 3.35M\n 52800K .......... .......... .......... .......... .......... 6.15M\n 52850K .......... .......... .......... .......... .......... 9.31M\n 52900K .......... .......... .......... .......... .......... 3.86M\n 52950K .......... .......... .......... .......... .......... 1.02M\n 53000K .......... .......... .......... .......... .......... 3.34M\n 53050K .......... .......... .......... .......... ..........  322M\n 53100K .......... .......... .......... .......... .......... 15.7M\n 53150K .......... .......... .......... .......... .......... 4.80M\n 53200K .......... .......... .......... .......... .......... 3.87M\n 53250K .......... .......... .......... .......... .......... 1.02M\n 53300K .......... .......... .......... .......... .......... 3.38M\n 53350K .......... .......... .......... .......... ..........  206M\n 53400K .......... .......... .......... .......... .......... 15.8M\n 53450K .......... .......... .......... .......... .......... 4.84M\n 53500K .......... .......... .......... .......... .......... 3.89M\n 53550K .......... .......... .......... .......... .......... 1.02M\n 53600K .......... .......... .......... .......... .......... 3.34M\n 53650K .......... .......... .......... .......... ..........  264M\n 53700K .......... .......... .......... .......... .......... 15.8M\n 53750K .......... .......... .......... .......... .......... 4.89M\n 53800K .......... .......... .......... .......... .......... 3.87M\n 53850K .......... .......... .......... .......... .......... 1.02M\n 53900K .......... .......... .......... .......... ..........  330M\n 53950K .......... .......... .......... .......... .......... 3.30M\n 54000K .......... .......... .......... .......... .......... 18.2M\n 54050K .......... .......... .......... .......... .......... 4.73M\n 54100K .......... .......... .......... .......... .......... 3.78M\n 54150K .......... .......... .......... .......... .......... 1.01M\n 54200K .......... .......... .......... .......... ..........  176M\n 54250K .......... .......... .......... .......... .......... 3.49M\n 54300K .......... .......... .......... .......... ..........  234M\n 54350K .......... .......... .......... .......... .......... 3.61M\n 54400K .......... .......... .......... .......... .......... 3.99M\n 54450K .......... .......... .......... .......... .......... 1.02M\n 54500K .......... .......... .......... .......... ..........  203M\n 54550K .......... .......... .......... .......... .......... 2.92M\n 54600K .......... .......... .......... .......... ..........  217M\n 54650K .......... .......... .......... .......... .......... 9.80M\n 54700K .......... .......... .......... .......... .......... 6.91M\n 54750K .......... .......... .......... .......... .......... 4.16M\n 54800K .......... .......... .......... .......... .......... 1.02M\n 54850K .......... .......... .......... .......... .......... 3.04M\n 54900K .......... .......... .......... .......... ..........  125M\n 54950K .......... .......... .......... .......... .......... 55.2M\n 55000K .......... .......... .......... .......... .......... 4.42M\n 55050K .......... .......... .......... .......... .......... 4.08M\n 55100K .......... .......... .......... .......... .......... 1.02M\n 55150K .......... .......... .......... .......... .......... 48.3M\n 55200K .......... .......... .......... .......... .......... 3.12M\n 55250K .......... .......... .......... .......... .......... 49.1M\n 55300K .......... .......... .......... .......... .......... 4.40M\n 55350K .......... .......... .......... .......... .......... 16.9M\n 55400K .......... .......... .......... .......... .......... 5.24M\n 55450K .......... .......... .......... .......... .......... 1.02M\n 55500K .......... .......... .......... .......... .......... 2.87M\n 55550K .......... .......... .......... .......... ..........  211M\n 55600K .......... .......... .......... .......... .......... 7.67M\n 55650K .......... .......... .......... .......... .......... 9.34M\n 55700K .......... .......... .......... .......... .......... 4.02M\n 55750K .......... .......... .......... .......... .......... 1.03M\n 55800K .......... .......... .......... .......... .......... 44.3M\n 55850K .......... .......... .......... .......... .......... 3.01M\n 55900K .......... .......... .......... .......... ..........  224M\n 55950K .......... .......... .......... .......... .......... 4.28M\n 56000K .......... .......... .......... .......... .......... 4.02M\n 56050K .......... .......... .......... .......... .......... 1.09M\n 56100K .......... .......... .......... .......... .......... 18.4M\n 56150K .......... .......... .......... .......... .......... 2.87M\n 56200K .......... .......... .......... .......... ..........  173M\n 56250K .......... .......... .......... .......... ..........  100M\n 56300K .......... .......... .......... .......... .......... 4.44M\n 56350K .......... .......... .......... .......... .......... 3.82M\n 56400K .......... .......... .......... .......... .......... 1.04M\n 56450K .......... .......... .......... .......... .......... 34.9M\n 56500K .......... .......... .......... .......... .......... 3.06M\n 56550K .......... .......... .......... .......... ..........  224M\n 56600K .......... .......... .......... .......... .......... 6.09M\n 56650K .......... .......... .......... .......... .......... 12.7M\n 56700K .......... .......... .......... .......... .......... 3.53M\n 56750K .......... .......... .......... .......... .......... 1.08M\n 56800K .......... .......... .......... .......... .......... 2.84M\n 56850K .......... .......... .......... .......... ..........  273M\n 56900K .......... .......... .......... .......... .......... 38.9M\n 56950K .......... .......... .......... .......... .......... 4.66M\n 57000K .......... .......... .......... .......... .......... 9.42M\n 57050K .......... .......... .......... .......... .......... 5.46M\n 57100K .......... .......... .......... .......... .......... 1.08M\n 57150K .......... .......... .......... .......... .......... 2.85M\n 57200K .......... .......... .......... .......... ..........  176M\n 57250K .......... .......... .......... .......... .......... 32.7M\n 57300K .......... .......... .......... .......... .......... 4.67M\n 57350K .......... .......... .......... .......... .......... 3.53M\n 57400K .......... .......... .......... .......... .......... 1.13M\n 57450K .......... .......... .......... .......... .......... 22.9M\n 57500K .......... .......... .......... .......... .......... 2.86M\n 57550K .......... .......... .......... .......... ..........  127M\n 57600K .......... .......... .......... .......... .......... 7.82M\n 57650K .......... .......... .......... .......... .......... 8.38M\n 57700K .......... .......... .......... .......... .......... 3.57M\n 57750K .......... .......... .......... .......... .......... 1.13M\n 57800K .......... .......... .......... .......... .......... 31.5M\n 57850K .......... .......... .......... .......... .......... 2.64M\n 57900K .......... .......... .......... .......... ..........  194M\n 57950K .......... .......... .......... .......... .......... 10.1M\n 58000K .......... .......... .......... .......... .......... 7.35M\n 58050K .......... .......... .......... .......... .......... 3.39M\n 58100K .......... .......... .......... .......... .......... 1.15M\n 58150K .......... .......... .......... .......... .......... 32.1M\n 58200K .......... .......... .......... .......... .......... 2.58M\n 58250K .......... .......... .......... .......... ..........  243M\n 58300K .......... .......... .......... .......... ..........  217M\n 58350K .......... .......... .......... .......... .......... 4.72M\n 58400K .......... .......... .......... .......... .......... 3.31M\n 58450K .......... .......... .......... .......... .......... 1.16M\n 58500K .......... .......... .......... .......... .......... 29.0M\n 58550K .......... .......... .......... .......... .......... 2.57M\n 58600K .......... .......... .......... .......... ..........  220M\n 58650K .......... .......... .......... .......... .......... 67.0M\n 58700K .......... .......... .......... .......... .......... 5.46M\n 58750K .......... .......... .......... .......... .......... 3.10M\n 58800K .......... .......... .......... .......... .......... 1.16M\n 58850K .......... .......... .......... .......... .......... 29.3M\n 58900K .......... .......... .......... .......... ..........  156M\n 58950K .......... .......... .......... .......... .......... 2.50M\n 59000K .......... .......... .......... .......... ..........  166M\n 59050K .......... .......... .......... .......... .......... 10.5M\n 59100K .......... .......... .......... .......... .......... 4.68M\n 59150K .......... .......... .......... .......... .......... 4.63M\n 59200K .......... .......... .......... .......... .......... 1.15M\n 59250K .......... .......... .......... .......... ..........  253M\n 59300K .......... .......... .......... .......... .......... 2.49M\n 59350K .......... .......... .......... .......... ..........  171M\n 59400K .......... .......... .......... .......... .......... 10.1M\n 59450K .......... .......... .......... .......... .......... 8.04M\n 59500K .......... .......... .......... .......... .......... 3.24M\n 59550K .......... .......... .......... .......... .......... 1.16M\n 59600K .......... .......... .......... .......... ..........  107M\n 59650K .......... .......... .......... .......... .......... 2.53M\n 59700K .......... .......... .......... .......... ..........  245M\n 59750K .......... .......... .......... .......... ..........  207M\n 59800K .......... .......... .......... .......... .......... 4.97M\n 59850K .......... .......... .......... .......... .......... 8.28M\n 59900K .......... .......... .......... .......... .......... 4.66M\n 59950K .......... .......... .......... .......... .......... 1.16M\n 60000K .......... .......... .......... .......... .......... 84.3M\n 60050K .......... .......... .......... .......... .......... 2.56M\n 60100K .......... .......... .......... .......... ..........  344M\n 60150K .......... .......... .......... .......... .......... 8.88M\n 60200K .......... .......... .......... .......... .......... 7.58M\n 60250K .......... .......... .......... .......... .......... 3.35M\n 60300K .......... .......... .......... .......... .......... 1.16M\n 60350K .......... .......... .......... .......... ..........  163M\n 60400K .......... .......... .......... .......... .......... 2.52M\n 60450K .......... .......... .......... .......... ..........  230M\n 60500K .......... .......... .......... .......... ..........  148M\n 60550K .......... .......... .......... .......... .......... 4.79M\n 60600K .......... .......... .......... .......... .......... 21.4M\n 60650K .......... .........                                   5.80M=22s\n\n2024-06-03 19:01:05 (2.72 MB/s) - 'exp_quant.zip' saved [62125370]\n\n--2024-06-03 19:01:09--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: 'exp_design.tsv'\n\n     0K .......... .......... .......... .......... ..........  6%  188K 4s\n    50K .......... .......... .......... .......... .......... 12%  283K 3s\n   100K .......... .......... .......... .......... .......... 18%  566K 2s\n   150K .......... .......... .......... .......... .......... 24%  565K 2s\n   200K .......... .......... .......... .......... .......... 30%  564K 2s\n   250K .......... .......... .......... .......... .......... 36%  562K 1s\n   300K .......... .......... .......... .......... .......... 42%  388M 1s\n   350K .......... .......... .......... .......... .......... 48%  563K 1s\n   400K .......... .......... .......... .......... .......... 54%  565K 1s\n   450K .......... .......... .......... .......... .......... 60%  566K 1s\n   500K .......... .......... .......... .......... .......... 66%  565K 1s\n   550K .......... .......... .......... .......... .......... 72%  317M 0s\n   600K .......... .......... .......... .......... .......... 78%  565K 0s\n   650K .......... .......... .......... .......... .......... 84%  562K 0s\n   700K .......... .......... .......... .......... .......... 90%  392M 0s\n   750K .......... .......... .......... .......... .......... 96%  561K 0s\n   800K .......... .......... .......                         100%  314M=1.4s\n\n2024-06-03 19:01:10 (584 KB/s) - 'exp_design.tsv' saved [847657/847657]\n\n", "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "28 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "28.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:01:11", "plugin": "core", "name": "end_epoch", "raw_value": "1717441271.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:00:43", "plugin": "core", "name": "start_epoch", "raw_value": "1717441243.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "salmon/1.3.0+galaxy1-0", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 0, "time_seconds": 9.778157949447632, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "salmon/1.3.0+galaxy1-1", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 1, "time_seconds": 58.669883251190186, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "b9878762eed1732f"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "7feecede9e68bdb3", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:53:13.419059", "create_time": "2024-06-03T18:52:30.781399", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-fsbn9", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/2/a/5/dataset_2a563acd-675b-4a42-84cd-361191c7b7f9.dat' &&    ln -s /galaxy/server/database/objects/2/a/5/dataset_2a563acd-675b-4a42-84cd-361191c7b7f9.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"              --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"id": "b9878762eed1732f", "src": "hda", "uuid": "2a563acd-675b-4a42-84cd-361191c7b7f9"}, "quant_type|input|single_or_paired|input_singles": {"id": "b9878762eed1732f", "src": "hda", "uuid": "2a563acd-675b-4a42-84cd-361191c7b7f9"}}, "outputs": {"output_quant": {"id": "22b2e592337184b2", "src": "hda", "uuid": "86197256-daae-4fd3-837e-4f6e7b8396ab"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:53:00.704] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:53:00.704] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:53:00.705] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:53:00.715] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:53:00.715] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:53:00.732] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:53:00.734] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:53:00.812] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:53:00.812] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.7618 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.4635 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:53:00.815] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:53:00.815] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:53:00.976] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:53:00.976] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:53:00.994] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:53:01.001] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:53:01.082] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:53:01.082] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:53:01.082] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:53:01.082] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:53:01.082] [jointLog] [info] parsing read library format\n[2024-06-03 18:53:01.082] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.2273 ms\n-----------------------------------------\nsize = 24\n[2024-06-03 18:53:01.138] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:53:01.139] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading contig offsets | Time = 1.7849 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 1.0033 ms\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 1.1553 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.2166 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.1953 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.6885 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 915.73 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 712.3 us\n-----------------------------------------\n[2024-06-03 18:53:01.153] [jointLog] [info] done\n[2024-06-03 18:53:01.153] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:53:01.153] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:53:01.199] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:53:01.199] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:53:01.200] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:53:01.200] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:53:01.200] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:53:01.200] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:53:01.206] [jointLog] [info] Starting optimizer\n[2024-06-03 18:53:01.207] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:53:01.207] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:53:01.208] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:53:01.208] [jointLog] [info] Finished optimizer\n[2024-06-03 18:53:01.208] [jointLog] [info] writing output \n\n[2024-06-03 18:53:01.214] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:53:00.704] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:53:00.704] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:53:00.705] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:53:00.715] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:53:00.715] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:53:00.732] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:53:00.734] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:53:00.812] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:53:00.812] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.7618 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.4635 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:53:00.815] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:53:00.815] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:53:00.816] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:53:00.840] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:53:00.860] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:53:00.975] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:53:00.976] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:53:00.976] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:53:00.994] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:53:01.001] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:53:01.082] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:53:01.082] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:53:01.082] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:53:01.082] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:53:01.082] [jointLog] [info] parsing read library format\n[2024-06-03 18:53:01.082] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.2273 ms\n-----------------------------------------\nsize = 24\n[2024-06-03 18:53:01.138] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:53:01.139] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading contig offsets | Time = 1.7849 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 1.0033 ms\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 1.1553 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.2166 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.1953 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.6885 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 915.73 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 712.3 us\n-----------------------------------------\n[2024-06-03 18:53:01.153] [jointLog] [info] done\n[2024-06-03 18:53:01.153] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:53:01.153] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:53:01.199] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:53:01.199] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:53:01.200] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:53:01.200] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:53:01.200] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:53:01.200] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:53:01.200] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:53:01.206] [jointLog] [info] Starting optimizer\n[2024-06-03 18:53:01.207] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:53:01.207] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:53:01.208] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:53:01.208] [jointLog] [info] Finished optimizer\n[2024-06-03 18:53:01.208] [jointLog] [info] writing output \n\n[2024-06-03 18:53:01.214] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:53:01", "plugin": "core", "name": "end_epoch", "raw_value": "1717440781.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:53:00", "plugin": "core", "name": "start_epoch", "raw_value": "1717440780.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-2", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 2, "time_seconds": 27.635319232940674, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "952cce0dc2825aa4"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "7e551d39a6bfb95e", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:53:41.129139", "create_time": "2024-06-03T18:53:29.146847", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-fxfl2", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/f/e/1/dataset_fe19a1e0-8a60-4fab-b6da-d8888f4379d1.dat' &&    ln -s /galaxy/server/database/objects/f/e/1/dataset_fe19a1e0-8a60-4fab-b6da-d8888f4379d1.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"              --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"id": "952cce0dc2825aa4", "src": "hda", "uuid": "fe19a1e0-8a60-4fab-b6da-d8888f4379d1"}, "quant_type|input|single_or_paired|input_singles": {"id": "952cce0dc2825aa4", "src": "hda", "uuid": "fe19a1e0-8a60-4fab-b6da-d8888f4379d1"}}, "outputs": {"output_quant": {"id": "e0eb258299551aff", "src": "hda", "uuid": "00b514d8-7f3b-46bf-bd75-bfb9ad8d7925"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 55\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:53:30.880] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:53:30.881] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:53:30.882] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:53:30.893] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:53:30.893] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:53:30.910] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:53:30.912] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:53:30.981] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:53:30.981] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.6397 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.0909 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:53:31.002] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:53:31.003] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:53:31.003] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\n  elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:53:31.129] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:53:31.130] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:53:31.148] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:53:31.155] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:53:31.231] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:53:31.231] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:53:31.231] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:53:31.231] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:53:31.231] [jointLog] [info] parsing read library format\n[2024-06-03 18:53:31.231] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.1191 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.9641 ms\n-----------------------------------------\n[2024-06-03 18:53:31.286] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:53:31.288] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading reference lengths | Time = 930.21 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 973.74 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.1621 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.3406 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 2.9581 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 1.5276 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 742.94 us\n-----------------------------------------\n[2024-06-03 18:53:31.303] [jointLog] [info] done\n[2024-06-03 18:53:31.303] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:53:31.303] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:53:31.348] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:53:31.348] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:53:31.349] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:53:31.349] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:53:31.349] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:53:31.349] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:53:31.355] [jointLog] [info] Starting optimizer\n[2024-06-03 18:53:31.356] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:53:31.356] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:53:31.356] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:53:31.356] [jointLog] [info] Finished optimizer\n[2024-06-03 18:53:31.356] [jointLog] [info] writing output \n\n[2024-06-03 18:53:31.363] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:53:30.880] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:53:30.881] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:53:30.882] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:53:30.893] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:53:30.893] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:53:30.910] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:53:30.912] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:53:30.981] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:53:30.981] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.6397 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.0909 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:53:30.984] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:53:30.985] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:53:31.002] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:53:31.003] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:53:31.003] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:53:31.017] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\n  elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:53:31.128] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:53:31.129] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:53:31.130] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:53:31.148] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:53:31.155] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:53:31.231] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:53:31.231] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:53:31.231] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:53:31.231] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:53:31.231] [jointLog] [info] parsing read library format\n[2024-06-03 18:53:31.231] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.1191 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.9641 ms\n-----------------------------------------\n[2024-06-03 18:53:31.286] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:53:31.288] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading reference lengths | Time = 930.21 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 973.74 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.1621 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.3406 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 2.9581 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 1.5276 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 742.94 us\n-----------------------------------------\n[2024-06-03 18:53:31.303] [jointLog] [info] done\n[2024-06-03 18:53:31.303] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:53:31.303] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:53:31.348] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:53:31.348] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:53:31.349] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:53:31.349] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:53:31.349] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:53:31.349] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:53:31.349] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:53:31.355] [jointLog] [info] Starting optimizer\n[2024-06-03 18:53:31.356] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:53:31.356] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:53:31.356] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:53:31.356] [jointLog] [info] Finished optimizer\n[2024-06-03 18:53:31.356] [jointLog] [info] writing output \n\n[2024-06-03 18:53:31.363] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 55\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:53:32", "plugin": "core", "name": "end_epoch", "raw_value": "1717440812.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:53:30", "plugin": "core", "name": "start_epoch", "raw_value": "1717440810.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-3", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 3, "time_seconds": 29.7719624042511, "inputs": {"quant_type|afile": {"src": "hda", "id": "8b4096acadd142a0"}, "quant_type|transcript": {"src": "hda", "id": "78ca48b37a0e8b3a"}, "quant_type|noErrorModel": true, "quant_type|numErrorBins": "5", "quant_type|sampleOut": true, "quant_type|sampleUnaligned": true, "quant_type|qtype": "alignment"}, "job": {"model_class": "Job", "id": "35b41facd137628b", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:54:11.023891", "create_time": "2024-06-03T18:53:58.694837", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-9ktvh", "command_line": "salmon quant -t '/galaxy/server/database/objects/2/6/2/dataset_262bf8ec-1a32-4c1b-8f2e-cfe36087fcee.dat' -l 'U' -a '/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat' --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins '5' --sampleOut --sampleUnaligned         --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output   && samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}"}, "inputs": {"quant_type|afile": {"id": "8b4096acadd142a0", "src": "hda", "uuid": "56254a7c-0f36-462e-8a80-4d5fd3eed0cd"}, "quant_type|transcript": {"id": "78ca48b37a0e8b3a", "src": "hda", "uuid": "262bf8ec-1a32-4c1b-8f2e-cfe36087fcee"}}, "outputs": {"output_quant": {"id": "f9cba1162a5334a3", "src": "hda", "uuid": "e7556fe5-58ce-41a7-878a-5bdab0094e10"}, "postSample": {"id": "fda3d17bc471ae44", "src": "hda", "uuid": "8d179176-4f54-44d8-bb2b-7e917d549b54"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] => salmon \n# [ command ] => quant \n# [ targets ] => { /galaxy/server/database/objects/2/6/2/dataset_262bf8ec-1a32-4c1b-8f2e-cfe36087fcee.dat }\n# [ libType ] => { U }\n# [ alignments ] => { /galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat }\n# [ threads ] => { 6 }\n# [ noErrorModel ] => { }\n# [ numErrorBins ] => { 5 }\n# [ sampleOut ] => { }\n# [ sampleUnaligned ] => { }\n# [ incompatPrior ] => { 0.0 }\n# [ biasSpeedSamp ] => { 5 }\n# [ fldMax ] => { 1000 }\n# [ fldMean ] => { 250 }\n# [ fldSD ] => { 25 }\n# [ forgettingFactor ] => { 0.65 }\n# [ maxReadOcc ] => { 100 }\n# [ numBiasSamples ] => { 2000000 }\n# [ numAuxModelSamples ] => { 5000000 }\n# [ numPreAuxModelSamples ] => { 5000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\n# [ thinningFactor ] => { 16 }\n# [ sigDigits ] => { 3 }\n# [ vbPrior ] => { 1e-05 }\n# [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:01.022] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:01.022] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-06-03 18:54:01.023] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\", fasta = \"/galaxy/server/database/objects/2/6/2/dataset_262bf8ec-1a32-4c1b-8f2e-cfe36087fcee.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\" \nClosed all files . . . \nEmptied frag queue. . . [2024-06-03 18:54:01.319] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-06-03 18:54:01.489] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-06-03 18:54:01.493] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-06-03 18:54:01.493] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-06-03 18:54:01.493] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:01.494] [jointLog] [info] starting optimizer\n[2024-06-03 18:54:01.495] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:01.495] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-06-03 18:54:01.495] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:01.496] [jointLog] [info] finished optimizer\n[2024-06-03 18:54:01.496] [jointLog] [info] writing output\n[2024-06-03 18:54:01.503] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] => salmon \n# [ command ] => quant \n# [ targets ] => { /galaxy/server/database/objects/2/6/2/dataset_262bf8ec-1a32-4c1b-8f2e-cfe36087fcee.dat }\n# [ libType ] => { U }\n# [ alignments ] => { /galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat }\n# [ threads ] => { 6 }\n# [ noErrorModel ] => { }\n# [ numErrorBins ] => { 5 }\n# [ sampleOut ] => { }\n# [ sampleUnaligned ] => { }\n# [ incompatPrior ] => { 0.0 }\n# [ biasSpeedSamp ] => { 5 }\n# [ fldMax ] => { 1000 }\n# [ fldMean ] => { 250 }\n# [ fldSD ] => { 25 }\n# [ forgettingFactor ] => { 0.65 }\n# [ maxReadOcc ] => { 100 }\n# [ numBiasSamples ] => { 2000000 }\n# [ numAuxModelSamples ] => { 5000000 }\n# [ numPreAuxModelSamples ] => { 5000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\n# [ thinningFactor ] => { 16 }\n# [ sigDigits ] => { 3 }\n# [ vbPrior ] => { 1e-05 }\n# [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:01.022] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:01.022] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-06-03 18:54:01.023] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\", fasta = \"/galaxy/server/database/objects/2/6/2/dataset_262bf8ec-1a32-4c1b-8f2e-cfe36087fcee.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/5/6/2/dataset_56254a7c-0f36-462e-8a80-4d5fd3eed0cd.dat\" \nClosed all files . . . \nEmptied frag queue. . . [2024-06-03 18:54:01.319] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2024-06-03 18:54:01.489] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-06-03 18:54:01.493] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-06-03 18:54:01.493] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-06-03 18:54:01.493] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:01.494] [jointLog] [info] starting optimizer\n[2024-06-03 18:54:01.495] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:01.495] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-06-03 18:54:01.495] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:01.496] [jointLog] [info] finished optimizer\n[2024-06-03 18:54:01.496] [jointLog] [info] writing output\n[2024-06-03 18:54:01.503] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:54:02", "plugin": "core", "name": "end_epoch", "raw_value": "1717440842.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:54:00", "plugin": "core", "name": "start_epoch", "raw_value": "1717440840.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "output_problems": ["Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_3pe9zn9k.sam v. /tmp/history_bam_converted_to_sam_hlqzg2tu.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -14013,10 +14014,10 @@\n 5957:NM_022658:77:92\t99\tNM_022658\t78\t1\t50M\t=\t120\t92\tCTGGCCTGGGGTTCGGTCCCGGGGGGAGGGGAGTTTCGGGGGTACTGGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7674:NM_022658:77:159\t99\tNM_022658\t78\t1\t50M\t=\t187\t159\tCTGGCCTGGGGTTCGGTCCCGGGGGGAGGGGAGTTTCGGGGGTACTGGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6012:NM_022658:0:127\t147\tNM_022658\t78\t1\t50M\t=\t1\t-127\tCTGGCCTGGGGTTCGGTCCCGGGGGGAGGGGAGTTTCGGGGGTACTGGGC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+4906:NM_022658:78:189\t99\tNM_022658\t79\t1\t50M\t=\t218\t189\tTGGCCTGGGGTTCGGTCCCGGGGGGAGGGGAGTTTCGGGGGTACTGGGCG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+4922:NM_022658:78:159\t163\tNM_022658\t79\t1\t50M\t=\t188\t159\tTGGCCTGGGGTTCGGTCCCGGGGGGAGGGGAGTTTCGGGGGTACTGGGCG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n@@ -21014,10 +21015,10 @@\n 6895:NM_022658:1622:182\t163\tNM_022658\t1623\t1\t50M\t=\t1755\t182\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9607:NM_022658:1622:191\t163\tNM_022658\t1623\t1\t50M\t=\t1764\t191\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4730:NM_022658:1623:193\t163\tNM_022658\t1624\t1\t50M\t=\t1767\t193\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4601:NM_022658:1476:197\t147\tNM_022658\t1624\t1\t50M\t=\t1477\t-197\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6103:NM_022658:1489:184\t83\tNM_022658\t1624\t1\t50M\t=\t1490\t-184\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7438:NM_022658:1508:165\t83\tNM_022658\t1624\t1\t50M\t=\t1509\t-165\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9163:NM_022658:1624:152\t163\tNM_022658\t1625\t1\t50M\t=\t1727\t152\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3491:NM_022658:1498:176\t83\tNM_022658\t1625\t1\t50M\t=\t1499\t-176\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7735:NM_022658:1487:187\t147\tNM_022658\t1625\t1\t50M\t=\t1488\t-187\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -23013,10 +23014,10 @@\n 1776:NM_022658:1915:185\t147\tNM_022658\t2051\t1\t50M\t=\t1916\t-185\tTAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1065:NM_022658:1903:198\t83\tNM_022658\t2052\t1\t50M\t=\t1904\t-198\tAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2296:NM_022658:2052:188\t99\tNM_022658\t2053\t1\t50M\t=\t2191\t188\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 108:NM_022658:1901:201\t147\tNM_022658\t2053\t1\t50M\t=\t1902\t-201\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1092:NM_022658:1909:193\t147\tNM_022658\t2053\t1\t50M\t=\t1910\t-193\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7619:NM_022658:2053:198\t99\tNM_022658\t2054\t1\t50M\t=\t2202\t198\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1801:NM_022658:1928:175\t83\tNM_022658\t2054\t1\t50M\t=\t1929\t-175\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3189:NM_022658:1932:171\t83\tNM_022658\t2054\t1\t50M\t=\t1933\t-171\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n"], "status": "failure"}}, {"id": "salmon/1.3.0+galaxy1-4", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 4, "time_seconds": 27.26936411857605, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "e65b5c5c19f6ec6f"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|discardOrphansQuasi": false, "quant_type|validmap|validateMappings": true, "quant_type|dovetail": true, "quant_type|recoverOrphans": true, "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "d5cc31d23110cbd1", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:54:38.479196", "create_time": "2024-06-03T18:54:26.583783", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-mt8rc", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/b/9/6/dataset_b96a2d2a-da2e-4bc2-b7c3-9b09c03cdc42.dat' &&    ln -s /galaxy/server/database/objects/b/9/6/dataset_b96a2d2a-da2e-4bc2-b7c3-9b09c03cdc42.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"  --validateMappings --minScoreFraction '0.65' --ma '2' --mp '4' --go '5' --ge '3'    --allowDovetail --recoverOrphans          --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": true, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": true, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 0, \"gapExtensionPenalty\": \"3\", \"gapOpenPenalty\": \"5\", \"hardFilter\": false, \"matchScore\": \"2\", \"maxMMPExtension\": \"\", \"mimicBT2\": false, \"mimicStrictBT2\": false, \"minScoreFraction\": \"0.65\", \"mismatchPenalty\": \"4\", \"validateMappings\": true}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"id": "e65b5c5c19f6ec6f", "src": "hda", "uuid": "b96a2d2a-da2e-4bc2-b7c3-9b09c03cdc42"}, "quant_type|input|single_or_paired|input_singles": {"id": "e65b5c5c19f6ec6f", "src": "hda", "uuid": "b96a2d2a-da2e-4bc2-b7c3-9b09c03cdc42"}}, "outputs": {"output_quant": {"id": "a2d7df300e839b3c", "src": "hda", "uuid": "0355d25e-0ca9-4470-b9b0-e85687341587"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:54:28.663] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:54:28.663] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:54:28.665] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:54:28.674] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:54:28.674] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:54:28.692] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:54:28.694] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:54:28.759] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:54:28.759] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.2723 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.118 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:54:28.762] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:54:28.762] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elap\n..\nsec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:54:28.886] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:54:28.886] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:54:28.904] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:54:28.912] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ validateMappings ] => { }\n### [ minScoreFraction ] => { 0.65 }\n### [ ma ] => { 2 }\n### [ mp ] => { 4 }\n### [ go ] => { 5 }\n### [ ge ] => { 3 }\n### [ allowDovetail ] => { }\n### [ recoverOrphans ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:28.991] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:28.991] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:54:28.991] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-06-03 18:54:28.991] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:54:28.991] [jointLog] [info] parsing read library format\n[2024-06-03 18:54:28.991] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.2195 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 2.3252 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 926.56 us\n-----------------------------------------\n[2024-06-03 18:54:29.044] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:54:29.045] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading mphf table | Time = 1.1131 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.201 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.3137 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.8773 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 1.1721 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 863.65 us\n-----------------------------------------\n[2024-06-03 18:54:29.060] [jointLog] [info] done\n[2024-06-03 18:54:29.060] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:54:29.060] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:54:29.104] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:54:29.104] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:54:29.106] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:54:29.106] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:29.106] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:54:29.106] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:54:29.112] [jointLog] [info] Starting optimizer\n[2024-06-03 18:54:29.112] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:29.112] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:54:29.113] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:29.113] [jointLog] [info] Finished optimizer\n[2024-06-03 18:54:29.113] [jointLog] [info] writing output \n\n[2024-06-03 18:54:29.119] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:54:28.663] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:54:28.663] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:54:28.665] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:54:28.674] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:54:28.674] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:54:28.692] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:54:28.694] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:54:28.759] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:54:28.759] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.2723 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.118 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:54:28.762] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:54:28.762] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:54:28.763] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:54:28.777] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:54:28.790] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elap\n..\nsec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:54:28.885] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:54:28.886] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:54:28.886] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:54:28.904] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:54:28.912] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ validateMappings ] => { }\n### [ minScoreFraction ] => { 0.65 }\n### [ ma ] => { 2 }\n### [ mp ] => { 4 }\n### [ go ] => { 5 }\n### [ ge ] => { 3 }\n### [ allowDovetail ] => { }\n### [ recoverOrphans ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:28.991] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:28.991] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:54:28.991] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-06-03 18:54:28.991] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:54:28.991] [jointLog] [info] parsing read library format\n[2024-06-03 18:54:28.991] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.2195 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 2.3252 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 926.56 us\n-----------------------------------------\n[2024-06-03 18:54:29.044] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:54:29.045] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading mphf table | Time = 1.1131 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 1.201 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.3137 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.8773 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 1.1721 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 863.65 us\n-----------------------------------------\n[2024-06-03 18:54:29.060] [jointLog] [info] done\n[2024-06-03 18:54:29.060] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:54:29.060] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:54:29.104] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:54:29.104] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:54:29.106] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:54:29.106] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:54:29.106] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:29.106] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:54:29.106] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:54:29.112] [jointLog] [info] Starting optimizer\n[2024-06-03 18:54:29.112] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:29.112] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-06-03 18:54:29.113] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:29.113] [jointLog] [info] Finished optimizer\n[2024-06-03 18:54:29.113] [jointLog] [info] writing output \n\n[2024-06-03 18:54:29.119] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:54:29", "plugin": "core", "name": "end_epoch", "raw_value": "1717440869.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:54:28", "plugin": "core", "name": "start_epoch", "raw_value": "1717440868.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-5", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 5, "time_seconds": 28.351728200912476, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "f177b6b3f76f59f7"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads", "seqBias": true, "gcBias": true, "adv|dumpEq": true, "adv|minAssignedFrags": "10", "adv|initUniform": true, "adv|noLengthCorrection": false, "adv|useEM": true, "adv|noGammaDraw": true}, "job": {"model_class": "Job", "id": "7ff304f2fba73938", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:55:06.959252", "create_time": "2024-06-03T18:54:54.290282", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-4n85h", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/7/2/0/dataset_72073890-91a6-4835-ad89-3f937177eba9.dat' &&    ln -s /galaxy/server/database/objects/7/2/0/dataset_72073890-91a6-4835-ad89-3f937177eba9.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"            --seqBias --gcBias --incompatPrior '0.0'     --dumpEq  --minAssignedFrags '10' --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65' --initUniform --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000' --useEM --numGibbsSamples '0' --noGammaDraw --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": true, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": true, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"10\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": true, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": true, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "true", "seqBias": "true", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|input|single_or_paired|input_singles": {"id": "f177b6b3f76f59f7", "src": "hda", "uuid": "72073890-91a6-4835-ad89-3f937177eba9"}, "quant_type|refTranscriptSource|s_index|fasta": {"id": "f177b6b3f76f59f7", "src": "hda", "uuid": "72073890-91a6-4835-ad89-3f937177eba9"}}, "outputs": {"output_quant": {"id": "f7501455d0c710c8", "src": "hda", "uuid": "0f06bb3b-ef79-4627-8afa-5f9b7a08286e"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 19\nHash table size = 33\nCandidate marks count = 56\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:54:56.360] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:54:56.361] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:54:56.362] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:54:56.371] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:54:56.371] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:54:56.387] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:54:56.388] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:54:56.459] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:54:56.459] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.3346 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 731.94 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:54:56.461] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:54:56.461] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nBooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:54:56.598] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:54:56.598] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:54:56.616] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:54:56.625] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ seqBias ] => { }\n### [ gcBias ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ dumpEq ] => { }\n### [ minAssignedFrags ] => { 10 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ initUniform ] => { }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ useEM ] => { }\n### [ numGibbsSamples ] => { 0 }\n### [ noGammaDraw ] => { }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:56.702] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:56.702] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:54:56.702] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:54:56.702] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:54:56.702] [jointLog] [info] parsing read library format\n[2024-06-03 18:54:56.702] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.0221 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 2.1019 ms\n-----------------------------------------\n[2024-06-03 18:54:56.757] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:54:56.758] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading reference lengths | Time = 912.36 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 1.0753 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 969.11 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.0203 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.9384 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 623.16 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 799.52 us\n-----------------------------------------\n[2024-06-03 18:54:56.772] [jointLog] [info] done\n[2024-06-03 18:54:56.772] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:54:56.772] [jointLog] [info] Number of decoys : 0\n[2024-06-03 18:54:56.772] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:54:56.818] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:54:56.818] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:54:56.819] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:54:56.820] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:56.820] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:54:56.820] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:54:56.825] [jointLog] [info] Starting optimizer\n[2024-06-03 18:54:56.826] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:56.826] [jointLog] [info] iteration = 0 | max rel diff. = 49\n[2024-06-03 18:54:56.826] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases\n[2024-06-03 18:54:56.831] [jointLog] [info] Computed expected counts (for bias correction)\n[2024-06-03 18:54:56.832] [jointLog] [info] processed bias for 26.7% of the transcripts\n[2024-06-03 18:54:56.832] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 60.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2024-06-03 18:54:56.834] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2024-06-03 18:54:56.834] [jointLog] [info] processed bias for 100.0% of the transcripts\n[2024-06-03 18:54:56.835] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:56.835] [jointLog] [info] Finished optimizer\n[2024-06-03 18:54:56.835] [jointLog] [info] writing output \n\n[2024-06-03 18:54:56.841] [jointLog] [info] writing equivalence class counts.\n[2024-06-03 18:54:56.843] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.\n[2024-06-03 18:54:56.843] [jointLog] [info] done.\n[2024-06-03 18:54:56.847] [jointLog] [info] done writing equivalence class counts.\n[2024-06-03 18:54:56.848] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-06-03 18:54:56.360] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-06-03 18:54:56.361] [jLog] [info] building index\nout : ./index\n[2024-06-03 18:54:56.362] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-06-03 18:54:56.371] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-06-03 18:54:56.371] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-06-03 18:54:56.387] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-06-03 18:54:56.388] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-06-03 18:54:56.459] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-06-03 18:54:56.459] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.3346 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 731.94 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-06-03 18:54:56.461] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-06-03 18:54:56.461] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-06-03 18:54:56.462] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] # segments = 23\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] total length = 19592\n[2024-06-03 18:54:56.477] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] positional integer width = 15\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] seqSize = 19592\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] rankSize = 19592\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-06-03 18:54:56.493] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nBooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk size = 9796\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-06-03 18:54:56.596] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-06-03 18:54:56.598] [puff::index::jointLog] [info] finished populating pos vector\n[2024-06-03 18:54:56.598] [puff::index::jointLog] [info] writing index components\n[2024-06-03 18:54:56.616] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-06-03 18:54:56.625] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ seqBias ] => { }\n### [ gcBias ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ dumpEq ] => { }\n### [ minAssignedFrags ] => { 10 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ initUniform ] => { }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ useEM ] => { }\n### [ numGibbsSamples ] => { 0 }\n### [ noGammaDraw ] => { }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2024-06-03 18:54:56.702] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-03 18:54:56.702] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-06-03 18:54:56.702] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-06-03 18:54:56.702] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-06-03 18:54:56.702] [jointLog] [info] parsing read library format\n[2024-06-03 18:54:56.702] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 1.0221 ms\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 2.1019 ms\n-----------------------------------------\n[2024-06-03 18:54:56.757] [jointLog] [info] Loading pufferfish index\n[2024-06-03 18:54:56.758] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading reference lengths | Time = 912.36 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 1.0753 ms\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 969.11 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 1.0203 ms\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.9384 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 623.16 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 799.52 us\n-----------------------------------------\n[2024-06-03 18:54:56.772] [jointLog] [info] done\n[2024-06-03 18:54:56.772] [jointLog] [info] Index contained 15 targets\n[2024-06-03 18:54:56.772] [jointLog] [info] Number of decoys : 0\n[2024-06-03 18:54:56.772] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-06-03 18:54:56.818] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-06-03 18:54:56.818] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-06-03 18:54:56.819] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-06-03 18:54:56.819] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-06-03 18:54:56.820] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-03 18:54:56.820] [jointLog] [info] Mapping rate = 100%\n\n[2024-06-03 18:54:56.820] [jointLog] [info] finished quantifyLibrary()\n[2024-06-03 18:54:56.825] [jointLog] [info] Starting optimizer\n[2024-06-03 18:54:56.826] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-03 18:54:56.826] [jointLog] [info] iteration = 0 | max rel diff. = 49\n[2024-06-03 18:54:56.826] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases\n[2024-06-03 18:54:56.831] [jointLog] [info] Computed expected counts (for bias correction)\n[2024-06-03 18:54:56.832] [jointLog] [info] processed bias for 26.7% of the transcripts\n[2024-06-03 18:54:56.832] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 60.0% of the transcripts\n[2024-06-03 18:54:56.833] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2024-06-03 18:54:56.834] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2024-06-03 18:54:56.834] [jointLog] [info] processed bias for 100.0% of the transcripts\n[2024-06-03 18:54:56.835] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-03 18:54:56.835] [jointLog] [info] Finished optimizer\n[2024-06-03 18:54:56.835] [jointLog] [info] writing output \n\n[2024-06-03 18:54:56.841] [jointLog] [info] writing equivalence class counts.\n[2024-06-03 18:54:56.843] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.\n[2024-06-03 18:54:56.843] [jointLog] [info] done.\n[2024-06-03 18:54:56.847] [jointLog] [info] done writing equivalence class counts.\n[2024-06-03 18:54:56.848] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 19\nHash table size = 33\nCandidate marks count = 56\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:54:57", "plugin": "core", "name": "end_epoch", "raw_value": "1717440897.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:54:56", "plugin": "core", "name": "start_epoch", "raw_value": "1717440896.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-6", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 6, "status": "skip"}}, {"id": "samtools_bedcov/2.0.2-0", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 0, "time_seconds": 28.302658796310425, "inputs": {"input_bed": {"src": "hda", "id": "b341263ba1043671"}, "input_bams": {"src": "hda", "id": "5f0cab5e2067dcb6"}}, "job": {"model_class": "Job", "id": "3036331ed22f3753", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:56:19.136883", "create_time": "2024-06-03T18:56:08.493693", "galaxy_version": "23.1", "command_version": "Version: 1.9 (using htslib 1.9)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-d6w95", "command_line": "ln -s '/galaxy/server/database/objects/7/a/3/dataset_7a3773e8-fee1-49a1-a18c-9e42b0574fee.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/d/4/f/metadata_d4f62b22-6ecd-420c-af1c-3caa45812d55.dat' '0.bai' &&   samtools bedcov  '/galaxy/server/database/objects/3/4/9/dataset_3491a76a-4397-46e3-9a08-0ce3d76d2dc3.dat' '0' > '/galaxy/server/database/objects/1/8/8/dataset_18890b41-52d3-4499-ac0a-698cd60804cf.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"\""}, "inputs": {"input_bed": {"id": "b341263ba1043671", "src": "hda", "uuid": "3491a76a-4397-46e3-9a08-0ce3d76d2dc3"}, "input_bams": {"id": "5f0cab5e2067dcb6", "src": "hda", "uuid": "7a3773e8-fee1-49a1-a18c-9e42b0574fee"}, "input_bams1": {"id": "5f0cab5e2067dcb6", "src": "hda", "uuid": "7a3773e8-fee1-49a1-a18c-9e42b0574fee"}}, "outputs": {"output": {"id": "780c0490e8a7b00a", "src": "hda", "uuid": "18890b41-52d3-4499-ac0a-698cd60804cf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:56:10", "plugin": "core", "name": "end_epoch", "raw_value": "1717440970.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:56:10", "plugin": "core", "name": "start_epoch", "raw_value": "1717440970.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_bedcov/2.0.2-1", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 1, "time_seconds": 30.062323808670044, "inputs": {"input_bed": {"src": "hda", "id": "12bb1f4dc2d627ec"}, "input_bams": [{"src": "hda", "id": "4142ac5b4d98c70b"}, {"src": "hda", "id": "bdcfe7bbc0256760"}]}, "job": {"model_class": "Job", "id": "069d16949cd945ea", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:56:49.150234", "create_time": "2024-06-03T18:56:38.297898", "galaxy_version": "23.1", "command_version": "Version: 1.9 (using htslib 1.9)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-7l86s", "command_line": "ln -s '/galaxy/server/database/objects/7/6/b/dataset_76bce82e-fb46-4668-81c2-af9c6128e8f2.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/7/3/6/metadata_736d005a-65e6-4658-817c-89763b1343e4.dat' '0.bai' && ln -s '/galaxy/server/database/objects/6/0/e/dataset_60ee606a-7ba8-403d-ad31-72fe262ecabf.dat' '1' && ln -s '/galaxy/server/database/objects/_metadata_files/1/1/6/metadata_11690641-cdf5-4b21-8b7a-1d7af12d771f.dat' '1.bai' &&   samtools bedcov  '/galaxy/server/database/objects/f/8/f/dataset_f8f7baa8-89d5-4621-af4c-eea66af1020c.dat' '0' '1' > '/galaxy/server/database/objects/b/c/0/dataset_bc0c4ec0-51de-4bae-a58d-d5f013eb834d.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"\""}, "inputs": {"input_bed": {"id": "12bb1f4dc2d627ec", "src": "hda", "uuid": "f8f7baa8-89d5-4621-af4c-eea66af1020c"}, "input_bams": {"id": "4142ac5b4d98c70b", "src": "hda", "uuid": "76bce82e-fb46-4668-81c2-af9c6128e8f2"}, "input_bams1": {"id": "4142ac5b4d98c70b", "src": "hda", "uuid": "76bce82e-fb46-4668-81c2-af9c6128e8f2"}, "input_bams2": {"id": "bdcfe7bbc0256760", "src": "hda", "uuid": "60ee606a-7ba8-403d-ad31-72fe262ecabf"}}, "outputs": {"output": {"id": "b946c7f041293882", "src": "hda", "uuid": "bc0c4ec0-51de-4bae-a58d-d5f013eb834d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:56:40", "plugin": "core", "name": "end_epoch", "raw_value": "1717441000.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:56:40", "plugin": "core", "name": "start_epoch", "raw_value": "1717441000.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_bedcov/2.0.2-2", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 2, "time_seconds": 21.146153450012207, "inputs": {"input_bed": {"src": "hda", "id": "1b0b3542dd7b4237"}, "input_bams": {"src": "hda", "id": "19385d7dba0fe933"}, "mapq": "40"}, "job": {"model_class": "Job", "id": "f421e68639743d6b", "state": "error", "exit_code": null, "update_time": "2024-06-03T18:57:10.671389", "create_time": "2024-06-03T18:57:06.686436", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-pfp8k", "command_line": "ln -s '/galaxy/server/database/objects/d/5/8/dataset_d588e9ca-33a0-4f9d-8394-e99e3d7bfe60.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/8/4/e/metadata_84e8d29a-eb31-4ac6-9b00-2748e36094d8.dat' '0.bai' &&   samtools bedcov -Q 40  '/galaxy/server/database/objects/9/6/4/dataset_964895bf-4e7e-47e7-a827-7108c8b608c7.dat' '0' > '/galaxy/server/database/objects/d/4/b/dataset_d4beac01-e2e6-4f1d-998b-54b62f5b3578.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"40\""}, "inputs": {"input_bed": {"id": "1b0b3542dd7b4237", "src": "hda", "uuid": "964895bf-4e7e-47e7-a827-7108c8b608c7"}, "input_bams": {"id": "19385d7dba0fe933", "src": "hda", "uuid": "d588e9ca-33a0-4f9d-8394-e99e3d7bfe60"}, "input_bams1": {"id": "19385d7dba0fe933", "src": "hda", "uuid": "d588e9ca-33a0-4f9d-8394-e99e3d7bfe60"}}, "outputs": {"output": {"id": "71586e9dd785c387", "src": "hda", "uuid": "d4beac01-e2e6-4f1d-998b-54b62f5b3578"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_bedcov/2.0.2-3", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 3, "time_seconds": 30.68619465827942, "inputs": {"input_bed": {"src": "hda", "id": "d8b618176d9ea3d4"}, "input_bams": [{"src": "hda", "id": "fe5612efd12b5883"}, {"src": "hda", "id": "e32b452adb50c155"}], "countdel": true}, "job": {"model_class": "Job", "id": "5e2b6a41b3701645", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:57:40.980673", "create_time": "2024-06-03T18:57:30.975120", "galaxy_version": "23.1", "command_version": "Version: 1.9 (using htslib 1.9)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-54rfr", "command_line": "ln -s '/galaxy/server/database/objects/a/a/e/dataset_aaeb7103-8173-4981-8920-e91caf440261.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/b/3/1/metadata_b31181fd-fd10-4bbf-a249-a9175fca326d.dat' '0.bai' && ln -s '/galaxy/server/database/objects/c/a/0/dataset_ca0878ec-8730-4b87-b732-35438b1612c0.dat' '1' && ln -s '/galaxy/server/database/objects/_metadata_files/f/9/7/metadata_f971e18a-3393-4089-bd0c-52b3f8c7dce6.dat' '1.bai' &&   samtools bedcov -j '/galaxy/server/database/objects/d/2/3/dataset_d23cdca9-cb6b-4b81-982e-ec8262b7d627.dat' '0' '1' > '/galaxy/server/database/objects/a/8/2/dataset_a82ae23a-b797-4ea6-9246-15ea82f5056d.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "true", "mapq": "\"\""}, "inputs": {"input_bams1": {"id": "fe5612efd12b5883", "src": "hda", "uuid": "aaeb7103-8173-4981-8920-e91caf440261"}, "input_bams": {"id": "fe5612efd12b5883", "src": "hda", "uuid": "aaeb7103-8173-4981-8920-e91caf440261"}, "input_bed": {"id": "d8b618176d9ea3d4", "src": "hda", "uuid": "d23cdca9-cb6b-4b81-982e-ec8262b7d627"}, "input_bams2": {"id": "e32b452adb50c155", "src": "hda", "uuid": "ca0878ec-8730-4b87-b732-35438b1612c0"}}, "outputs": {"output": {"id": "2efbea5c37b2e0ec", "src": "hda", "uuid": "a82ae23a-b797-4ea6-9246-15ea82f5056d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:57:32", "plugin": "core", "name": "end_epoch", "raw_value": "1717441052.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:57:32", "plugin": "core", "name": "start_epoch", "raw_value": "1717441052.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_reheader/2.0.1+galaxy1-0", "has_data": true, "data": {"tool_id": "samtools_reheader", "tool_version": "2.0.1+galaxy1", "test_index": 0, "time_seconds": 11.339093208312988, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_reheader/2.0.1+galaxy1-1", "has_data": true, "data": {"tool_id": "samtools_reheader", "tool_version": "2.0.1+galaxy1", "test_index": 1, "time_seconds": 30.345717906951904, "inputs": {"input_header": {"src": "hda", "id": "71278d243fd46443"}, "input_file": {"src": "hda", "id": "5306fbae4c3d5463"}, "no_pg": true}, "job": {"model_class": "Job", "id": "eeeab585171956fd", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:55:49.505600", "create_time": "2024-06-03T18:55:36.259464", "galaxy_version": "23.1", "command_version": "Version: 1.9 (using htslib 1.9)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.1+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-nbzqb", "command_line": "samtools reheader '/galaxy/server/database/objects/6/e/a/dataset_6ea8c400-9e2f-4abf-bdf4-95c699fc5630.dat' '/galaxy/server/database/objects/1/0/c/dataset_10c76968-ff0a-4aec-a1ad-63ba4a098038.dat' --no-PG > '/galaxy/server/database/objects/9/c/6/dataset_9c6ea5a3-d35d-4994-82b7-0d63dfa9b565.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "no_pg": "true"}, "inputs": {"input_header": {"id": "71278d243fd46443", "src": "hda", "uuid": "6ea8c400-9e2f-4abf-bdf4-95c699fc5630"}, "input_file": {"id": "5306fbae4c3d5463", "src": "hda", "uuid": "10c76968-ff0a-4aec-a1ad-63ba4a098038"}}, "outputs": {"output": {"id": "ade059ae8b523116", "src": "hda", "uuid": "9c6ea5a3-d35d-4994-82b7-0d63dfa9b565"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:55:40", "plugin": "core", "name": "end_epoch", "raw_value": "1717440940.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:55:40", "plugin": "core", "name": "start_epoch", "raw_value": "1717440940.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-0", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 0, "time_seconds": 64.67597889900208, "inputs": {"input_loom": {"src": "hda", "id": "15a3fa3be5f90c05"}, "plot_log": false}, "job": {"model_class": "Job", "id": "d0ca885d2974883f", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:58:48.755966", "create_time": "2024-06-03T18:57:59.823347", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-74gc6", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/7/3/f/dataset_73f51506-e73f-47a2-a593-4f6202533bd0.dat' -o '/galaxy/server/database/objects/8/b/7/dataset_8b711222-a421-404e-8d3e-a3c3e02eab07.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "false"}, "inputs": {"input_loom": {"id": "15a3fa3be5f90c05", "src": "hda", "uuid": "73f51506-e73f-47a2-a593-4f6202533bd0"}}, "outputs": {"output_plot": {"id": "ecdc57f1526b5644", "src": "hda", "uuid": "8b711222-a421-404e-8d3e-a3c3e02eab07"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "9 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "9.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:58:32", "plugin": "core", "name": "end_epoch", "raw_value": "1717441112.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:58:23", "plugin": "core", "name": "start_epoch", "raw_value": "1717441103.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-0", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 0, "time_seconds": 33.52117133140564, "inputs": {"input_loom": {"src": "hda", "id": "d49d37674ed3ac25"}, "plot_log": false}, "job": {"model_class": "Job", "id": "c0d6ea19b0db9a73", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:59:57.986099", "create_time": "2024-06-03T18:59:39.678019", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-rr8nv", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/e/b/e/dataset_ebe1c578-5151-476c-8423-b475d5402e47.dat' -o '/galaxy/server/database/objects/c/4/4/dataset_c44b148a-401a-4cd2-85cc-8569a744126e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "false"}, "inputs": {"input_loom": {"id": "d49d37674ed3ac25", "src": "hda", "uuid": "ebe1c578-5151-476c-8423-b475d5402e47"}}, "outputs": {"output_plot": {"id": "67b2368c61e63f25", "src": "hda", "uuid": "c44b148a-401a-4cd2-85cc-8569a744126e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "9 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "9.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:59:49", "plugin": "core", "name": "end_epoch", "raw_value": "1717441189.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:59:40", "plugin": "core", "name": "start_epoch", "raw_value": "1717441180.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-1", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 1, "time_seconds": 34.52825713157654, "inputs": {"input_loom": {"src": "hda", "id": "f737ae26b4682885"}, "plot_log": true}, "job": {"model_class": "Job", "id": "797b63f95a0785a5", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:59:23.276058", "create_time": "2024-06-03T18:59:04.500830", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-chqpp", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/9/b/b/dataset_9bbb08f7-809d-4ac1-ab42-96b437dc20fe.dat' -o '/galaxy/server/database/objects/0/7/9/dataset_07979572-9bf2-4c01-9555-f71278b2f7a6.dat' --log-scale", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "true"}, "inputs": {"input_loom": {"id": "f737ae26b4682885", "src": "hda", "uuid": "9bbb08f7-809d-4ac1-ab42-96b437dc20fe"}}, "outputs": {"output_plot": {"id": "ce87d470ac880e64", "src": "hda", "uuid": "07979572-9bf2-4c01-9555-f71278b2f7a6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "8 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "8.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:59:14", "plugin": "core", "name": "end_epoch", "raw_value": "1717441154.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:59:06", "plugin": "core", "name": "start_epoch", "raw_value": "1717441146.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-1", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 1, "time_seconds": 38.29196286201477, "inputs": {"input_loom": {"src": "hda", "id": "1768589007e0521b"}, "plot_log": true}, "job": {"model_class": "Job", "id": "fbe5822261e917c0", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:00:36.120493", "create_time": "2024-06-03T19:00:16.885828", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-b2wgl", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/8/a/6/dataset_8a6c573e-1a01-4382-8a08-bfc071dcfc2b.dat' -o '/galaxy/server/database/objects/2/e/8/dataset_2e87174e-df83-4d39-af7b-efa8417e30ac.dat' --log-scale", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "true"}, "inputs": {"input_loom": {"id": "1768589007e0521b", "src": "hda", "uuid": "8a6c573e-1a01-4382-8a08-bfc071dcfc2b"}}, "outputs": {"output_plot": {"id": "fbd029b93389cbd2", "src": "hda", "uuid": "2e87174e-df83-4d39-af7b-efa8417e30ac"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "9 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "9.0000000"}, {"title": "Job End Time", "value": "2024-06-03 19:00:27", "plugin": "core", "name": "end_epoch", "raw_value": "1717441227.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:00:18", "plugin": "core", "name": "start_epoch", "raw_value": "1717441218.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 85.55361866950989, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "41888dabc5cd3d7e"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "f0ce395369f002f8"}}, "job": {"model_class": "Job", "id": "9a9e7f4696e1e38c", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:32:52.628020", "create_time": "2024-06-03T18:31:55.910255", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-cqk7c", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat --pe1-2 fastq:/galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat && python '/galaxy/server/database/jobs_directory/000/3/configs/tmposq1p3cc' < contigs.fasta > '/galaxy/server/database/objects/9/1/e/dataset_91ed576a-69fd-4ba5-9175-0f76ea1ec9d4.dat' && python '/galaxy/server/database/jobs_directory/000/3/configs/tmposq1p3cc' < scaffolds.fasta > '/galaxy/server/database/objects/8/1/6/dataset_81611150-ab1f-489b-a68b-168464ca8219.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|rev_reads": {"id": "f0ce395369f002f8", "src": "hda", "uuid": "f8abcb9b-62e6-446a-b907-64990597bbc6"}, "libraries_0|files_0|file_type|fwd_reads": {"id": "41888dabc5cd3d7e", "src": "hda", "uuid": "205cdc3c-1e5a-438e-b7df-07fd342ac08d"}}, "outputs": {"out_log": {"id": "c76978fdb24e41f6", "src": "hda", "uuid": "d704cfb9-5ba6-41a9-bf00-cede64dc482b"}, "out_scaffolds": {"id": "80ed418d18d71b0b", "src": "hda", "uuid": "ec4b1ea8-bce9-4e83-a8ba-bf237e7bf66d"}, "out_contigs": {"id": "00f02934f1b7f55e", "src": "hda", "uuid": "ffabd576-81a6-48db-a7d4-d3238993da04"}, "out_scaffold_stats": {"id": "fc5ad0731ef0adfd", "src": "hda", "uuid": "81611150-ab1f-489b-a68b-168464ca8219"}, "out_contig_stats": {"id": "9a9e7f4696e1e38c", "src": "hda", "uuid": "91ed576a-69fd-4ba5-9175-0f76ea1ec9d4"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/3/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat']\n      right reads: ['/galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\n  0:00:01.416     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:02.736     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.746    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.156    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.156    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.462    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.487    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.517    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.520    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.525    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.526    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.538    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.538    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.538    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\n  0:00:03.552    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:03.566    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.566    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.566    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.582    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.582    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat and /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:03.622    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.627    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.630    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.663    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n  0:00:03.669    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.175   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.180     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.422     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.424     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.425     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.425     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.425     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.085     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.094    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.094    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.484    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.486    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.486    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.487    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.487    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.487    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.897     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.911    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.413    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.413    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.734    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.759    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.792    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.792    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.795    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.796    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing\n..\n      : 346)   Closing short gaps\n  0:00:10.756    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.758    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.758    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.758    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.758    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.776    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.776    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.776    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:10.781    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:10.786    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta\n  0:00:10.791    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta\n  0:00:10.800    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.801    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.801    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.865   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.030   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.279   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.279   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.360   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.367   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.369   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.387   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.392   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.410    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.411    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.411    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.411    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.411    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.411    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.411    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.411    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.413    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.413    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.415    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:11.420    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:11.427    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths\n  0:00:11.438    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths\n  0:00:11.461    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.465    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/3/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat']\n      right reads: ['/galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\n  0:00:01.416     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:02.736     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.746    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.156    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.156    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.462    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.487    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.517    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.520    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.525    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.526    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.538    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.538    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.538    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat\n  0:00:03.552    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:03.566    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.566    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.566    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.581    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.582    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.582    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.592    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.592    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/0/5/dataset_205cdc3c-1e5a-438e-b7df-07fd342ac08d.dat and /galaxy/server/database/objects/f/8/a/dataset_f8abcb9b-62e6-446a-b907-64990597bbc6.dat\n  0:00:03.622    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.627    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.630    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.663    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.663    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n  0:00:03.669    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.076     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.175   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.180     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.422     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.422     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.424     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.425     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.425     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.425     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.085     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.094    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.094    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.484    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.486    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.486    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.487    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.487    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.487    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.897     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.911    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.413    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.413    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.734    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.759    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.792    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.792    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.795    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.796    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing\n..\n      : 346)   Closing short gaps\n  0:00:10.756    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.758    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.758    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.758    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.758    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.758    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.758    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.758    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.770    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.776    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.776    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.776    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:10.781    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:10.786    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta\n  0:00:10.791    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta\n  0:00:10.800    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.801    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.801    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.801    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.865   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.030   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.279   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.279   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.360   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.367   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.369   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.374   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.387   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.392   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.410    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.411    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.411    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.411    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.411    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.411    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.411    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.411    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.411    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.411    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.413    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.413    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.413    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.413    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.413    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.413    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.415    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:11.420    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:11.427    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths\n  0:00:11.438    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths\n  0:00:11.461    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.465    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "16 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "16.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:32:42", "plugin": "core", "name": "end_epoch", "raw_value": "1717439562.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:32:26", "plugin": "core", "name": "start_epoch", "raw_value": "1717439546.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 40.67262244224548, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "4a45fbb3fb159c37"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "729e4d60c3e958d9"}}, "job": {"model_class": "Job", "id": "80ed418d18d71b0b", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:33:33.399510", "create_time": "2024-06-03T18:33:09.242924", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-bfnmk", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/c/6/5/dataset_c65c6c04-98d5-4674-ac32-fe9de7ac84d6.dat --pe1-2 fasta:/galaxy/server/database/objects/1/5/2/dataset_15284f4f-0200-48bb-a329-3f0c477a7d94.dat && python '/galaxy/server/database/jobs_directory/000/6/configs/tmp4ceig9s9' < contigs.fasta > '/galaxy/server/database/objects/7/2/f/dataset_72f74cce-12c2-4810-a845-9b8085ebc02e.dat' && python '/galaxy/server/database/jobs_directory/000/6/configs/tmp4ceig9s9' < scaffolds.fasta > '/galaxy/server/database/objects/6/2/8/dataset_628e67bd-1153-486b-9c82-433bcb279c84.dat'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 8, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 9, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "true", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|rev_reads": {"id": "729e4d60c3e958d9", "src": "hda", "uuid": "15284f4f-0200-48bb-a329-3f0c477a7d94"}, "libraries_0|files_0|file_type|fwd_reads": {"id": "4a45fbb3fb159c37", "src": "hda", "uuid": "c65c6c04-98d5-4674-ac32-fe9de7ac84d6"}}, "outputs": {"out_log": {"id": "6e796702043ce303", "src": "hda", "uuid": "8a6f36ec-4e9e-4efe-b422-3b0ed2e4dd63"}, "out_scaffolds": {"id": "ed69947472bca657", "src": "hda", "uuid": "5b8c09a9-b914-4cd8-8a02-93db58e40cf5"}, "out_contigs": {"id": "e82037e4762f0d8f", "src": "hda", "uuid": "27ff9ce3-5c11-43e0-beda-32d377c5730b"}, "out_scaffold_stats": {"id": "3637600accae9129", "src": "hda", "uuid": "628e67bd-1153-486b-9c82-433bcb279c84"}, "out_contig_stats": {"id": "ae58fc5edaf79b48", "src": "hda", "uuid": "72f74cce-12c2-4810-a845-9b8085ebc02e"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/6/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/c/6/5/dataset_c65c6c04-98d5-4674-ac32-fe9de7ac84d6.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/1/5/2/dataset_15284f4f-0200-48bb-a329-3f0c477a7d94.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/c/6/5/dataset_c65c6c04-98d5-4674-ac32-fe9de7ac84d6.dat']\n      right reads: ['/galaxy/server/database/objects/1/5/2/dataset_15284f4f-0200-48bb-a329-3f0c477a7d94.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.064    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.068     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.161   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.167     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.399     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.399     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.399     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.401     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.401     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.401     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.126     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.135    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.135    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.570    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.571    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.571    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.572    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.572    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.572    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.970     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.985    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.448    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.448    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.765    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.789    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.819    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.819    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.822    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.823    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.825    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.825    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.825    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.825    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.842    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.842    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.853    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.868    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.905    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.001    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.350    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.937    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.011    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.745    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.746    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.746    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.748    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.748    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.750    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:09.072     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:09.082    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:09.521    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:09.521    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:09.834    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:09.859    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:09.892    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:09.892    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:09.893    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:09.895    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:09.895    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:09.897    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:09.897    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:09.897    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:09.897    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.899    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:09.899    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:09.899    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:09.899    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:09.899    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.899   \n..\nindices\n  0:00:12.176    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:12.176    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.178    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:12.178    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.178    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.178    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.197    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.197    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.197    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:12.203    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:12.210    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta\n  0:00:12.216    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta\n  0:00:12.228    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.228    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.228    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.300   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.476   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.726   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.726   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:12.740    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.803   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.810   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.812   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.832   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.837   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.856    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.857    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.857    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.857    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.857    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.857    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.857    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.857    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.858    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.859    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.859    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.860    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:12.866    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:12.873    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths\n  0:00:12.887    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths\n  0:00:12.909    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.912    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/6/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/c/6/5/dataset_c65c6c04-98d5-4674-ac32-fe9de7ac84d6.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/1/5/2/dataset_15284f4f-0200-48bb-a329-3f0c477a7d94.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/c/6/5/dataset_c65c6c04-98d5-4674-ac32-fe9de7ac84d6.dat']\n      right reads: ['/galaxy/server/database/objects/1/5/2/dataset_15284f4f-0200-48bb-a329-3f0c477a7d94.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.064    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.068     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.161   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.167     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.259   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.399     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.399     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.399     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.400     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.401     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.401     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.401     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.126     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.135    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.135    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.570    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.571    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.571    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.572    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.572    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.572    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.970     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.985    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.448    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:03.448    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.765    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.789    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.819    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.819    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.822    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.823    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.824    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.825    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.825    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.825    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.825    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.842    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.842    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.853    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.868    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.868    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.905    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:04.001    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:04.350    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.937    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:06.011    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.745    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.746    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.746    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.746    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.746    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.748    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.748    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.750    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.750    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:09.072     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:09.082    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:09.521    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:09.521    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:09.834    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:09.859    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:09.892    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:09.892    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:09.893    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:09.895    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:09.895    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:09.897    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:09.897    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:09.897    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:09.897    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.899    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:09.899    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:09.899    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:09.899    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:09.899    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:09.899    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:09.899    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.899   \n..\nindices\n  0:00:12.176    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:12.176    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:12.178    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:12.178    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:12.178    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:12.178    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:12.178    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:12.178    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.178    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:12.190    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:12.197    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.197    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.197    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:12.203    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:12.210    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta\n  0:00:12.216    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta\n  0:00:12.228    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:12.228    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:12.228    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:12.228    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:12.300   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.476   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.726   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.726   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:12.740    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.803   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.810   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.812   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.816   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.832   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.837   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.856    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.857    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.857    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.857    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.857    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.857    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.857    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.857    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.857    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.857    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.858    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.859    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.859    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.859    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.859    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.859    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.859    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.860    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:12.866    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:12.873    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths\n  0:00:12.887    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths\n  0:00:12.909    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.912    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:33:24", "plugin": "core", "name": "end_epoch", "raw_value": "1717439604.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:33:10", "plugin": "core", "name": "start_epoch", "raw_value": "1717439590.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 44.07136416435242, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "c097b81658ada906"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "67efc4159c632f34"}}, "job": {"model_class": "Job", "id": "729e4d60c3e958d9", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:34:17.526027", "create_time": "2024-06-03T18:33:50.928736", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-d9dml", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat && python '/galaxy/server/database/jobs_directory/000/9/configs/tmpj_4n5ew6' < contigs.fasta > '/galaxy/server/database/objects/2/2/d/dataset_22d2292a-661a-4ec1-9b52-6a74ce5537c3.dat' && python '/galaxy/server/database/jobs_directory/000/9/configs/tmpj_4n5ew6' < scaffolds.fasta > '/galaxy/server/database/objects/8/0/9/dataset_80986661-bed3-4cc8-a31c-4d014dc5cb06.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 15, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 16, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq.gz\""}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "c097b81658ada906", "src": "hda", "uuid": "b4c43ad7-e057-402d-8904-de0116e83ff8"}, "libraries_0|files_0|file_type|rev_reads": {"id": "67efc4159c632f34", "src": "hda", "uuid": "8e214cba-1f71-4a92-982c-9fc5615e453e"}}, "outputs": {"out_contig_stats": {"id": "ac9b80df066b8379", "src": "hda", "uuid": "22d2292a-661a-4ec1-9b52-6a74ce5537c3"}, "out_scaffold_stats": {"id": "368df7ad168b3b88", "src": "hda", "uuid": "80986661-bed3-4cc8-a31c-4d014dc5cb06"}, "out_contigs": {"id": "c38fe5b384509983", "src": "hda", "uuid": "4c2f91b9-c8d6-46df-ad11-642711c47845"}, "out_scaffolds": {"id": "98b5e068d96380a0", "src": "hda", "uuid": "da5a86d4-6f11-45dc-a15c-a6e7dd0698da"}, "out_log": {"id": "dabd51c506d294e1", "src": "hda", "uuid": "692f48cc-8494-426a-8e7b-92261eb7f6e1"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/9/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat']\n      right reads: ['/galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\n  0:00:01.490     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:02.850     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.861    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.266    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.266    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.551    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.573    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.601    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.604    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.607    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.608    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.620    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.620    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.620    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\n  0:00:03.636    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:03.651    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.651    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.651    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.666    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.666    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.678    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.678    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.678    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.678    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat and /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:03.711    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.715    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.717    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.750    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.750    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.750    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n  0:00:03.755    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.071    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.178   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.184     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.412     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.412     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.412     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.413     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.414     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.080     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.089    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.089    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.311    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.311    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.476    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.477    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.477    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.478    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.478    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.478    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.782     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.797    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.271    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.271    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.575    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.599    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.631    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.631    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.635    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.636    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Cond\n..\n      : 346)   Closing short gaps\n  0:00:10.633    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.635    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.635    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.636    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:10.663    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:10.668    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta\n  0:00:10.673    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta\n  0:00:10.682    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.682    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.682    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.748   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.913   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.162   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.162   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.177    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.239   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.247   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.250   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.270   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.274   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.292    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.292    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.292    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.292    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.292    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.292    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.293    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.293    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.293    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.293    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.293    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.293    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.294    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.294    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.296    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:11.302    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:11.307    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths\n  0:00:11.318    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths\n  0:00:11.336    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.340    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/9/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat']\n      right reads: ['/galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.003     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.008     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.009     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.009     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\n  0:00:01.490     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:02.850     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.861    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.266    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.266    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.551    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.573    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.601    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.604    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.607    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.608    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.620    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.620    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.620    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat\n  0:00:03.636    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:03.651    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.651    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.651    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.665    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.666    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.666    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.678    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.678    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.678    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.678    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/4/c/dataset_b4c43ad7-e057-402d-8904-de0116e83ff8.dat and /galaxy/server/database/objects/8/e/2/dataset_8e214cba-1f71-4a92-982c-9fc5615e453e.dat\n  0:00:03.711    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.715    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.717    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.750    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.750    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.750    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n  0:00:03.755    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.071    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.178   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.184     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.412     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.412     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.412     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.413     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.414     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.414     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.080     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.089    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.089    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.311    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.311    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.476    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.477    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.477    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.478    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.478    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.478    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.782     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.797    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.271    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.271    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.575    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.599    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.631    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.631    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.635    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.636    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Cond\n..\n      : 346)   Closing short gaps\n  0:00:10.633    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.635    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.635    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.635    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.635    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.636    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.636    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.636    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.649    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.657    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:10.663    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:10.668    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta\n  0:00:10.673    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta\n  0:00:10.682    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.682    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.682    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.682    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.748   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.913   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.162   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.162   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.177    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.239   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.247   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.250   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.256   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.270   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.274   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.292    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.292    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.292    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.292    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.292    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.292    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.292    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.293    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.293    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.293    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.293    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.293    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.293    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.293    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.294    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.294    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.294    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.294    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.294    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.294    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.296    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:11.302    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:11.307    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths\n  0:00:11.318    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths\n  0:00:11.336    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.340    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "16 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "16.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:34:08", "plugin": "core", "name": "end_epoch", "raw_value": "1717439648.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:33:52", "plugin": "core", "name": "start_epoch", "raw_value": "1717439632.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 55.22956871986389, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "fc383df4a9081912"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "4132be23204bb798"}}, "job": {"model_class": "Job", "id": "e82037e4762f0d8f", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:35:13.086665", "create_time": "2024-06-03T18:34:35.104660", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-248j7", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat --pe1-2 fastq:/galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat && python '/galaxy/server/database/jobs_directory/000/12/configs/tmpa6wlbnk7' < contigs.fasta > '/galaxy/server/database/objects/7/1/2/dataset_71235b3c-ac4f-4791-91d1-d4379f999f31.dat' && python '/galaxy/server/database/jobs_directory/000/12/configs/tmpa6wlbnk7' < scaffolds.fasta > '/galaxy/server/database/objects/f/8/8/dataset_f88d5efe-8e72-47f5-8a5a-72247abbd574.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": true}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 22, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq\""}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "fc383df4a9081912", "src": "hda", "uuid": "d096df6a-87bc-4b96-a53f-f786b75a7e6a"}, "libraries_0|files_0|file_type|rev_reads": {"id": "4132be23204bb798", "src": "hda", "uuid": "07311687-40ad-4135-8282-b33c9ea25e1b"}}, "outputs": {"out_contig_stats": {"id": "d2628e82b8466e92", "src": "hda", "uuid": "71235b3c-ac4f-4791-91d1-d4379f999f31"}, "out_scaffold_stats": {"id": "cba925f21b1b3754", "src": "hda", "uuid": "f88d5efe-8e72-47f5-8a5a-72247abbd574"}, "out_contigs": {"id": "bfaaf92732c8c8a9", "src": "hda", "uuid": "1e7172d3-b830-48fc-9633-a0afc842a2d0"}, "out_scaffolds": {"id": "47b5ff5a45560b3e", "src": "hda", "uuid": "831b5ed9-b7bc-436a-ba92-29d48a641aa2"}, "out_log": {"id": "401b616c9df5660a", "src": "hda", "uuid": "a4640530-61cc-4f85-8591-3ed7c1edb2ab"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/12/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/12/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat']\n      right reads: ['/galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\n  0:00:01.264     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:02.502     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.887    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.887    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.191    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.216    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.245    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.251    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.253    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.264    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\n  0:00:03.279    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:03.294    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.294    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.294    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.310    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.310    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.320    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.320    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat and /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:03.350    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.354    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.357    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.393    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.393    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.393    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n  0:00:03.399    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.076    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.080     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.176   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.182     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.409     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.409     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.409     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.411     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.412     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.412     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.412     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.100     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.109    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.336    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.336    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.479    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.480    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.480    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.481    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.481    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.481    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.817     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.831    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.340    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.340    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.674    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.702    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.739    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.740    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.743    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.744    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.744    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl\n..\n short gaps\n  0:00:08.990    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.993    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:08.993    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.993    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.993    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.014    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.014    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.014    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:09.020    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:09.026    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta\n  0:00:09.041    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.041    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.041    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.122   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.298   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.546   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.546   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:09.561    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.643   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.645   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.665   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.669   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.690    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.690    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.690    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.690    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.690    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.691    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.691    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.692    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.692    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.693    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:09.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:09.706    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths\n  0:00:09.716    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths\n  0:00:09.736    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.739    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/12/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/12/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat']\n      right reads: ['/galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\n  0:00:01.264     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:02.502     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.887    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.887    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.191    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.216    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.245    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.248    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.251    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.253    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.264    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat\n  0:00:03.279    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:03.294    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.294    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.294    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.308    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.310    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.310    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.320    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.320    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.320    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/0/9/dataset_d096df6a-87bc-4b96-a53f-f786b75a7e6a.dat and /galaxy/server/database/objects/0/7/3/dataset_07311687-40ad-4135-8282-b33c9ea25e1b.dat\n  0:00:03.350    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.354    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.357    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.393    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.393    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.393    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n  0:00:03.399    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.076    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.080     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.176   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.182     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.409     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.409     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.409     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.411     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.412     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.412     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.412     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.100     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.109    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.336    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.336    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.479    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.480    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.480    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.481    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.481    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.481    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.817     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.831    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.340    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.340    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.674    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.702    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.739    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.740    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.743    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.744    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.744    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl\n..\n short gaps\n  0:00:08.990    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.993    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.993    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.993    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.993    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:08.993    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.993    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.993    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.006    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.014    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.014    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.014    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:09.020    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:09.026    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta\n  0:00:09.031    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta\n  0:00:09.041    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.041    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.041    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.041    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.122   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.298   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.546   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.546   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:09.561    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.634   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.643   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.645   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.651   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.665   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.669   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.690    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.690    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.690    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.690    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.690    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.690    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.690    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.691    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.691    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.692    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.692    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.692    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.692    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.692    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.692    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:09.693    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:09.700    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:09.706    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths\n  0:00:09.716    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths\n  0:00:09.736    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.739    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:34:36", "plugin": "core", "name": "start_epoch", "raw_value": "1717439676.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:35:04", "plugin": "core", "name": "end_epoch", "raw_value": "1717439704.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "28 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "28.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 42.4028639793396, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "98970ee442666e73"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "baee28a4c08e739b"}}, "job": {"model_class": "Job", "id": "c097b81658ada906", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:35:55.783527", "create_time": "2024-06-03T18:35:29.300778", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-bhv6k", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat --pe1-2 fastq:/galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat && python '/galaxy/server/database/jobs_directory/000/15/configs/tmp7ubuymxi' < contigs.fasta > '/galaxy/server/database/objects/d/8/0/dataset_d808d9d1-36b1-46fb-ba75-e91ce7e1ceb8.dat' && python '/galaxy/server/database/jobs_directory/000/15/configs/tmp7ubuymxi' < scaffolds.fasta > '/galaxy/server/database/objects/1/d/9/dataset_1d988292-7166-4ad3-a1ec-74cc9c23d2f1.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 29, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 30, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq\""}, "inputs": {"libraries_0|files_0|file_type|rev_reads": {"id": "baee28a4c08e739b", "src": "hda", "uuid": "8b83975d-bcd6-4f9e-ae84-f55cd8668c04"}, "libraries_0|files_0|file_type|fwd_reads": {"id": "98970ee442666e73", "src": "hda", "uuid": "0ecea7c5-288a-4e46-947c-e6fe4cc80520"}}, "outputs": {"out_contig_stats": {"id": "e76bee8beb0e2d0d", "src": "hda", "uuid": "d808d9d1-36b1-46fb-ba75-e91ce7e1ceb8"}, "out_scaffold_stats": {"id": "911db306943b0b99", "src": "hda", "uuid": "1d988292-7166-4ad3-a1ec-74cc9c23d2f1"}, "out_contigs": {"id": "0fccd7f5ae994175", "src": "hda", "uuid": "4cf1b6b4-eb56-4a39-80b5-df84e3773d6e"}, "out_scaffolds": {"id": "a1ae3adb0868c80b", "src": "hda", "uuid": "c61f1a2f-d2b0-4500-88ff-39fc39ca5c3f"}, "out_log": {"id": "f2a5cd7e629539ea", "src": "hda", "uuid": "f416ee7f-800f-4ee4-9e71-76a10a6b3234"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/15/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/15/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat']\n      right reads: ['/galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\n  0:00:01.622     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:02.981     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.992    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.397    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.397    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.714    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.741    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.773    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.777    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.782    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.783    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.796    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.796    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.796    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\n  0:00:03.811    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:03.829    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.829    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.829    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.852    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.852    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.862    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.862    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.862    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.862    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat and /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:03.894    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.898    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.901    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.934    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.934    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.934    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n  0:00:03.940    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.293   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.450     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.451     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.451     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.452     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.453     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.453     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.453     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.218     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.227    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.227    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.461    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.461    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.629    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.630    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.630    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.631    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:03.065     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:03.079    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.544    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:03.544    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.864    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.890    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.925    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.925    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.928    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.929    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nosing short gaps\n  0:00:09.050    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:09.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.052    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.052    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.069    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.069    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.070    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:09.076    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:09.082    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta\n  0:00:09.087    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta\n  0:00:09.098    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.167   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.339   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.588   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.588   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:09.601    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.666   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.675   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.676   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.695   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.699   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.723    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.723    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.724    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.724    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.724    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.724    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.725    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.725    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.726    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.726    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.727    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:09.734    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:09.741    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths\n  0:00:09.753    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths\n  0:00:09.778    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.781    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/15/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/15/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat']\n      right reads: ['/galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\n  0:00:01.622     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:02.981     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.992    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.397    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.397    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.714    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.741    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.773    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.777    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.782    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.783    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.796    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.796    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.796    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat\n  0:00:03.811    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:03.829    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.829    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.829    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.849    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.852    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.852    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.862    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.862    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.862    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.862    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/0/e/c/dataset_0ecea7c5-288a-4e46-947c-e6fe4cc80520.dat and /galaxy/server/database/objects/8/b/8/dataset_8b83975d-bcd6-4f9e-ae84-f55cd8668c04.dat\n  0:00:03.894    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.898    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.901    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.934    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.934    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.934    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n  0:00:03.940    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.293   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.450     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.451     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.451     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.452     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.453     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.453     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.453     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.218     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.227    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.227    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.461    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.461    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.629    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.630    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.630    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.631    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:03.065     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:03.079    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.544    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:03.544    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.864    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.890    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.925    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.925    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.928    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.929    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nosing short gaps\n  0:00:09.050    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.052    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.052    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.052    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:09.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.052    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.052    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.061    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.069    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.069    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.070    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:09.076    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:09.082    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta\n  0:00:09.087    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta\n  0:00:09.098    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.098    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.098    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.167   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.339   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.588   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.588   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:09.601    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.666   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.675   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.676   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.681   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.695   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.699   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.723    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.723    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.723    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.723    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.724    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.724    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.724    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.724    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.724    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.724    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.724    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.725    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.725    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.725    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.726    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.726    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.726    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.726    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.726    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:09.727    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:09.734    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:09.741    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths\n  0:00:09.753    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths\n  0:00:09.778    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.781    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:35:31", "plugin": "core", "name": "start_epoch", "raw_value": "1717439731.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:35:45", "plugin": "core", "name": "end_epoch", "raw_value": "1717439745.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 47.27838730812073, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "a4b654e1c89d712f"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "f2c7f333f5a35146"}, "contig_graph_out": true, "scaffold_graph_out": true}, "job": {"model_class": "Job", "id": "368df7ad168b3b88", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:36:41.786394", "create_time": "2024-06-03T18:36:12.953211", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-lbdf9", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat --pe1-2 fastq:/galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat && python '/galaxy/server/database/jobs_directory/000/18/configs/tmpehi2rhq_' < contigs.fasta > '/galaxy/server/database/objects/7/5/9/dataset_75924103-511c-433f-b550-756d9dd24756.dat' && python '/galaxy/server/database/jobs_directory/000/18/configs/tmpehi2rhq_' < scaffolds.fasta > '/galaxy/server/database/objects/c/8/5/dataset_c8599d79-0706-49b1-8d13-9159ae4c0236.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "true", "contig_graph_out": "true", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 36, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 37, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "a4b654e1c89d712f", "src": "hda", "uuid": "0952b5a7-017f-4dbd-b6aa-2e82aee7a8af"}, "libraries_0|files_0|file_type|rev_reads": {"id": "f2c7f333f5a35146", "src": "hda", "uuid": "0a30df1d-25dc-450b-a56e-578d469477be"}}, "outputs": {"out_contig_stats": {"id": "266357f16a923e4a", "src": "hda", "uuid": "75924103-511c-433f-b550-756d9dd24756"}, "out_scaffold_stats": {"id": "16b3c48b0ce31480", "src": "hda", "uuid": "c8599d79-0706-49b1-8d13-9159ae4c0236"}, "out_contigs": {"id": "c3e3366ee6546867", "src": "hda", "uuid": "2d77efcd-9218-430e-94d3-032d84a1ed98"}, "out_scaffolds": {"id": "51cb21e50069778d", "src": "hda", "uuid": "8e37a0c9-3abd-4131-b285-50aed7d2842f"}, "out_log": {"id": "fc6227545f0a3886", "src": "hda", "uuid": "2a475507-34a8-436c-916d-49f4e3c807d0"}, "contig_graph": {"id": "111efbac7d38b1c7", "src": "hda", "uuid": "70fca81e-4bb7-4cba-af5f-7ff3b7193474"}, "scaffold_graph": {"id": "5f976882de3109c3", "src": "hda", "uuid": "74d86886-74fc-49e3-9a39-ba2c0936defb"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/18/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/18/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat']\n      right reads: ['/galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\n  0:00:01.610     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:03.103     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.114    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.545    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.546    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.880    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.905    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.940    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.944    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.949    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.950    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.961    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.962    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.962    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\n  0:00:03.976    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:03.992    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.992    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.992    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:04.009    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:04.009    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:04.020    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:04.020    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:04.020    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:04.020    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat and /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:04.051    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:04.056    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:04.058    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.095    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.095    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.095    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n  0:00:04.104    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.177   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.183     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.280   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.433     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.433     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.433     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.435     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.220     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.229    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.229    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.466    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.466    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.629    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.630    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.630    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.631    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.286     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.829    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.829    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.187    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.214    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.248    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.248    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.250    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.251    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:11.847    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.871    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.871    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.872    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:11.879    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:11.885    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta\n  0:00:11.892    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta\n  0:00:11.902    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.902    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.902    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.972   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.142   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.391   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.391   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.411    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.482   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.493   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.496   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.521   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.527   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.555    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.555    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.555    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.555    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.556    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.556    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.556    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.556    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.556    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.556    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.556    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.556    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.558    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.558    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.560    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:12.567    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:12.573    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths\n  0:00:12.585    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths\n  0:00:12.606    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.610    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/18/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/18/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat']\n      right reads: ['/galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.005     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.005     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\n  0:00:01.610     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:03.103     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.114    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.545    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.546    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.880    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.905    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.940    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.944    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.949    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.950    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.961    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.962    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.962    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat\n  0:00:03.976    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:03.992    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.992    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.992    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:04.007    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:04.009    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:04.009    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:04.020    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:04.020    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:04.020    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:04.020    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/0/9/5/dataset_0952b5a7-017f-4dbd-b6aa-2e82aee7a8af.dat and /galaxy/server/database/objects/0/a/3/dataset_0a30df1d-25dc-450b-a56e-578d469477be.dat\n  0:00:04.051    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:04.056    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:04.058    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.095    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.095    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.095    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n  0:00:04.104    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.070    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.075     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.177   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.183     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.280   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.433     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.433     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.433     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.435     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.220     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.229    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.229    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.466    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.466    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.629    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.630    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.630    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.631    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.631    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.286     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.829    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.829    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:04.187    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.214    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.248    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.248    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.250    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.251    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:11.847    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.851    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.851    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.851    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.851    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.851    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.863    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.871    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.871    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.872    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:11.879    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:11.885    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta\n  0:00:11.892    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta\n  0:00:11.902    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.902    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.902    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.902    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.972   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.142   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.391   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.391   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.411    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.482   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.493   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.496   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.505   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.521   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.527   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.555    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.555    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.555    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.555    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.555    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.556    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.556    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.556    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.556    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.556    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.556    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.556    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.556    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.556    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.558    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.558    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.558    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.558    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.558    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.558    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.560    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:12.567    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:12.573    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths\n  0:00:12.585    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths\n  0:00:12.606    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.610    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:36:14", "plugin": "core", "name": "start_epoch", "raw_value": "1717439774.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:36:32", "plugin": "core", "name": "end_epoch", "raw_value": "1717439792.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 44.866777420043945, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "a5d15cba248e82d1"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "350bab2d012d8812"}}, "job": {"model_class": "Job", "id": "dabd51c506d294e1", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:37:27.738372", "create_time": "2024-06-03T18:36:59.237161", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-rjh2r", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat --pe1-2 fastq:/galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat && python '/galaxy/server/database/jobs_directory/000/21/configs/tmpj26nk081' < contigs.fasta > '/galaxy/server/database/objects/9/d/1/dataset_9d16472b-0369-4aa9-bdd8-e3ba76e55710.dat' && python '/galaxy/server/database/jobs_directory/000/21/configs/tmpj26nk081' < scaffolds.fasta > '/galaxy/server/database/objects/1/8/c/dataset_18c49ce7-be02-4b52-90dd-2e1039d3e0ce.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 45, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 46, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "a5d15cba248e82d1", "src": "hda", "uuid": "46a48b65-05eb-47e5-9fb3-7c11d7a29890"}, "libraries_0|files_0|file_type|rev_reads": {"id": "350bab2d012d8812", "src": "hda", "uuid": "b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04"}}, "outputs": {"out_scaffold_stats": {"id": "ae4f67f2103671a0", "src": "hda", "uuid": "18c49ce7-be02-4b52-90dd-2e1039d3e0ce"}, "out_contigs": {"id": "103950d7afe802ac", "src": "hda", "uuid": "2704d59d-9d31-4312-9c6b-c643a3112199"}, "out_scaffolds": {"id": "b4c9a44b906a99a4", "src": "hda", "uuid": "4ad5a1bb-8230-441b-bfa8-138fa0cfa3f8"}, "out_log": {"id": "793a5218ea67c9a7", "src": "hda", "uuid": "419573e0-ade8-4a5f-840d-2984803a6eb3"}, "out_contig_stats": {"id": "697d27972fc67f95", "src": "hda", "uuid": "9d16472b-0369-4aa9-bdd8-e3ba76e55710"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/21/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/21/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat']\n      right reads: ['/galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\n  0:00:01.578     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:02.993     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.004    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.739    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.763    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.794    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.798    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.803    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.804    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.818    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.818    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.818    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\n  0:00:03.833    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:03.849    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.849    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.849    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.866    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.866    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.876    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.876    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.876    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.876    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat and /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:03.906    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.911    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.914    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.951    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.951    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.951    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n  0:00:03.957    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.432     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.434     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.216     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.225    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.225    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.473    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.473    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.631    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.632    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.632    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.632    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.632    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.633    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.064     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.597    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.597    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.990    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.016    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.054    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.054    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.059    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.061    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:11.653    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.655    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.655    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.656    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.656    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.656    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.675    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.675    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.676    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:11.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:11.691    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta\n  0:00:11.697    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta\n  0:00:11.708    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.708    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.708    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.781   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.951   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.203   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.203   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.217    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.280   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.287   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.289   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.306   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.311   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.329    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.329    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.329    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.329    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.329    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.330    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.330    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.330    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.330    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.330    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.330    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.330    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.331    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.332    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.332    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.333    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:12.339    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:12.345    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths\n  0:00:12.356    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths\n  0:00:12.376    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.379    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/21/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/21/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat']\n      right reads: ['/galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.007     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\n  0:00:01.578     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:02.993     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:03.004    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.739    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.763    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.794    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.798    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.803    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.804    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.818    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.818    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.818    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat\n  0:00:03.833    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:03.849    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.849    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.849    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.864    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.866    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.866    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.876    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.876    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.876    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.876    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/6/a/dataset_46a48b65-05eb-47e5-9fb3-7c11d7a29890.dat and /galaxy/server/database/objects/b/0/e/dataset_b0ee1e48-4e38-4f10-acc7-e8aeb89cdb04.dat\n  0:00:03.906    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.911    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.914    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.951    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.951    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.951    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n  0:00:03.957    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.072    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.078     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.183   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.190     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.297   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.432     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.434     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.435     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.216     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.225    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.225    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.473    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.473    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.631    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.632    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.632    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.632    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.632    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.633    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.064     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.597    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.597    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.990    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:04.016    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.054    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.054    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.059    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.061    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:11.653    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.655    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.655    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.655    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.655    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.656    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.656    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.656    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.656    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.656    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.668    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.675    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.675    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.676    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:11.684    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:11.691    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta\n  0:00:11.697    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta\n  0:00:11.708    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.708    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.708    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.708    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.781   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.951   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.203   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:12.203   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:12.217    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.280   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.287   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.289   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.294   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.306   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.311   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.329    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.329    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.329    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.329    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.329    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.329    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.330    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.330    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.330    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.330    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.330    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.330    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.330    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.330    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.331    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.332    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.332    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.332    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.332    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.332    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.332    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.333    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:12.339    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:12.345    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths\n  0:00:12.356    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths\n  0:00:12.376    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.379    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:37:01", "plugin": "core", "name": "start_epoch", "raw_value": "1717439821.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:37:18", "plugin": "core", "name": "end_epoch", "raw_value": "1717439838.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "17 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "17.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 46.31789684295654, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "6edda089ae928ffc"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "e2ab605e2ff87d56"}}, "job": {"model_class": "Job", "id": "d2628e82b8466e92", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:38:14.093599", "create_time": "2024-06-03T18:37:45.457212", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-bhdxr", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat && python '/galaxy/server/database/jobs_directory/000/24/configs/tmpxsm7esbq' < contigs.fasta > '/galaxy/server/database/objects/0/6/a/dataset_06a8b2f5-73e1-46d7-ade4-39c41fcc7baa.dat' && python '/galaxy/server/database/jobs_directory/000/24/configs/tmpxsm7esbq' < scaffolds.fasta > '/galaxy/server/database/objects/b/a/1/dataset_ba1c084a-1793-484e-b56d-43c5916d710d.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 52, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 53, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastqsanger.gz\""}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "6edda089ae928ffc", "src": "hda", "uuid": "49bf9298-f594-43c6-ab58-111f00fac843"}, "libraries_0|files_0|file_type|rev_reads": {"id": "e2ab605e2ff87d56", "src": "hda", "uuid": "c5e7c85d-69b8-47c2-af20-b6c5956a2751"}}, "outputs": {"out_contig_stats": {"id": "08122861bfbc5ba4", "src": "hda", "uuid": "06a8b2f5-73e1-46d7-ade4-39c41fcc7baa"}, "out_scaffold_stats": {"id": "59927d0b2786a689", "src": "hda", "uuid": "ba1c084a-1793-484e-b56d-43c5916d710d"}, "out_contigs": {"id": "8ef43c059b649b43", "src": "hda", "uuid": "d55c690f-2443-4e7e-8026-be0323d64574"}, "out_scaffolds": {"id": "9f2adca3d7a001ef", "src": "hda", "uuid": "7b3c016a-c4cd-433a-b955-d82d36009545"}, "out_log": {"id": "575300eee3c1cea7", "src": "hda", "uuid": "f5180760-3b3f-465e-9e7a-4cf2d74bf758"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/24/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat']\n      right reads: ['/galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\n  0:00:01.482     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:02.923     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.936    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.454    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.454    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.886    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.915    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.952    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.955    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.961    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.962    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.975    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\n  0:00:03.990    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:04.005    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:04.005    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:04.005    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:04.021    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:04.021    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:04.033    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:04.033    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:04.033    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:04.033    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat and /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:04.068    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:04.073    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:04.076    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.113    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.113    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.113    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n  0:00:04.119    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.075    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.080     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.190   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.201     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.302   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.432     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.433     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.434     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.208     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.218    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.218    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.463    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.463    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.642    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.643    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.643    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.644    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.644    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.644    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.130     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.625    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.625    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.953    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.978    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.010    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.010    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.013    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.014    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDU\n..\nsing short gaps\n  0:00:11.403    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.405    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.405    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.405    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.405    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.421    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.421    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.422    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:11.429    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:11.434    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta\n  0:00:11.439    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta\n  0:00:11.448    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.449    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.449    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.520   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.689   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.953    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.017   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.024   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.026   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.042   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.047   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.066    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.066    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.066    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.066    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.066    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.066    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.066    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.066    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.067    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.068    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.068    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.069    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:12.075    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:12.081    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths\n  0:00:12.091    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths\n  0:00:12.112    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.115    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/24/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.75+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat']\n      right reads: ['/galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.008     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\n  0:00:01.482     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:02.923     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.936    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.454    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:03.454    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.886    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.915    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.952    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:03.955    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:03.961    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:03.962    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:03.975    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:03.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:03.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat\n  0:00:03.990    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:04.005    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:04.005    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:04.005    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:04.019    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:04.021    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:04.021    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:04.033    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:04.033    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:04.033    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:04.033    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/9/b/dataset_49bf9298-f594-43c6-ab58-111f00fac843.dat and /galaxy/server/database/objects/c/5/e/dataset_c5e7c85d-69b8-47c2-af20-b6c5956a2751.dat\n  0:00:04.068    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:04.073    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:04.076    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:04.113    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:04.113    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:04.113    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n  0:00:04.119    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.075    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.080     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.190   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.201     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.302   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.432     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.432     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.433     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.434     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.434     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.208     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.218    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.218    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.463    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.463    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.642    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.643    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.643    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.644    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.644    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.644    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:03.130     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:03.144    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.625    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.625    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.953    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.978    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:04.010    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:04.010    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:04.013    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:04.014    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDU\n..\nsing short gaps\n  0:00:11.403    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:11.405    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:11.405    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:11.405    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:11.405    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:11.405    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:11.405    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.405    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:11.416    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:11.421    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.421    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.422    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:11.429    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:11.434    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta\n  0:00:11.439    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta\n  0:00:11.448    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:11.449    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:11.449    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:11.449    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:11.520   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.689   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:11.953    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:12.017   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:12.024   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.026   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:12.030   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:12.042   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:12.047   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:12.066    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:12.066    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:12.066    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.066    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:12.066    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:12.066    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:12.066    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:12.066    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:12.066    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:12.066    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:12.067    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:12.068    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:12.068    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:12.068    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:12.068    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:12.068    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:12.068    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:12.069    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:12.075    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:12.081    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths\n  0:00:12.091    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths\n  0:00:12.112    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:12.115    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:37:47", "plugin": "core", "name": "start_epoch", "raw_value": "1717439867.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:38:04", "plugin": "core", "name": "end_epoch", "raw_value": "1717439884.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "17 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "17.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-0", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 0, "time_seconds": 48.72575640678406, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "da09dcba8a3e15be"}, "readtype|single_or_paired": "se", "operations_0|operation|name": "SLIDINGWINDOW", "output_logs": true, "output_err": true}, "job": {"model_class": "Job", "id": "ae4f67f2103671a0", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:44:32.644713", "create_time": "2024-06-03T18:44:01.007724", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-zjzx6", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/7/0/1/dataset_701bb475-a3a9-4c56-b55b-4f5e53c3d8a8.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' SLIDINGWINDOW:4:20 -trimlog trimlog 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/2/8/3/dataset_2838ed6c-a0a3-4d07-beeb-a651097b23ab.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "true", "output_logs": "true", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"readtype|fastq_in": {"id": "da09dcba8a3e15be", "src": "hda", "uuid": "701bb475-a3a9-4c56-b55b-4f5e53c3d8a8"}}, "outputs": {"fastq_out": {"id": "4311935c77a483ee", "src": "hda", "uuid": "2838ed6c-a0a3-4d07-beeb-a651097b23ab"}, "log_file": {"id": "0aa1f62ac0287d67", "src": "hda", "uuid": "2ce05397-bfa3-41fc-a4f3-5e41552187e7"}, "err_file": {"id": "7feecede9e68bdb3", "src": "hda", "uuid": "8b1a9478-d15a-4e5d-8a44-0cfa1e77bfb0"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:44:20", "plugin": "core", "name": "end_epoch", "raw_value": "1717440260.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:44:20", "plugin": "core", "name": "start_epoch", "raw_value": "1717440260.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "output_problems": ["Output err_file:  different than expected, difference (using diff):\n( /tmp/tmppoa3og1rtrimmomatic_se_out1.err v. /tmp/tmp01e59bjitrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n"], "status": "failure"}}, {"id": "trimmomatic/0.38.1-1", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 1, "time_seconds": 26.559336185455322, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "97917bbf2573f0e1"}, "readtype|single_or_paired": "se", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "b4c9a44b906a99a4", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:44:59.905161", "create_time": "2024-06-03T18:44:49.275065", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-w7h8m", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/e/f/e/dataset_efe3a3a1-b84c-4fae-92c5-d3ac05f3f6ad.dat' fastq_in.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger.gz' fastq_out.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger.gz' '/galaxy/server/database/objects/2/d/e/dataset_2de702e2-0459-43fe-a832-051dacc49656.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 90, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"readtype|fastq_in": {"id": "97917bbf2573f0e1", "src": "hda", "uuid": "efe3a3a1-b84c-4fae-92c5-d3ac05f3f6ad"}}, "outputs": {"fastq_out": {"id": "7e551d39a6bfb95e", "src": "hda", "uuid": "2de702e2-0459-43fe-a832-051dacc49656"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:44:51", "plugin": "core", "name": "end_epoch", "raw_value": "1717440291.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:44:51", "plugin": "core", "name": "start_epoch", "raw_value": "1717440291.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-10", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 10, "time_seconds": 26.262815475463867, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "09e9bde8aac7a97c"}, "readtype|single_or_paired": "se", "operations_0|operation|target_length": "75", "operations_0|operation|strictness": "0.8", "operations_0|operation|name": "MAXINFO"}, "job": {"model_class": "Job", "id": "8640633cd340e2c7", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:49:01.325161", "create_time": "2024-06-03T18:48:50.707646", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-c588z", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/6/6/9/dataset_669055dc-3c60-45f8-be0c-dab96e92773d.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' MAXINFO:75:0.8 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/4/4/0/dataset_44030f8c-2d74-4f86-bb0e-88caf96e1c74.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 7, \"name\": \"MAXINFO\", \"strictness\": \"0.8\", \"target_length\": \"75\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 132, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"readtype|fastq_in": {"id": "09e9bde8aac7a97c", "src": "hda", "uuid": "669055dc-3c60-45f8-be0c-dab96e92773d"}}, "outputs": {"fastq_out": {"id": "83d8e0dabbe2b07c", "src": "hda", "uuid": "44030f8c-2d74-4f86-bb0e-88caf96e1c74"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:48:52", "plugin": "core", "name": "end_epoch", "raw_value": "1717440532.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:48:52", "plugin": "core", "name": "start_epoch", "raw_value": "1717440532.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-11", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 11, "time_seconds": 29.478332042694092, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "11562a0c2710eda2"}, "readtype|fastq_r2_in": {"src": "hda", "id": "94263b265f404ab3"}, "readtype|single_or_paired": "pair_of_files", "illuminaclip|adapter_type|adapter_fasta": "TruSeq2-PE.fa", "illuminaclip|do_illuminaclip": true, "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "aa44f08334397424", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:49:29.462478", "create_time": "2024-06-03T18:49:17.834072", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-9cjst", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/b/8/d/dataset_b8d20b50-d839-43fc-bbab-16e3d4c0113a.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/6/8/a/dataset_68ab8b39-0933-4a39-9488-ce3e2da4c4ef.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' ILLUMINACLIP:$TRIMMOMATIC_ADAPTERS_PATH/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/4/4/9/dataset_44951dcd-bb9b-4fa7-8923-e35112e49cc3.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/7/4/f/dataset_74fe125b-24e8-4f90-b2e3-e3bb9d978faa.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/a/7/0/dataset_a70beebf-a77f-41be-b22c-200b17c646ed.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/8/3/f/dataset_83f66bb4-1d69-4ad8-8fa7-91e0ca032421.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 0, \"adapter_type\": {\"__current_case__\": 0, \"adapter_fasta\": \"TruSeq2-PE.fa\", \"standard_or_custom\": \"standard\"}, \"do_illuminaclip\": true, \"keep_both_reads\": true, \"min_adapter_len\": \"8\", \"palindrome_clip_threshold\": \"30\", \"seed_mismatches\": \"2\", \"simple_clip_threshold\": \"10\"}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"readtype|fastq_r1_in": {"id": "11562a0c2710eda2", "src": "hda", "uuid": "b8d20b50-d839-43fc-bbab-16e3d4c0113a"}, "readtype|fastq_r2_in": {"id": "94263b265f404ab3", "src": "hda", "uuid": "68ab8b39-0933-4a39-9488-ce3e2da4c4ef"}}, "outputs": {"fastq_out_r1_paired": {"id": "0709db19824df686", "src": "hda", "uuid": "44951dcd-bb9b-4fa7-8923-e35112e49cc3"}, "fastq_out_r2_paired": {"id": "c2a7222ee0835414", "src": "hda", "uuid": "a70beebf-a77f-41be-b22c-200b17c646ed"}, "fastq_out_r1_unpaired": {"id": "c37e7f990e7dfe24", "src": "hda", "uuid": "74fe125b-24e8-4f90-b2e3-e3bb9d978faa"}, "fastq_out_r2_unpaired": {"id": "09ecc4d1e9b4c3bc", "src": "hda", "uuid": "83f66bb4-1d69-4ad8-8fa7-91e0ca032421"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\nUsing Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\nUsing Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\nUsing Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\nUsing Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\nUsing Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\nUsing Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 18:49:20", "plugin": "core", "name": "end_epoch", "raw_value": "1717440560.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:49:20", "plugin": "core", "name": "start_epoch", "raw_value": "1717440560.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-12", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 12, "time_seconds": 9.451685667037964, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "trimmomatic/0.38.1-2", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 2, "time_seconds": 24.119515657424927, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "17d0ff2b4219fc86"}, "readtype|fastq_r2_in": {"src": "hda", "id": "0df92b265f78b27f"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "e2ab605e2ff87d56", "state": "error", "exit_code": null, "update_time": "2024-06-03T18:45:23.564599", "create_time": "2024-06-03T18:45:17.225848", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-5z6bz", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/c/2/5/dataset_c25d6e28-238a-455a-986c-decef4aba9e2.dat' fastq_r1.'fastqsanger.gz' && ln -s '/galaxy/server/database/objects/9/3/9/dataset_939c4058-2f28-43f9-94f1-694ffc738351.dat' fastq_r2.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger.gz' fastq_r2.'fastqsanger.gz' fastq_out_r1_paired.'fastqsanger.gz' fastq_out_r1_unpaired.'fastqsanger.gz' fastq_out_r2_paired.'fastqsanger.gz' fastq_out_r2_unpaired.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger.gz' '/galaxy/server/database/objects/3/2/d/dataset_32d36785-47d3-4068-9978-ea101cfa33e6.dat' && mv fastq_out_r1_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/5/3/d/dataset_53d3aaa9-11ff-4190-914b-c10a8641365f.dat' && mv fastq_out_r2_paired.'fastqsanger.gz' '/galaxy/server/database/objects/1/f/c/dataset_1fc0bac5-14c4-4159-989b-3cae33b45427.dat' && mv fastq_out_r2_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/5/5/b/dataset_55b09c45-b5f9-4e6a-82ba-f3e63a69984d.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 92, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 93, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"readtype|fastq_r1_in": {"id": "17d0ff2b4219fc86", "src": "hda", "uuid": "c25d6e28-238a-455a-986c-decef4aba9e2"}, "readtype|fastq_r2_in": {"id": "0df92b265f78b27f", "src": "hda", "uuid": "939c4058-2f28-43f9-94f1-694ffc738351"}}, "outputs": {"fastq_out_r1_paired": {"id": "35b41facd137628b", "src": "hda", "uuid": "32d36785-47d3-4068-9978-ea101cfa33e6"}, "fastq_out_r2_paired": {"id": "c0d8e2db7cb2b799", "src": "hda", "uuid": "1fc0bac5-14c4-4159-989b-3cae33b45427"}, "fastq_out_r1_unpaired": {"id": "d5cc31d23110cbd1", "src": "hda", "uuid": "53d3aaa9-11ff-4190-914b-c10a8641365f"}, "fastq_out_r2_unpaired": {"id": "e3b4f2de60ccb646", "src": "hda", "uuid": "55b09c45-b5f9-4e6a-82ba-f3e63a69984d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "trimmomatic/0.38.1-3", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 3, "time_seconds": 29.03378176689148, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "7ff304f2fba73938"}, "readtype|fastq_r2_in": {"src": "hda", "id": "84cd00138f1e5a18"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "8ef43c059b649b43", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:45:51.663375", "create_time": "2024-06-03T18:45:40.559368", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-85jrg", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/5/a/5/dataset_5a5ae066-77ab-400e-bf20-1f2a361fd54d.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/1/5/4/dataset_154dfb9c-7246-4839-9890-a0156021e144.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/9/4/5/dataset_945a2f50-1266-47e6-8ee2-c92d8d95c8d1.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/8/8/7/dataset_887b5537-22a3-46dc-b7c1-e37ddbd4f955.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/d/6/2/dataset_d62706b0-076a-4fb7-ba08-86873903f397.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/0/9/6/dataset_0963ee0b-3e28-478f-8e08-1844f0a4e8d9.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 98, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 99, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"readtype|fastq_r1_in": {"id": "7ff304f2fba73938", "src": "hda", "uuid": "5a5ae066-77ab-400e-bf20-1f2a361fd54d"}, "readtype|fastq_r2_in": {"id": "84cd00138f1e5a18", "src": "hda", "uuid": "154dfb9c-7246-4839-9890-a0156021e144"}}, "outputs": {"fastq_out_r1_paired": {"id": "1c59b169f1a5da20", "src": "hda", "uuid": "945a2f50-1266-47e6-8ee2-c92d8d95c8d1"}, "fastq_out_r2_paired": {"id": "0edbb34fdf3e54be", "src": "hda", "uuid": "d62706b0-076a-4fb7-ba08-86873903f397"}, "fastq_out_r1_unpaired": {"id": "7f32372c601f2957", "src": "hda", "uuid": "887b5537-22a3-46dc-b7c1-e37ddbd4f955"}, "fastq_out_r2_unpaired": {"id": "eeeab585171956fd", "src": "hda", "uuid": "0963ee0b-3e28-478f-8e08-1844f0a4e8d9"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:45:43", "plugin": "core", "name": "end_epoch", "raw_value": "1717440343.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:45:42", "plugin": "core", "name": "start_epoch", "raw_value": "1717440342.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-4", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 4, "time_seconds": 27.22791361808777, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "c26af9e5b4fab11f"}, "readtype|fastq_r2_in": {"src": "hda", "id": "73ba9f0c9d2a0d0b"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "a753e397f1a04881", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:46:19.169444", "create_time": "2024-06-03T18:46:08.662091", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-vktr9", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/4/b/3/dataset_4b32fabb-debc-49e7-b595-c6f9ef1813a0.dat' fastq_r1.'fastqillumina' && ln -s '/galaxy/server/database/objects/3/e/d/dataset_3ed80bb6-2281-40e0-807c-4c5b7d315c33.dat' fastq_r2.'fastqillumina' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqillumina' fastq_r2.'fastqillumina' fastq_out_r1_paired.'fastqillumina' fastq_out_r1_unpaired.'fastqillumina' fastq_out_r2_paired.'fastqillumina' fastq_out_r2_unpaired.'fastqillumina' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqillumina' '/galaxy/server/database/objects/a/0/e/dataset_a0e18fd5-d25d-4d69-b8c5-b97978ce9945.dat' && mv fastq_out_r1_unpaired.'fastqillumina' '/galaxy/server/database/objects/a/f/e/dataset_afe0d77a-112d-428b-a200-eb1ac1819973.dat' && mv fastq_out_r2_paired.'fastqillumina' '/galaxy/server/database/objects/3/6/5/dataset_365d108a-18d0-48a3-969f-3f330686a69d.dat' && mv fastq_out_r2_unpaired.'fastqillumina' '/galaxy/server/database/objects/8/f/6/dataset_8f64c6b1-ab88-4ffc-9648-254bb1a4021a.dat'", "traceback": null, "params": {"__input_ext": "\"fastqillumina\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 104, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 105, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"readtype|fastq_r1_in": {"id": "c26af9e5b4fab11f", "src": "hda", "uuid": "4b32fabb-debc-49e7-b595-c6f9ef1813a0"}, "readtype|fastq_r2_in": {"id": "73ba9f0c9d2a0d0b", "src": "hda", "uuid": "3ed80bb6-2281-40e0-807c-4c5b7d315c33"}}, "outputs": {"fastq_out_r1_paired": {"id": "3036331ed22f3753", "src": "hda", "uuid": "a0e18fd5-d25d-4d69-b8c5-b97978ce9945"}, "fastq_out_r2_paired": {"id": "71f2977d6fac1ddf", "src": "hda", "uuid": "365d108a-18d0-48a3-969f-3f330686a69d"}, "fastq_out_r1_unpaired": {"id": "d204a36dc9e48ece", "src": "hda", "uuid": "afe0d77a-112d-428b-a200-eb1ac1819973"}, "fastq_out_r2_unpaired": {"id": "1eefe31b4c683d50", "src": "hda", "uuid": "8f64c6b1-ab88-4ffc-9648-254bb1a4021a"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:46:10", "plugin": "core", "name": "start_epoch", "raw_value": "1717440370.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:46:10", "plugin": "core", "name": "end_epoch", "raw_value": "1717440370.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-5", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 5, "time_seconds": 27.729119777679443, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "069d16949cd945ea"}, "readtype|fastq_r2_in": {"src": "hda", "id": "88c3f3714eb91992"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "540968fa894d1bcb", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:46:47.041580", "create_time": "2024-06-03T18:46:37.130889", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-62srj", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/d/6/3/dataset_d63ba815-0bee-4a09-b995-30078e1c46a9.dat' fastq_r1.'fastqsolexa' && ln -s '/galaxy/server/database/objects/8/5/0/dataset_8500b842-df43-4801-a653-6e620400e54e.dat' fastq_r2.'fastqsolexa' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsolexa' fastq_r2.'fastqsolexa' fastq_out_r1_paired.'fastqsolexa' fastq_out_r1_unpaired.'fastqsolexa' fastq_out_r2_paired.'fastqsolexa' fastq_out_r2_unpaired.'fastqsolexa' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsolexa' '/galaxy/server/database/objects/5/a/4/dataset_5a495ed5-9e05-4293-a4a5-ad4d89b9801b.dat' && mv fastq_out_r1_unpaired.'fastqsolexa' '/galaxy/server/database/objects/c/6/2/dataset_c62175ef-cd05-4ba1-9b68-2e50adac5f9f.dat' && mv fastq_out_r2_paired.'fastqsolexa' '/galaxy/server/database/objects/b/f/c/dataset_bfc255ca-aa61-440d-8b2c-7b1ed280d4ca.dat' && mv fastq_out_r2_unpaired.'fastqsolexa' '/galaxy/server/database/objects/f/c/9/dataset_fc9b7733-c24a-42b6-99e8-b82a442b8214.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsolexa\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 110, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 111, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"readtype|fastq_r1_in": {"id": "069d16949cd945ea", "src": "hda", "uuid": "d63ba815-0bee-4a09-b995-30078e1c46a9"}, "readtype|fastq_r2_in": {"id": "88c3f3714eb91992", "src": "hda", "uuid": "8500b842-df43-4801-a653-6e620400e54e"}}, "outputs": {"fastq_out_r1_paired": {"id": "d18a384cb31d0f2a", "src": "hda", "uuid": "5a495ed5-9e05-4293-a4a5-ad4d89b9801b"}, "fastq_out_r2_paired": {"id": "f421e68639743d6b", "src": "hda", "uuid": "bfc255ca-aa61-440d-8b2c-7b1ed280d4ca"}, "fastq_out_r1_unpaired": {"id": "1e2cb7108c7ce70f", "src": "hda", "uuid": "c62175ef-cd05-4ba1-9b68-2e50adac5f9f"}, "fastq_out_r2_unpaired": {"id": "75689717c8cc6e31", "src": "hda", "uuid": "fc9b7733-c24a-42b6-99e8-b82a442b8214"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:46:38", "plugin": "core", "name": "start_epoch", "raw_value": "1717440398.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:46:38", "plugin": "core", "name": "end_epoch", "raw_value": "1717440398.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-6", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 6, "time_seconds": 26.87732195854187, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "8c101df7602cf85c"}, "readtype|single_or_paired": "se", "operations_0|operation|crop": "10", "operations_0|operation|name": "CROP"}, "job": {"model_class": "Job", "id": "f076ed8845472596", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:47:15.003259", "create_time": "2024-06-03T18:47:04.060299", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-s6968", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/1/2/2/dataset_12279b4a-a2b1-483f-83ac-0c01a4aba852.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' CROP:10 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/5/5/9/dataset_55910edf-3328-44d4-bf14-2a7fad1482bb.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 4, \"crop\": \"10\", \"name\": \"CROP\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 116, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"readtype|fastq_in": {"id": "8c101df7602cf85c", "src": "hda", "uuid": "12279b4a-a2b1-483f-83ac-0c01a4aba852"}}, "outputs": {"fastq_out": {"id": "5e2b6a41b3701645", "src": "hda", "uuid": "55910edf-3328-44d4-bf14-2a7fad1482bb"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:47:05", "plugin": "core", "name": "start_epoch", "raw_value": "1717440425.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:47:06", "plugin": "core", "name": "end_epoch", "raw_value": "1717440426.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-7", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 7, "time_seconds": 29.63457202911377, "inputs": {"readtype|fastq_pair": {"src": "hdca", "id": "41888dabc5cd3d7e"}, "readtype|single_or_paired": "collection", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "ffd2380eb412d11b", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:47:44.415678", "create_time": "2024-06-03T18:47:32.451233", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-z45mv", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/a/0/f/dataset_a0f93fa8-8209-4b0b-aefd-20bf12f51c18.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/b/8/1/dataset_b819a3ad-7269-4df1-b02c-27b77d010582.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/0/6/9/dataset_069bd7b1-5d96-4897-9a40-bdd3fa7a1caa.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/3/3/5/dataset_335ac61e-a186-4bab-9912-4e6ecd1cc810.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/5/8/9/dataset_58919f78-7bf8-4342-b034-a605c28f9351.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/4/3/6/dataset_436e3e43-6d45-4813-b494-e04efdedc1cc.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 2, \"fastq_pair\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"single_or_paired\": \"collection\"}"}, "inputs": {"readtype|fastq_pair1": {"id": "3f50596b7d30a5fe", "src": "hda", "uuid": "a0f93fa8-8209-4b0b-aefd-20bf12f51c18"}, "readtype|fastq_pair2": {"id": "d0ca885d2974883f", "src": "hda", "uuid": "b819a3ad-7269-4df1-b02c-27b77d010582"}}, "outputs": {"fastq_out_paired|__part__|forward": {"id": "375edd492841b0f0", "src": "hda", "uuid": "069bd7b1-5d96-4897-9a40-bdd3fa7a1caa"}, "fastq_out_paired|__part__|reverse": {"id": "797b63f95a0785a5", "src": "hda", "uuid": "58919f78-7bf8-4342-b034-a605c28f9351"}, "fastq_out_unpaired|__part__|forward": {"id": "61204c8b6c0ec71a", "src": "hda", "uuid": "335ac61e-a186-4bab-9912-4e6ecd1cc810"}, "fastq_out_unpaired|__part__|reverse": {"id": "c0d6ea19b0db9a73", "src": "hda", "uuid": "436e3e43-6d45-4813-b494-e04efdedc1cc"}}, "output_collections": {"fastq_out_unpaired": {"id": "9a9e7f4696e1e38c", "src": "hdca"}, "fastq_out_paired": {"id": "f0ce395369f002f8", "src": "hdca"}}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:47:35", "plugin": "core", "name": "start_epoch", "raw_value": "1717440455.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:47:35", "plugin": "core", "name": "end_epoch", "raw_value": "1717440455.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-8", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 8, "time_seconds": 28.550809860229492, "inputs": {"readtype|fastq_pair": {"src": "hdca", "id": "fc5ad0731ef0adfd"}, "readtype|single_or_paired": "collection", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "7e193c9388f4966c", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T18:48:12.964948", "create_time": "2024-06-03T18:48:01.407444", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-njmgh", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/6/5/6/dataset_6562bc1c-2b6e-4ddb-953b-aa907a6612d9.dat' fastq_r1.'fastqsanger.gz' && ln -s '/galaxy/server/database/objects/e/b/5/dataset_eb526db5-14a6-42ba-8d91-139a5e95723b.dat' fastq_r2.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger.gz' fastq_r2.'fastqsanger.gz' fastq_out_r1_paired.'fastqsanger.gz' fastq_out_r1_unpaired.'fastqsanger.gz' fastq_out_r2_paired.'fastqsanger.gz' fastq_out_r2_unpaired.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger.gz' '/galaxy/server/database/objects/8/f/a/dataset_8fabc5b6-fa9b-452f-b54b-166649a8f58b.dat' && mv fastq_out_r1_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/f/5/a/dataset_f5a87a91-3800-44d8-985b-e6a231e3bcfa.dat' && mv fastq_out_r2_paired.'fastqsanger.gz' '/galaxy/server/database/objects/b/4/e/dataset_b4ebab26-1fc4-410b-87c4-e12080a82a3e.dat' && mv fastq_out_r2_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/c/0/f/dataset_c0fb5655-4a13-4e02-b7a1-94c6a85ea50f.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 2, \"fastq_pair\": {\"values\": [{\"id\": 4, \"src\": \"hdca\"}]}, \"single_or_paired\": \"collection\"}"}, "inputs": {"readtype|fastq_pair1": {"id": "6b1ddaf824fb7c60", "src": "hda", "uuid": "6562bc1c-2b6e-4ddb-953b-aa907a6612d9"}, "readtype|fastq_pair2": {"id": "fbe5822261e917c0", "src": "hda", "uuid": "eb526db5-14a6-42ba-8d91-139a5e95723b"}}, "outputs": {"fastq_out_paired|__part__|forward": {"id": "5cebbdd86442579f", "src": "hda", "uuid": "8fabc5b6-fa9b-452f-b54b-166649a8f58b"}, "fastq_out_paired|__part__|reverse": {"id": "6bc21d734684a92b", "src": "hda", "uuid": "b4ebab26-1fc4-410b-87c4-e12080a82a3e"}, "fastq_out_unpaired|__part__|forward": {"id": "f78fad7e7e462bfd", "src": "hda", "uuid": "f5a87a91-3800-44d8-985b-e6a231e3bcfa"}, "fastq_out_unpaired|__part__|reverse": {"id": "9772863f3d795792", "src": "hda", "uuid": "c0fb5655-4a13-4e02-b7a1-94c6a85ea50f"}}, "output_collections": {"fastq_out_unpaired": {"id": "80ed418d18d71b0b", "src": "hdca"}, "fastq_out_paired": {"id": "00f02934f1b7f55e", "src": "hdca"}}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 18:48:03", "plugin": "core", "name": "start_epoch", "raw_value": "1717440483.0000000"}, {"title": "Job End Time", "value": "2024-06-03 18:48:04", "plugin": "core", "name": "end_epoch", "raw_value": "1717440484.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-9", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 9, "time_seconds": 21.265424489974976, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "a11a207309d76b96"}, "readtype|single_or_paired": "se", "operations_0|operation|avgqual": "30", "operations_0|operation|name": "AVGQUAL"}, "job": {"model_class": "Job", "id": "e5a2ed2cfb8a1300", "state": "error", "exit_code": null, "update_time": "2024-06-03T18:48:34.871194", "create_time": "2024-06-03T18:48:29.781205", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-lpzrp", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/4/1/1/dataset_4111090b-ef84-4517-84e4-c8d8e21da5a0.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' AVGQUAL:30 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/3/1/a/dataset_31a5909f-bb37-4f50-9d38-df3c5ad5e86e.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 6, \"avgqual\": \"30\", \"name\": \"AVGQUAL\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 130, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"readtype|fastq_in": {"id": "a11a207309d76b96", "src": "hda", "uuid": "4111090b-ef84-4517-84e4-c8d8e21da5a0"}}, "outputs": {"fastq_out": {"id": "9fa70fdc33c81738", "src": "hda", "uuid": "31a5909f-bb37-4f50-9d38-df3c5ad5e86e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "vcfcombine/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfcombine", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 34.53105282783508, "inputs": {"input_vcfs": [{"src": "hda", "id": "fc9ce70f42a2ca65"}, {"src": "hda", "id": "fc9ce70f42a2ca65"}]}, "job": {"model_class": "Job", "id": "12bb1f4dc2d627ec", "state": "ok", "exit_code": 0, "update_time": "2024-06-03T19:09:53.521630", "create_time": "2024-06-03T19:09:35.971221", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc3+galaxy0", "history_id": "41888dabc5cd3d7e", "external_id": "gxy-pb2fv", "command_line": "vcfcombine  '/galaxy/server/database/objects/d/b/8/dataset_db8abe6e-d747-422e-b33d-65501230cc9d.dat' '/galaxy/server/database/objects/d/b/8/dataset_db8abe6e-d747-422e-b33d-65501230cc9d.dat'  > '/galaxy/server/database/objects/8/f/9/dataset_8f9ddd4b-4ce4-4613-907d-44b607a17555.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_vcfs": {"id": "fc9ce70f42a2ca65", "src": "hda", "uuid": "db8abe6e-d747-422e-b33d-65501230cc9d"}, "input_vcfs1": {"id": "fc9ce70f42a2ca65", "src": "hda", "uuid": "db8abe6e-d747-422e-b33d-65501230cc9d"}, "input_vcfs2": {"id": "fc9ce70f42a2ca65", "src": "hda", "uuid": "db8abe6e-d747-422e-b33d-65501230cc9d"}}, "outputs": {"out_file1": {"id": "29f30e6216c3fb4f", "src": "hda", "uuid": "8f9ddd4b-4ce4-4613-907d-44b607a17555"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-06-03 19:09:43", "plugin": "core", "name": "end_epoch", "raw_value": "1717441783.0000000"}, {"title": "Job Start Time", "value": "2024-06-03 19:09:43", "plugin": "core", "name": "start_epoch", "raw_value": "1717441783.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}], "galaxy_url": "http://35.237.97.222:8000/galaxy/"}