<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="5"
           failures="25"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="64.17607474327087">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "aa693bb03e71cb54",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpgk8sxy6h\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmpgk8sxy6h\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:00:29.101307",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-j24n9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "5c097547aeda13f2",  "inputs": {   "hd5_format|in|input": {    "id": "aa693bb03e71cb54",    "src": "hda",    "uuid": "bc98aff4-bf64-44f3-b71f-072bbfcc6de8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820451.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:00:51"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820449.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:00:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "4ddae413156e9e8d",    "src": "hda",    "uuid": "f03cd299-f556-48cc-ad3d-164ab1cf326c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/b/c/9/dataset_bc98aff4-bf64-44f3-b71f-072bbfcc6de8.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/b/c/9/dataset_bc98aff4-bf64-44f3-b71f-072bbfcc6de8.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:01:09.208702",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 64.17607474327087, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/b/c/9/dataset_bc98aff4-bf64-44f3-b71f-072bbfcc6de8.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="29.611469745635986">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "32fd77e6cbdacbcd",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmp1knqou5s\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmp1knqou5s\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-28T19:05:19.083976",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4s7mt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "33bd8b1b4e8ea087",  "inputs": {   "hd5_format|in|input": {    "id": "32fd77e6cbdacbcd",    "src": "hda",    "uuid": "303a7ced-4e34-4e17-9327-9828d883072d"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "1c6cca318aa46ddd",    "src": "hda",    "uuid": "c21dbc1b-44c8-4caf-9bc4-9b807dcae442"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/3/0/3/dataset_303a7ced-4e34-4e17-9327-9828d883072d.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/3/0/3/dataset_303a7ced-4e34-4e17-9327-9828d883072d.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:05:26.193210",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n." ], "status": "failure", "test_index": 0, "time_seconds": 29.611469745635986, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/3/0/3/dataset_303a7ced-4e34-4e17-9327-9828d883072d.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="39.33859348297119">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "f7faaddf62b49a98",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmprdwlfb5s\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmprdwlfb5s\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:01:32.043119",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qngx4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "91d7c55b29722297",  "inputs": {   "hd5_format|in|input": {    "id": "f7faaddf62b49a98",    "src": "hda",    "uuid": "b22dae63-ced0-4350-b8ce-eba71473cac0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820495.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:01:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820493.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:01:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "1da0a260befd6e33",    "src": "hda",    "uuid": "8d12f046-2d1e-4521-9642-73a6c1dc1177"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/2/2/dataset_b22dae63-ced0-4350-b8ce-eba71473cac0.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/2/2/dataset_b22dae63-ced0-4350-b8ce-eba71473cac0.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:01:48.646555",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpk8xp6hgqimport.csv.h5ad v. /tmp/tmpn9z_62ucimport.csv.h5ad )\nFiles /tmp/tmpk8xp6hgqimport.csv.h5ad=29512b but /tmp/tmpn9z_62ucimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 39.33859348297119, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/b/2/2/dataset_b22dae63-ced0-4350-b8ce-eba71473cac0.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="39.60330128669739">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "60db788a65f7e697",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmp5jmd4tz9\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmp5jmd4tz9\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:05:49.307745",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-l7drn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "21978cecbb9c0b94",  "inputs": {   "hd5_format|in|input": {    "id": "60db788a65f7e697",    "src": "hda",    "uuid": "62d95055-867f-4213-97d7-36dff5037f1e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820752.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:05:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820750.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:05:50"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "041c99b7a6dce09b",    "src": "hda",    "uuid": "ccb19ee7-9cd2-4476-9cec-29d9acb7d1b9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/2/d/dataset_62d95055-867f-4213-97d7-36dff5037f1e.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/6/2/d/dataset_62d95055-867f-4213-97d7-36dff5037f1e.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:06:06.018626",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpj43yrghaimport.csv.h5ad v. /tmp/tmpyjbzm3w7import.csv.h5ad )\nFiles /tmp/tmpj43yrghaimport.csv.h5ad=29512b but /tmp/tmpyjbzm3w7import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 39.60330128669739, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/6/2/d/dataset_62d95055-867f-4213-97d7-36dff5037f1e.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="40.12423038482666">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "7e3991f1b049445a",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmppf8q6cwa\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmppf8q6cwa\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:02:12.374529",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rnlmw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "d46f4f46af749674",  "inputs": {   "hd5_format|in|input": {    "id": "7e3991f1b049445a",    "src": "hda",    "uuid": "9d5f5f53-452d-4b7f-be5b-8bbb6fa73b62"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820536.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:02:16"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820534.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:02:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "45b54b79e10d40ba",    "src": "hda",    "uuid": "481e952f-3992-4796-ac16-c651314e76bb"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/9/d/5/dataset_9d5f5f53-452d-4b7f-be5b-8bbb6fa73b62.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/9/d/5/dataset_9d5f5f53-452d-4b7f-be5b-8bbb6fa73b62.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:02:28.864281",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 40.12423038482666, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/9/d/5/dataset_9d5f5f53-452d-4b7f-be5b-8bbb6fa73b62.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="41.27038335800171">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "c21d5634fcb39ac5",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/114/configs/tmpxydm7t8g\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/114/configs/tmpxydm7t8g\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:06:29.886681",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ccm8h",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "a450ca48b286f710",  "inputs": {   "hd5_format|in|input": {    "id": "c21d5634fcb39ac5",    "src": "hda",    "uuid": "b655d50f-b39d-4de1-956f-c41329e89947"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820793.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:06:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820791.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:06:31"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "345c4cd362c2c88f",    "src": "hda",    "uuid": "8c890f05-6d0e-4676-bcfd-b5f1d5ef04fa"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/6/5/dataset_b655d50f-b39d-4de1-956f-c41329e89947.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/6/5/dataset_b655d50f-b39d-4de1-956f-c41329e89947.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:06:47.276704",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 41.27038335800171, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/b/6/5/dataset_b655d50f-b39d-4de1-956f-c41329e89947.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="39.9733464717865">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "58a674316337f062",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/100/configs/tmplhg7iy8y\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/100/configs/tmplhg7iy8y\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:02:52.524269",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hkmrg",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "32196eddd311a5d1",  "inputs": {   "hd5_format|in|matrix": {    "id": "58a674316337f062",    "src": "hda",    "uuid": "065dc6f4-bf8b-499b-9ee6-8f09761b7566"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820576.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:02:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820574.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:02:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "b3fc4088f6ace0a8",    "src": "hda",    "uuid": "78f39dde-0cc0-488e-8a4f-b779dd6cdd67"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/6/5/dataset_065dc6f4-bf8b-499b-9ee6-8f09761b7566.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/6/5/dataset_065dc6f4-bf8b-499b-9ee6-8f09761b7566.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:03:09.301484",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 39.9733464717865, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/0/6/5/dataset_065dc6f4-bf8b-499b-9ee6-8f09761b7566.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="29.74695348739624">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "7425a460de229f68",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/116/configs/tmpayiulxvu\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/116/configs/tmpayiulxvu\u0027    \u0026\u0026 rm -rf mtx",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-28T19:07:10.906274",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-nvkxd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "c2de61364a9bd758",  "inputs": {   "hd5_format|in|matrix": {    "id": "7425a460de229f68",    "src": "hda",    "uuid": "01af73a6-c68e-45e3-9e35-9b8e3d323cd2"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a35e18d51c01e599",    "src": "hda",    "uuid": "0ac95040-c3e5-433a-b18b-86c0ad2b8467"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 163, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/a/dataset_01af73a6-c68e-45e3-9e35-9b8e3d323cd2.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/0/1/a/dataset_01af73a6-c68e-45e3-9e35-9b8e3d323cd2.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:07:17.341063",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 29.74695348739624, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/0/1/a/dataset_01af73a6-c68e-45e3-9e35-9b8e3d323cd2.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="40.48810291290283">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "2e6e60b449ac3cb2",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/f/1/3/dataset_f13969ae-a514-4b49-82ab-916eea038868.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/102/configs/tmpues_t60d\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/102/configs/tmpues_t60d\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:03:33.069770",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fqdnw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "df298cf1357b3e29",  "inputs": {   "hd5_format|in|input": {    "id": "2e6e60b449ac3cb2",    "src": "hda",    "uuid": "f13969ae-a514-4b49-82ab-916eea038868"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820616.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:03:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820614.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:03:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "c137ea89263d46ae",    "src": "hda",    "uuid": "c9380332-6ff5-4692-9f0c-a8fde654c9c0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-28T19:03:49.738660",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 40.48810291290283, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="12.98399543762207">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.98399543762207, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="52.223031759262085">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "af801c14ad2bfbdd",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "f677579e4293dede",   "src": "hda"  },  "hd5_format|other_files": {   "id": "8cb88b8512aea52d",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "bdc64b917970fe2f",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/3/3/4/dataset_33455a82-7c06-428c-9df8-76bedcd7d400.dat\u0027 -r \u0027/galaxy/server/database/objects/8/2/4/dataset_8241a0ab-6836-436b-bd4a-e3eadd9a12de.dat\u0027 -f \u0027/galaxy/server/database/objects/4/b/1/dataset_4b1e8435-f235-41ab-9237-ad91a5ecd02b.dat\u0027 \u0027/galaxy/server/database/objects/f/f/f/dataset_fff44f7f-50d0-4135-bd9a-1e18441813b6.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:04:24.604356",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-26rqn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "8b1f4cf8c59841ec",  "inputs": {   "hd5_format|coldata": {    "id": "af801c14ad2bfbdd",    "src": "hda",    "uuid": "33455a82-7c06-428c-9df8-76bedcd7d400"   },   "hd5_format|mainmatrix": {    "id": "f677579e4293dede",    "src": "hda",    "uuid": "4b1e8435-f235-41ab-9237-ad91a5ecd02b"   },   "hd5_format|other_files": {    "id": "8cb88b8512aea52d",    "src": "hda",    "uuid": "fff44f7f-50d0-4135-bd9a-1e18441813b6"   },   "hd5_format|other_files1": {    "id": "8cb88b8512aea52d",    "src": "hda",    "uuid": "fff44f7f-50d0-4135-bd9a-1e18441813b6"   },   "hd5_format|rowdata": {    "id": "bdc64b917970fe2f",    "src": "hda",    "uuid": "8241a0ab-6836-436b-bd4a-e3eadd9a12de"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820668.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:04:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820666.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:04:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "fb3df2761ff014ac",    "src": "hda",    "uuid": "0c568376-534a-48b3-8fb0-c984dac97f3b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 153, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-28T19:04:41.955653",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmp1uqliu6dconverted.loom.test v. /tmp/tmp91_c9x9qconverted.loom.test )\nFiles /tmp/tmp1uqliu6dconverted.loom.test=41883b but /tmp/tmp91_c9x9qconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 52.223031759262085, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="51.670997619628906">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "3073e8f5ad0ea843",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "3439846a721a33bc",   "src": "hda"  },  "hd5_format|other_files": {   "id": "e01c6edaa6f5b3ca",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "fe12cd966f961c0d",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/a/1/b/dataset_a1bdef91-4edd-433c-8be0-dad661ca2fbe.dat\u0027 -r \u0027/galaxy/server/database/objects/7/c/d/dataset_7cd6d66f-d3fb-4cd1-8d06-23654311306d.dat\u0027 -f \u0027/galaxy/server/database/objects/2/9/6/dataset_2961f4e5-b7ca-4550-9d82-84d6da9f6971.dat\u0027 \u0027/galaxy/server/database/objects/a/d/a/dataset_adab4872-5c0f-4d1c-8f28-2503786907b8.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:08:04.699409",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pq5mf",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "71dc71f1d31122b1",  "inputs": {   "hd5_format|coldata": {    "id": "3073e8f5ad0ea843",    "src": "hda",    "uuid": "a1bdef91-4edd-433c-8be0-dad661ca2fbe"   },   "hd5_format|mainmatrix": {    "id": "3439846a721a33bc",    "src": "hda",    "uuid": "2961f4e5-b7ca-4550-9d82-84d6da9f6971"   },   "hd5_format|other_files": {    "id": "e01c6edaa6f5b3ca",    "src": "hda",    "uuid": "adab4872-5c0f-4d1c-8f28-2503786907b8"   },   "hd5_format|other_files1": {    "id": "e01c6edaa6f5b3ca",    "src": "hda",    "uuid": "adab4872-5c0f-4d1c-8f28-2503786907b8"   },   "hd5_format|rowdata": {    "id": "fe12cd966f961c0d",    "src": "hda",    "uuid": "7cd6d66f-d3fb-4cd1-8d06-23654311306d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732820888.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:08:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732820886.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:08:06"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "6fddac015f1119a9",    "src": "hda",    "uuid": "f2325c55-18f9-4999-a6d1-3a6cff6f05d2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 168, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 166, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 167, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 169, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-28T19:08:22.080346",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmp54x1iavuconverted.loom.test v. /tmp/tmp8_gfutylconverted.loom.test )\nFiles /tmp/tmp54x1iavuconverted.loom.test=41883b but /tmp/tmp8_gfutylconverted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 51.670997619628906, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="13.210028171539307">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 13.210028171539307, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="43.569058656692505">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/b/a/4/dataset_ba4d626d-4953-4a29-99ca-d5af5dda8038.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="51.64346981048584">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="75.20407509803772">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="65.81837153434753">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/2/d/e/dataset_2dec0270-3adf-468c-9fe4-30f05b6f70dc.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="40.41557574272156">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="38.23875021934509">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="46.66975975036621">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="38.04354667663574">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="92.79497909545898">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="41.4349102973938">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "8595e70de559b06f",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/e/a/c/dataset_eac4b18d-3f65-49b8-9008-041b2aa5bb55.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/8/b/a/dataset_8bab4d86-3f1f-4e63-9d03-01992640651f.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2024-11-28T18:37:33.381827",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ql8jt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "8595e70de559b06f",  "inputs": {   "corData": {    "id": "8595e70de559b06f",    "src": "hda",    "uuid": "eac4b18d-3f65-49b8-9008-041b2aa5bb55"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732819058.0000000",    "title": "Job End Time",    "value": "2024-11-28 18:37:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732819054.0000000",    "title": "Job Start Time",    "value": "2024-11-28 18:37:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "932194472668dd96",    "src": "hda",    "uuid": "8bab4d86-3f1f-4e63-9d03-01992640651f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-28T18:37:51.708836",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpst66pxk7plotCorrelation_result2.png v. /tmp/tmpgjmfijvkplotCorrelation_result2.png )\nFiles /tmp/tmpst66pxk7plotCorrelation_result2.png=11943b but /tmp/tmpgjmfijvkplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 41.4349102973938, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="44.62740516662598">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="47.06140756607056">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="42.71239519119263">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/f/c/b/dataset_fcb8b088-11d5-456d-9c1e-f5042a283b3a.dat[FLASH]     /galaxy/server/database/objects/e/4/b/dataset_e4bd8045-cb6c-4938-96a0-a6b0c1bc37e4.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.022 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="43.291693449020386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="42.49340891838074">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/0/8/f/dataset_08fa6349-0754-434e-b598-c08aebfb405e.dat[FLASH]     /galaxy/server/database/objects/1/5/a/dataset_15a83a75-c342-4a43-89a2-e2742b4d6663.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.044 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="53.983641386032104">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "653cee01cbfaa930",   "src": "hda"  },  "reference_source|ref": {   "id": "3be1423dbb22dea8",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/b/f/dataset_7bf6a501-34dd-42bd-a59c-d6278d1eb317.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/5/e/d/dataset_5ed78aef-cc10-4eef-ba04-9662e783592d.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/a/f/e/metadata_afe45215-49d2-4baf-a3d8-d1f1286c5663.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:23:07.873342",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-nbbpn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "60db788a65f7e697",  "inputs": {   "reads": {    "id": "653cee01cbfaa930",    "src": "hda",    "uuid": "5ed78aef-cc10-4eef-ba04-9662e783592d"   },   "reference_source|ref": {    "id": "3be1423dbb22dea8",    "src": "hda",    "uuid": "7bf6a501-34dd-42bd-a59c-d6278d1eb317"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821801.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:23:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821797.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:23:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "b6ac64d339cd6ba0",    "src": "hda",    "uuid": "593955ef-665a-482d-ae1c-8b18ddc35b6c"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-28 19:23:17,606]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:23:17,735]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:23:21,728]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-28 19:23:17,606]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:23:17,735]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:23:21,728]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-28T19:23:36.527090",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp5kdas1o1call-out1.vcf v. /tmp/tmpabs_l7yccall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241128\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/concat.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/0.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/1.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/2.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/3.vcf.gz /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/4.vcf.gz; Date=Thu Nov 28 19:23:21 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 53.983641386032104, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-28 19:23:17,606]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-28 19:23:17,735]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-28 19:23:21,728]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/159/tmp/lofreq2_call_paralleltqxv8fe9/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="44.22741770744324">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "6f268f3180d7058b",   "src": "hda"  },  "reference_source|ref": {   "id": "d1809d897f223699",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/6/c/dataset_26c8b3ec-23f8-4b1f-84bd-b10bbc2a8ec0.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/7/7/1/dataset_771b7901-a9ac-4688-a1d0-3e4c2dbddc12.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/9/5/a/metadata_95a16f47-bf64-49b5-9f4b-ce1b622f800d.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:24:02.273616",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9qd6x",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "345c4cd362c2c88f",  "inputs": {   "reads": {    "id": "6f268f3180d7058b",    "src": "hda",    "uuid": "771b7901-a9ac-4688-a1d0-3e4c2dbddc12"   },   "reference_source|ref": {    "id": "d1809d897f223699",    "src": "hda",    "uuid": "26c8b3ec-23f8-4b1f-84bd-b10bbc2a8ec0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821848.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:24:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821844.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:24:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "08bcad7986af2630",    "src": "hda",    "uuid": "af20cafd-a913-48c2-ad55-8c389c8ec4ba"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-28 19:24:04,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:24:04,523]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:24:08,429]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-28 19:24:04,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:24:04,523]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:24:08,429]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-28T19:24:20.984918",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmplttjy_fbcall-out1.vcf v. /tmp/tmpcez6or86call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241128\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/concat.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/0.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/1.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/2.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/3.vcf.gz /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/4.vcf.gz; Date=Thu Nov 28 19:24:08 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 44.22741770744324, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-28 19:24:04,431]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-28 19:24:04,523]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-28 19:24:08,429]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/162/tmp/lofreq2_call_parallel7p3me_qg/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="49.10166001319885">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "0170b9fef86e5c16",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "cab2b1e2bde962e8",   "src": "hda"  },  "reference_source|ref": {   "id": "64db8b3a34d6ccc1",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/8/1/dataset_78167479-b4c9-4d1c-b678-9391e365461a.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/4/1/9/dataset_419bc141-feda-4e06-b3d3-17abeb4739eb.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/5/6/2/metadata_5628788f-1b76-4989-ae95-b7af2e288660.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/3/8/dataset_238b859f-1361-43b3-aa10-c62726f7db4c.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:24:51.066790",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-grd57",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "3439846a721a33bc",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "0170b9fef86e5c16",    "src": "hda",    "uuid": "238b859f-1361-43b3-aa10-c62726f7db4c"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "0170b9fef86e5c16",    "src": "hda",    "uuid": "238b859f-1361-43b3-aa10-c62726f7db4c"   },   "reads": {    "id": "cab2b1e2bde962e8",    "src": "hda",    "uuid": "419bc141-feda-4e06-b3d3-17abeb4739eb"   },   "reference_source|ref": {    "id": "64db8b3a34d6ccc1",    "src": "hda",    "uuid": "78167479-b4c9-4d1c-b678-9391e365461a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821897.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:24:57"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821892.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:24:52"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "fcfa7630555b02ef",    "src": "hda",    "uuid": "50e07c53-1ab3-4782-9353-c95752693189"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 233, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 232, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-28 19:24:52,784]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:24:52,825]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:24:57,229]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-28 19:24:52,784]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-28 19:24:52,825]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:24:57,229]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-28T19:25:09.955188",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmppdmrz6lccall-out1.vcf v. /tmp/tmptgh0kasucall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241128\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/concat.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/0.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/1.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/2.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/3.vcf.gz /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/4.vcf.gz; Date=Thu Nov 28 19:24:57 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 49.10166001319885, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-28 19:24:52,784]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-28 19:24:52,825]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-28 19:24:57,229]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/166/tmp/lofreq2_call_parallel2rkljqcc/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="44.11814546585083">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "8b11e6cba190516e",   "src": "hda"  },  "reference_source|ref": {   "id": "492486b67e43de65",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/f/6/4/dataset_f643cc1d-e6ac-4e5a-b319-66e18f48b2fc.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/4/5/dataset_c4580ffe-dd01-4727-a57b-71b066146f66.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/8/1/a/metadata_81acf1f3-8e59-4cd2-81c2-287a4a2a2f63.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:25:36.144859",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-phqrj",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "fe12cd966f961c0d",  "inputs": {   "reads": {    "id": "8b11e6cba190516e",    "src": "hda",    "uuid": "c4580ffe-dd01-4727-a57b-71b066146f66"   },   "reference_source|ref": {    "id": "492486b67e43de65",    "src": "hda",    "uuid": "f643cc1d-e6ac-4e5a-b319-66e18f48b2fc"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821941.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:25:41"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821937.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:25:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "1286628ae9e447cb",    "src": "hda",    "uuid": "7e15226d-fa8d-4eaf-90db-6c0c1c698db3"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 236, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-28 19:25:37,917]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-28 19:25:38,038]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:25:41,160]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-28 19:25:37,917]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-28 19:25:38,038]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-28 19:25:41,160]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-11-28T19:25:54.527730",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpurkyi53hcall-out2.vcf v. /tmp/tmphb5u98uicall-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241128\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/concat.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/0.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/1.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/2.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/3.vcf.gz /galaxy/server/database/jobs_directory/000/169/tmp/lofreq2_call_parallel828vtywt/4.vcf.gz; Date=Thu Nov 28 19:25:41 2024\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 44.11814546585083, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-28 19:25:37,917]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-11-28 19:25:38,038]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-28 19:25:41,160]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="44.76176381111145">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "587cd5a1cafc2c9a",   "src": "hda"  },  "reference_source|ref": {   "id": "60fb7844dd02d764",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/c/e/6/dataset_ce6ffe07-e723-4683-8756-a0d2ff4d9204.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/f/5/dataset_cf5a95cc-501a-4262-b61e-0dc4295ad0c3.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/8/f/d/metadata_8fd44f59-e2da-4c1d-9b90-c67e9ef7ec1b.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:26:20.073837",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7fksv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "e220ebbff1fbc9f4",  "inputs": {   "reads": {    "id": "587cd5a1cafc2c9a",    "src": "hda",    "uuid": "cf5a95cc-501a-4262-b61e-0dc4295ad0c3"   },   "reference_source|ref": {    "id": "60fb7844dd02d764",    "src": "hda",    "uuid": "ce6ffe07-e723-4683-8756-a0d2ff4d9204"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821986.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:26:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821981.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:26:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "443fc44e8c50b3c4",    "src": "hda",    "uuid": "c838beef-2a7b-436b-aec3-eb7e03a88285"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 239, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-28 19:26:22,237]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-28 19:26:22,336]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-11-28 19:26:26,874]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-28 19:26:22,237]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-28 19:26:22,336]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-11-28 19:26:26,874]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-11-28T19:26:39.245090",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpybedmoycindel-call-out.vcf v. /tmp/tmpp5qzg367indel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241128\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/concat.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/0.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/1.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/2.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/3.vcf.gz /galaxy/server/database/jobs_directory/000/172/tmp/lofreq2_call_parallel9x19yqcd/4.vcf.gz; Date=Thu Nov 28 19:26:26 2024\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 44.76176381111145, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-28 19:26:22,237]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-11-28 19:26:22,336]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2024-11-28 19:26:26,874]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="106.18806481361389">
        
            
            <system-out><![CDATA[
            [18:45:27 - DataStre] Loaded sample register.[18:45:27 - DataStre] Loaded sample register.[18:45:27 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:45:27 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:45:27 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:45:27 - Variants] Processing NC_045512.2:0-.[18:45:27 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:45:30 - Annotate] Getting chrom coordinates[18:45:30 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:45:30 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="52.88146376609802">
        
            
            <system-out><![CDATA[
            [18:46:27 - DataStre] Loaded sample register.[18:46:27 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:46:27 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:46:27 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:46:30 - Annotate] Getting chrom coordinates[18:46:30 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:46:30 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="42.774478912353516">
        
            
            <system-out><![CDATA[
            [18:47:14 - DataStre] Loaded sample register.[18:47:14 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:47:14 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:47:14 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="66.56463170051575">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="65.74722003936768">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="43.76159715652466">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="43.032384395599365">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="44.92096996307373">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="46.48521900177002">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="46.7310516834259">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="47.23299837112427">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="46.46907615661621">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="56.130441188812256">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="55.457069635391235">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="59.21051788330078">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00096346sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.7774e-05sWriting sequence data to file . . . doneElapsed time: 6.9177e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000116249sdoneElapsed time: 0.00373454sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00155827sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-28 18:49:19.619] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-28 18:49:19.711] [jointLog] [info] Loading Quasi index[2024-11-28 18:49:19.715] [jointLog] [info] done[2024-11-28 18:49:19.713] [stderrLog] [info] Loading Suffix Array [2024-11-28 18:49:19.713] [stderrLog] [info] Loading Position Hash[2024-11-28 18:49:19.713] [stderrLog] [info] Loading Transcript Info [2024-11-28 18:49:19.714] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-28 18:49:19.714] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-28 18:49:19.715] [stderrLog] [info] Computing transcript lengths[2024-11-28 18:49:19.715] [stderrLog] [info] Waiting to finish loading hash[2024-11-28 18:49:19.715] [stderrLog] [info] Done loading index[2024-11-28 18:49:19.737] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-28 18:49:19.737] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-28 18:49:19.738] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-11-28 18:49:19.749] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-28 18:49:19.749] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-28 18:49:19.750] [jointLog] [info] Starting optimizer:[2024-11-28 18:49:19.750] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-28 18:49:19.750] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-28 18:49:19.750] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-11-28 18:49:19.750] [jointLog] [info] Finished optimizer[2024-11-28 18:49:19.750] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="47.49830102920532">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00109361sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 6.3681e-05sWriting sequence data to file . . . doneElapsed time: 8.7983e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000116505sdoneElapsed time: 0.00342586sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00167093sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-28 18:50:09.072] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-28 18:50:09.164] [stderrLog] [info] Loading Suffix Array [2024-11-28 18:50:09.164] [stderrLog] [info] Loading Position Hash[2024-11-28 18:50:09.165] [stderrLog] [info] Loading Transcript Info [2024-11-28 18:50:09.165] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-28 18:50:09.165] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-28 18:50:09.166] [stderrLog] [info] Computing transcript lengths[2024-11-28 18:50:09.166] [stderrLog] [info] Waiting to finish loading hash[2024-11-28 18:50:09.166] [stderrLog] [info] Done loading index[2024-11-28 18:50:09.163] [jointLog] [info] Loading Quasi index[2024-11-28 18:50:09.166] [jointLog] [info] done[2024-11-28 18:50:09.187] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-28 18:50:09.187] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-28 18:50:09.188] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-11-28 18:50:09.199] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-28 18:50:09.199] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-28 18:50:09.199] [jointLog] [info] Starting optimizer:[2024-11-28 18:50:09.199] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-28 18:50:09.199] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-28 18:50:09.200] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-11-28 18:50:09.200] [jointLog] [info] Finished optimizer[2024-11-28 18:50:09.200] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="48.03788661956787">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.000977213sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.5373e-05sWriting sequence data to file . . . doneElapsed time: 7.4161e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000125012sdoneElapsed time: 0.00334967sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00155139sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-28 18:50:56.860] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-28 18:50:56.951] [jointLog] [info] Loading Quasi index[2024-11-28 18:50:56.954] [jointLog] [info] done[2024-11-28 18:50:56.952] [stderrLog] [info] Loading Suffix Array [2024-11-28 18:50:56.952] [stderrLog] [info] Loading Position Hash[2024-11-28 18:50:56.952] [stderrLog] [info] Loading Transcript Info [2024-11-28 18:50:56.953] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-28 18:50:56.953] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-28 18:50:56.953] [stderrLog] [info] Computing transcript lengths[2024-11-28 18:50:56.953] [stderrLog] [info] Waiting to finish loading hash[2024-11-28 18:50:56.954] [stderrLog] [info] Done loading index[2024-11-28 18:50:56.982] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-28 18:50:56.982] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-28 18:50:56.983] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-11-28 18:50:56.994] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-28 18:50:56.994] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-28 18:50:56.994] [jointLog] [info] Starting optimizer:[2024-11-28 18:50:56.995] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-28 18:50:56.995] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-28 18:50:56.995] [jointLog] [info] iteration 50, recomputing effective lengths[2024-11-28 18:50:56.997] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-11-28 18:50:56.997] [jointLog] [info] Finished optimizer[2024-11-28 18:50:56.997] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="52.48067760467529">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00112688sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.3112e-05sWriting sequence data to file . . . doneElapsed time: 6.8773e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000102494sdoneElapsed time: 0.00343594sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00166883sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-28 18:51:49.787] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-28 18:51:49.881] [jointLog] [info] Loading Quasi index[2024-11-28 18:51:49.885] [jointLog] [info] done[2024-11-28 18:51:49.882] [stderrLog] [info] Loading Suffix Array [2024-11-28 18:51:49.883] [stderrLog] [info] Loading Position Hash[2024-11-28 18:51:49.883] [stderrLog] [info] Loading Transcript Info [2024-11-28 18:51:49.884] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-28 18:51:49.884] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-28 18:51:49.884] [stderrLog] [info] Computing transcript lengths[2024-11-28 18:51:49.884] [stderrLog] [info] Waiting to finish loading hash[2024-11-28 18:51:49.885] [stderrLog] [info] Done loading index[2024-11-28 18:51:49.914] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-28 18:51:49.914] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-28 18:51:49.915] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-11-28 18:51:49.926] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-28 18:51:49.926] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-28 18:51:49.926] [jointLog] [info] Starting optimizer:[2024-11-28 18:51:49.926] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-28 18:51:49.926] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-28 18:51:49.927] [jointLog] [info] iteration 50, recomputing effective lengths[2024-11-28 18:51:49.929] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-11-28 18:51:49.929] [jointLog] [info] Finished optimizer[2024-11-28 18:51:49.929] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="44.75641965866089">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "bcc3084c74a85070",   "src": "hda"  },  "advanced_options|advanced_options_selector": "advanced",  "advanced_options|limit_by_region|limit_by_regions": "limit",  "advanced_options|limit_by_region|region_paste": "17:100-150",  "input": [   {    "id": "71dc71f1d31122b1",    "src": "hda"   },   {    "id": "6dd62d82ae5b71d3",    "src": "hda"   },   {    "id": "7ef5e81cab43d14e",    "src": "hda"   }  ] }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/0/0/dataset_300d09a6-bdc8-4f6c-8ddc-e7f806890b20.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/c/b/2/metadata_cb2fba5e-2fd3-4548-ad46-0407914edf40.dat\u0027 \u00270.bai\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/0/6/dataset_e069452c-c3cb-47c6-bee7-5957ccd00417.dat\u0027 \u00271\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/6/2/b/metadata_62ba650d-dbb8-4320-b0f1-b919b54d0889.dat\u0027 \u00271.bai\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/e/a/dataset_8ea276e0-ad03-4d05-89fe-0bf6a4ca8aa4.dat\u0027 \u00272\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/9/4/8/metadata_9484c56c-d02d-473f-9721-0e290d092fd9.dat\u0027 \u00272.bai\u0027 \u0026\u0026      reffa=\"reference.fa\" \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/9/a/a/dataset_9aae0bd9-a0b3-4823-a14b-bd0e6907388c.dat\u0027 $reffa \u0026\u0026 samtools faidx $reffa \u0026\u0026 reffai=$reffa.fai \u0026\u0026   samtools mpileup -f \"$reffa\" \u00270\u0027 \u00271\u0027 \u00272\u0027  -r \u002717:100-150\u0027     -C 0 -d 8000  -q 0 -Q 13  --output \u0027/galaxy/server/database/objects/5/5/2/dataset_552e1a09-ca13-45b0-aea6-08a77b3cd3cc.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-28T18:57:02.168530",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8sjfc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "fccc5ecc221b9b2b",  "inputs": {   "addref_cond|ref": {    "id": "bcc3084c74a85070",    "src": "hda",    "uuid": "9aae0bd9-a0b3-4823-a14b-bd0e6907388c"   },   "input": {    "id": "71dc71f1d31122b1",    "src": "hda",    "uuid": "300d09a6-bdc8-4f6c-8ddc-e7f806890b20"   },   "input1": {    "id": "71dc71f1d31122b1",    "src": "hda",    "uuid": "300d09a6-bdc8-4f6c-8ddc-e7f806890b20"   },   "input2": {    "id": "6dd62d82ae5b71d3",    "src": "hda",    "uuid": "e069452c-c3cb-47c6-bee7-5957ccd00417"   },   "input3": {    "id": "7ef5e81cab43d14e",    "src": "hda",    "uuid": "8ea276e0-ad03-4d05-89fe-0bf6a4ca8aa4"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file_pu": {    "id": "837e4a857ecd8e21",    "src": "hda",    "uuid": "552e1a09-ca13-45b0-aea6-08a77b3cd3cc"   }  },  "params": {   "__input_ext": "\"input\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}}",   "advanced_options": "{\"__current_case__\": 1, \"advanced_options_selector\": \"advanced\", \"coefficient_for_downgrading\": \"0\", \"disable_probabilistic_realignment\": false, \"exclude_read_group\": {\"__current_case__\": 2, \"exclude_read_groups\": \"no_limit\"}, \"extended_BAQ_computation\": false, \"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"limit_by_region\": {\"__current_case__\": 0, \"bed_regions\": null, \"limit_by_regions\": \"limit\", \"region_paste\": \"17:100-150\"}, \"max_reads_per_bam\": \"8000\", \"minimum_base_quality\": \"13\", \"minimum_mapping_quality\": \"0\", \"qualities_illumina_onethree\": false, \"skip_anomalous_read_pairs\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_options_cond": "{\"__current_case__\": 0, \"output_options_selector\": \"default\"}"  },  "state": "error",  "stderr": "[mpileup] 3 samples in 3 input files\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7",  "tool_stderr": "[mpileup] 3 samples in 3 input files\n",  "tool_stdout": "",  "update_time": "2024-11-28T18:57:11.031838",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7, exit_code: None, stderr: [mpileup] 3 samples in 3 input files\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_mpileup/samtools_mpileup/2.1.7, exit_code: None, stderr: [mpileup] 3 samples in 3 input files\n." ], "status": "failure", "test_index": 0, "time_seconds": 44.75641965866089, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="40.41214156150818">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="39.77284383773804">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="39.86693620681763">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="12.511250257492065">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.511250257492065, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="39.81594944000244">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="46.18331503868103">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="41.88930583000183">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="41.325592279434204">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="44.53102517127991">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="41.328609466552734">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="43.03508949279785">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="86.22394514083862">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "c5be8febdd1ef867",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/8/4/5/dataset_84585a09-0dbd-461c-8aaf-2fb5262a84b8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmp_bzhtbjx\u0027 \u003e \u0027/galaxy/server/database/objects/a/d/c/dataset_adcb4479-3bd8-422f-93bf-5826cc739c62.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmp_bzhtbjx\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/a/d/c/dataset_adcb4479-3bd8-422f-93bf-5826cc739c62.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/a/d/c/dataset_adcb4479-3bd8-422f-93bf-5826cc739c62.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:17:49.346661",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fz2f4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "45b54b79e10d40ba",  "inputs": {   "adata": {    "id": "c5be8febdd1ef867",    "src": "hda",    "uuid": "84585a09-0dbd-461c-8aaf-2fb5262a84b8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821509.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:18:29"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821503.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:18:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "88d91d0be4547be3",    "src": "hda",    "uuid": "043eeef6-35cd-40d3-800a-885c7893a0b0"   },   "hidden_output": {    "id": "810a724e52d5afc9",    "src": "hda",    "uuid": "adcb4479-3bd8-422f-93bf-5826cc739c62"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-11-28T19:18:51.848323",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 86.22394514083862, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="45.10535502433777">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "f25ec32d79d2d1b7",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/0/1/dataset_90180f94-e3c4-4616-8e2d-78814428c429.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmp7o7ds67l\u0027 \u003e \u0027/galaxy/server/database/objects/7/3/8/dataset_7380e0ed-11f1-48c0-966e-317528365674.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmp7o7ds67l\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/3/8/dataset_7380e0ed-11f1-48c0-966e-317528365674.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/7/3/8/dataset_7380e0ed-11f1-48c0-966e-317528365674.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:19:16.390163",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-g2p7f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "b3fc4088f6ace0a8",  "inputs": {   "adata": {    "id": "f25ec32d79d2d1b7",    "src": "hda",    "uuid": "90180f94-e3c4-4616-8e2d-78814428c429"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821563.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:19:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821557.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:19:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "addb505bdcb21ec9",    "src": "hda",    "uuid": "cd09a65d-f927-41f6-bcb9-8fecc51dff9b"   },   "hidden_output": {    "id": "f899e189d5e71fd3",    "src": "hda",    "uuid": "7380e0ed-11f1-48c0-966e-317528365674"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2024-11-28T19:19:36.163458",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmp1cro2i23pp.recipe_zheng17.random-randint.h5ad v. /tmp/tmpnekf0c23pp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmp1cro2i23pp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmpnekf0c23pp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 45.10535502433777, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="45.36394715309143">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "af759acd74690ffc",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/5/f/8/dataset_5f898fef-8726-4013-a62c-0471445211dd.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmp8ldj81h9\u0027 \u003e \u0027/galaxy/server/database/objects/d/3/3/dataset_d33e4d68-ce7e-472d-82a7-dfb723032fef.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmp8ldj81h9\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/d/3/3/dataset_d33e4d68-ce7e-472d-82a7-dfb723032fef.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/d/3/3/dataset_d33e4d68-ce7e-472d-82a7-dfb723032fef.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:20:01.661172",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dhnl4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "c137ea89263d46ae",  "inputs": {   "adata": {    "id": "af759acd74690ffc",    "src": "hda",    "uuid": "5f898fef-8726-4013-a62c-0471445211dd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821609.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:20:09"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821603.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:20:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "02436299e4c9ed76",    "src": "hda",    "uuid": "aab18fcb-8df3-42b2-8f0b-f05c010f6cf1"   },   "hidden_output": {    "id": "2f780749959e3bf6",    "src": "hda",    "uuid": "d33e4d68-ce7e-472d-82a7-dfb723032fef"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2024-11-28T19:20:22.534687",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 45.36394715309143, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="44.5281662940979">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "75db349a7b263836",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/5/d/dataset_c5dd92c1-f3ae-45a6-8365-73828fc12f77.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmp3pqfvg4w\u0027 \u003e \u0027/galaxy/server/database/objects/8/f/f/dataset_8ff07d64-f2f3-400d-a365-0da6abc44cf2.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmp3pqfvg4w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/8/f/f/dataset_8ff07d64-f2f3-400d-a365-0da6abc44cf2.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/8/f/f/dataset_8ff07d64-f2f3-400d-a365-0da6abc44cf2.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:20:47.256716",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-sjwbz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "8cb88b8512aea52d",  "inputs": {   "adata": {    "id": "75db349a7b263836",    "src": "hda",    "uuid": "c5dd92c1-f3ae-45a6-8365-73828fc12f77"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821654.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:20:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821648.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:20:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "3ffb79fcbfa0a43b",    "src": "hda",    "uuid": "359e4cf3-3c0e-4976-9a9b-8b41b9fb87ba"   },   "hidden_output": {    "id": "2feec5251ec9a67a",    "src": "hda",    "uuid": "8ff07d64-f2f3-400d-a365-0da6abc44cf2"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2024-11-28T19:21:07.106259",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 44.5281662940979, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="44.282763957977295">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "673f8608f120909b",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/b/6/5/dataset_b656da4f-fe0c-4a58-a372-7c05704cbef3.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpaa8uqz7n\u0027 \u003e \u0027/galaxy/server/database/objects/d/8/9/dataset_d892da97-7f36-4821-b8c4-8c84f574f652.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpaa8uqz7n\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/d/8/9/dataset_d892da97-7f36-4821-b8c4-8c84f574f652.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/d/8/9/dataset_d892da97-7f36-4821-b8c4-8c84f574f652.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:21:31.563328",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lq57f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "bdc64b917970fe2f",  "inputs": {   "adata": {    "id": "673f8608f120909b",    "src": "hda",    "uuid": "b656da4f-fe0c-4a58-a372-7c05704cbef3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821698.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:21:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821693.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:21:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "5dc95909b293b5ea",    "src": "hda",    "uuid": "12fbb30c-f059-4da9-97ed-1f84abfba905"   },   "hidden_output": {    "id": "76bb4a6fe35756b7",    "src": "hda",    "uuid": "d892da97-7f36-4821-b8c4-8c84f574f652"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-11-28T19:21:51.527811",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 44.282763957977295, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="45.497629165649414">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "cc6b23d05b4a0e00",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/b/c/dataset_ebc69fe5-8755-4980-b49f-0e823ffef651.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpg5l_9q2g\u0027 \u003e \u0027/galaxy/server/database/objects/c/d/4/dataset_cd472b60-1cbc-43bf-a2be-46af6056cd81.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/156/configs/tmpg5l_9q2g\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/d/4/dataset_cd472b60-1cbc-43bf-a2be-46af6056cd81.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/d/4/dataset_cd472b60-1cbc-43bf-a2be-46af6056cd81.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-28T19:22:16.010191",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-c5q2s",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "7a4a914df3de495c",  "inputs": {   "adata": {    "id": "cc6b23d05b4a0e00",    "src": "hda",    "uuid": "ebc69fe5-8755-4980-b49f-0e823ffef651"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732821743.0000000",    "title": "Job End Time",    "value": "2024-11-28 19:22:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732821738.0000000",    "title": "Job Start Time",    "value": "2024-11-28 19:22:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "5fe8db7e21850842",    "src": "hda",    "uuid": "e6040230-adaa-4f86-9a07-8040a48e3bd1"   },   "hidden_output": {    "id": "ef70b3582fce119e",    "src": "hda",    "uuid": "cd472b60-1cbc-43bf-a2be-46af6056cd81"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2024-11-28T19:22:37.105032",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 45.497629165649414, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.2579052448272705">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2579052448272705, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.2653694152832031">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2653694152832031, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="66.11773800849915">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="44.430880069732666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="38.79177379608154">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="39.19429302215576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="38.31046915054321">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="37.11899948120117">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="68.03835940361023">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="45.78549790382385">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="35.73008894920349">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fdr_col": "4",  "header": "yes",  "input": {   "id": "26240eb2598f5b9d",   "src": "hda"  },  "label_col": "1",  "labels|label_file": {   "id": "f327db0e5c80cc90",   "src": "hda"  },  "labels|label_select": "file",  "lfc_col": "2",  "lfc_thresh": "0",  "out_options|rscript_out": true,  "pval_col": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/jobs_directory/000/31/configs/tmppj6i_9ec\u0027 rscript.txt \u0026\u0026 Rscript \u0027/galaxy/server/database/jobs_directory/000/31/configs/tmppj6i_9ec\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-28T18:43:54.127945",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7jppx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "a1798056ee30b1e9",  "id": "0354d06a8bc0ff14",  "inputs": {   "input": {    "id": "26240eb2598f5b9d",    "src": "hda",    "uuid": "b177e269-c172-43bb-857f-2c81f8e23eac"   },   "labels|label_file": {    "id": "f327db0e5c80cc90",    "src": "hda",    "uuid": "8ac20500-8177-4b30-a5ca-c82763d19999"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "plot": {    "id": "b706b218c4f3afe2",    "src": "hda",    "uuid": "42ae73d8-5075-41f7-8fed-c43acf9e58c0"   },   "rscript": {    "id": "78465cefd5cd6c69",    "src": "hda",    "uuid": "b73b5b65-5787-43bc-a11c-d79f89fe996a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fdr_col": "\"4\"",   "header": "\"yes\"",   "label_col": "\"1\"",   "labels": "{\"__current_case__\": 1, \"label_file\": {\"values\": [{\"id\": 56, \"src\": \"hda\"}]}, \"label_select\": \"file\"}",   "lfc_col": "\"2\"",   "lfc_thresh": "\"0.0\"",   "out_options": "{\"rscript_out\": true}",   "plot_options": "{\"boxes\": false, \"legend\": null, \"legend_labs\": \"Down,Not Sig,Up\", \"title\": null, \"xlab\": null, \"xmax\": \"\", \"xmin\": \"\", \"ylab\": null, \"ymax\": \"\"}",   "pval_col": "\"3\"",   "signif_thresh": "\"0.05\""  },  "state": "error",  "stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "stdout": "null device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6",  "tool_stderr": "Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n",  "tool_stdout": "null device \n          1 \nR version 4.0.5 (2021-03-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: Debian GNU/Linux 10 (buster)\n\nMatrix products: default\nBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.so\n\nlocale:\n [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       \n [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   \n [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          \n[10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  \n\nloaded via a namespace (and not attached):\n [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0   \n [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0     \n [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     \n[13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 \n[17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     \n[21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    \n[25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 \n",  "update_time": "2024-11-28T18:44:04.147258",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/volcanoplot/volcanoplot/0.0.6, exit_code: None, stderr: Warning message:\nIn Sys.setlocale(\"LC_MESSAGES\", \"en_US.UTF-8\") :\n  OS reports request to set locale to \"en_US.UTF-8\" cannot be honored\n." ], "status": "failure", "test_index": 2, "time_seconds": 35.73008894920349, "tool_id": "volcanoplot", "tool_version": "0.0.6"}
                ]]></error>
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>