<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="107"
           errors="21"
           failures="15"
           skip="0">
    
    <testcase classname="anndata_manipulate (Test #1)" name="0" time="37.070045709609985">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "d4a7ae85fbbbd93a",   "src": "hda"  },  "manipulate|batch_key": "batch",  "manipulate|function": "concatenate",  "manipulate|index_unique": "-",  "manipulate|join": "inner",  "manipulate|other_adatas": {   "id": "d4a7ae85fbbbd93a",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpk69s24n8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpk69s24n8\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T19:10:41.289628",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fq4hv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "519ccf78d0d6e7ad",  "inputs": {   "input": {    "id": "d4a7ae85fbbbd93a",    "src": "hda",    "uuid": "39dc3bf7-78b8-4f09-a110-3eb6943a2ed9"   },   "manipulate|other_adatas": {    "id": "d4a7ae85fbbbd93a",    "src": "hda",    "uuid": "39dc3bf7-78b8-4f09-a110-3eb6943a2ed9"   },   "manipulate|other_adatas1": {    "id": "d4a7ae85fbbbd93a",    "src": "hda",    "uuid": "39dc3bf7-78b8-4f09-a110-3eb6943a2ed9"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "427dc1be61eebde8",    "src": "hda",    "uuid": "e7b4bba4-a5a2-4130-9c56-411aa171e5c2"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "manipulate": "{\"__current_case__\": 0, \"batch_key\": \"batch\", \"function\": \"concatenate\", \"index_unique\": \"-\", \"join\": \"inner\", \"other_adatas\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat\u0027)\n\nadata_0 = ad.read(\u0027/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat\u0027)\nadata = adata.concatenate(\n    adata_0,\n    join=\u0027inner\u0027,\n    index_unique=\u0027-\u0027,\n    batch_key=\u0027batch\u0027)\n\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_manipulate/anndata_manipulate/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \n\nadata = ad.read(\u0027/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat\u0027)\n\nadata_0 = ad.read(\u0027/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat\u0027)\nadata = adata.concatenate(\n    adata_0,\n    join=\u0027inner\u0027,\n    index_unique=\u0027-\u0027,\n    batch_key=\u0027batch\u0027)\n\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-09-20T19:10:57.534385",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_manipulate/anndata_manipulate/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_manipulate/anndata_manipulate/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 37.070045709609985, "tool_id": "anndata_manipulate", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat')adata_0 = ad.read('/galaxy/server/database/objects/3/9/d/dataset_39dc3bf7-78b8-4f09-a110-3eb6943a2ed9.dat')adata = adata.concatenate(    adata_0,    join='inner',    index_unique='-',    batch_key='batch')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #1)" name="0" time="37.89235043525696">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/4/8/d/dataset_48dc2699-a703-4e91-ad17-6299316bbfa9.dat')adata_0 = ad.read('/galaxy/server/database/objects/4/8/d/dataset_48dc2699-a703-4e91-ad17-6299316bbfa9.dat')adata = adata.concatenate(    adata_0,    join='inner',    index_unique='-',    batch_key='batch')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #2)" name="1" time="38.71044564247131">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/f/1/7/dataset_f177fa84-4293-4a68-9914-0ac774378787.dat')adata.obs_names_make_unique(join='-')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #2)" name="1" time="36.65821695327759">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/5/a/a/dataset_5aa4bbdd-3066-4b50-a294-9ce747312334.dat')adata.obs_names_make_unique(join='-')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #11)" name="10" time="38.678879737854004">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/1/7/b/dataset_17b20eb4-04bb-4bea-9e49-1b4c26dcdab9.dat')adata.raw = adataadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #11)" name="10" time="38.37814235687256">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/4/3/3/dataset_433668d7-244d-4779-bd07-6d4ac88f744f.dat')adata.raw = adataadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #3)" name="2" time="37.99889636039734">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/2/c/6/dataset_2c6bfb2e-6149-43ad-86c2-2ac683778559.dat')adata.var_names_make_unique(join='-')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #3)" name="2" time="36.929176330566406">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/d/2/9/dataset_d29bb24c-f175-49e8-bb0f-85bef3d0e1be.dat')adata.var_names_make_unique(join='-')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #4)" name="3" time="39.298524141311646">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/1/e/a/dataset_1ea4f89f-a1a3-4fc1-95f6-617942d3f981.dat')adata.rename_categories(    key='cell_type',    categories=['Er', 'Ml', 'Mt', 'Ne', 'pr'])adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #4)" name="3" time="38.68032217025757">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/1/1/7/dataset_117b0fb8-bb9d-409f-889d-327ac80afa8d.dat')adata.rename_categories(    key='cell_type',    categories=['Er', 'Ml', 'Mt', 'Ne', 'pr'])adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #5)" name="4" time="11.910676717758179">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.910676717758179, "tool_id": "anndata_manipulate", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #5)" name="4" time="11.556718349456787">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.556718349456787, "tool_id": "anndata_manipulate", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #6)" name="5" time="37.93549609184265">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/2/1/1/dataset_2111a90c-6898-4459-bdbc-35ea6e91aa7d.dat')adata = adata.transpose()adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Variable names are not unique. To make them unique, call `.var_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #6)" name="5" time="37.957868337631226">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/c/c/d/dataset_ccd1460e-2556-463e-91ec-e73d834d081d.dat')adata = adata.transpose()adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Variable names are not unique. To make them unique, call `.var_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #7)" name="6" time="39.272825956344604">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/7/2/6/dataset_726f1233-ca37-406c-99ad-a420fac9aa58.dat')import pandas as pdextra_annot_t = pd.read_csv('/galaxy/server/database/objects/1/c/8/dataset_1c8ac7bf-3d6c-420e-8a7b-96523a79d5a7.dat', sep='\t').reset_index(drop=True)var_index = adata.var_namesvar = pd.concat([adata.var.reset_index(drop=True), extra_annot_t], axis=1)var.index = var_indexadata.var = varadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #7)" name="6" time="38.3746280670166">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/4/c/a/dataset_4ca1c4bd-0541-4cc5-850f-d8cdd45ab2e7.dat')import pandas as pdextra_annot_t = pd.read_csv('/galaxy/server/database/objects/b/4/9/dataset_b49954c8-5913-46b2-bef5-95b9b28a212f.dat', sep='\t').reset_index(drop=True)var_index = adata.var_namesvar = pd.concat([adata.var.reset_index(drop=True), extra_annot_t], axis=1)var.index = var_indexadata.var = varadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #8)" name="7" time="38.6833598613739">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/a/c/3/dataset_ac3cd40c-5619-4eb8-a7b3-79c45a76c715.dat')import pandas as pdextra_annot_t = pd.read_csv('/galaxy/server/database/objects/3/b/0/dataset_3b0748f6-1302-4679-a48f-a3f4de1e35f9.dat', sep='\t').reset_index(drop=True)obs_index = adata.obs.indexobs = pd.concat([adata.obs.reset_index(drop=True), extra_annot_t], axis=1)obs.index = obs_indexadata.obs = obsadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'annot2' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #8)" name="7" time="38.360551834106445">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/1/4/6/dataset_14694fb8-a85a-492b-b02d-c2da04341c44.dat')import pandas as pdextra_annot_t = pd.read_csv('/galaxy/server/database/objects/2/e/b/dataset_2eb8f523-3ece-4b62-924c-cba48a26e6dc.dat', sep='\t').reset_index(drop=True)obs_index = adata.obs.indexobs = pd.concat([adata.obs.reset_index(drop=True), extra_annot_t], axis=1)obs.index = obs_indexadata.obs = obsadata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'annot2' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #9)" name="8" time="38.30235505104065">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/c/d/3/dataset_cd3dcb23-fb69-423e-a25b-1ff669e97f20.dat')filtered = ['Gata2', 'EKLF']print(filtered)adata = adata[:,filtered]adata.write('anndata.h5ad')['Gata2', 'EKLF']
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #9)" name="8" time="11.871952056884766">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 11.871952056884766, "tool_id": "anndata_manipulate", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #10)" name="9" time="36.93250823020935">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/9/e/5/dataset_9e5bde0c-3f51-4dba-b163-c374c44e2034.dat')filtered = adata.obs['cell_type']filtered = filtered == 'progenitor'print(filtered)adata = adata[filtered, :]adata.write('anndata.h5ad')index0       True1       True2       True3       True4       True       ...  155    False156    False157    False158    False159    FalseName: cell_type, Length: 640, dtype: bool
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_manipulate (Test #10)" name="9" time="37.66461181640625">
        
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read('/galaxy/server/database/objects/e/0/9/dataset_e094d25e-2f27-412c-a228-f18bb3624db1.dat')filtered = adata.obs['cell_type']filtered = filtered == 'progenitor'print(filtered)adata = adata[filtered, :]adata.write('anndata.h5ad')index0       True1       True2       True3       True4       True       ...  155    False156    False157    False158    False159    FalseName: cell_type, Length: 640, dtype: bool
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #1)" name="0" time="43.02181267738342">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:21/0/13/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_norm", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #3)" name="2" time="36.640435457229614">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:19/7/0/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #4)" name="3" time="28.620579957962036">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "0f6ae4c839f03883",   "src": "hda"  },  "multiallelics|mode": "-",  "normalize_indels": true,  "output_type": "v",  "reference_source|fasta_ref": {   "id": "ffc25e9629fe4025",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/2/e/e/dataset_2ee0cd1a-9bad-4061-923a-cace7b7e10e1.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/2/a/f/dataset_2aff0e81-fbf6-40d6-a76e-942aa2ea5887.dat\u0027 ref.fa \u0026\u0026 samtools faidx ref.fa \u0026\u0026    awk \u0027{ if ($0 !~ /\u003e/) {print toupper($0)} else {print $0} }\u0027 \u0027ref.fa\u0027 \u003e ref_upper.fa \u0026\u0026           bcftools norm   --fasta-ref ref_upper.fa  --check-ref w   --multiallelics \u0027-both\u0027  --site-win 1000             --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/5/f/f/dataset_5fff7d99-f976-4907-847c-3f435fff8a17.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T19:29:04.453036",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-jsbsl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "28707a6a83cc5061",  "inputs": {   "input_file": {    "id": "0f6ae4c839f03883",    "src": "hda",    "uuid": "2ee0cd1a-9bad-4061-923a-cace7b7e10e1"   },   "reference_source|fasta_ref": {    "id": "ffc25e9629fe4025",    "src": "hda",    "uuid": "2aff0e81-fbf6-40d6-a76e-942aa2ea5887"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "855c32442dd68311",    "src": "hda",    "uuid": "5fff7d99-f976-4907-847c-3f435fff8a17"   }  },  "params": {   "__input_ext": "\"input\"",   "atomize": "false",   "check_ref": "\"w\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "multiallelics": "{\"__current_case__\": 1, \"mode\": \"-\", \"multiallelic_types\": \"both\"}",   "normalize_indels": "true",   "old_rec_tag": "\"\"",   "output_type": "\"v\"",   "reference_source": "{\"__current_case__\": 1, \"fasta_ref\": {\"values\": [{\"id\": 227, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "rm_dup": "\"\"",   "sec_default": "{\"site_win\": \"1000\"}",   "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "Lines   total/split/realigned/skipped:\t19/7/19/0\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_norm/bcftools_norm/1.15.1+galaxy4",  "tool_stderr": "Lines   total/split/realigned/skipped:\t19/7/19/0\n",  "tool_stdout": "",  "update_time": "2024-09-20T19:29:10.182534",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_norm/bcftools_norm/1.15.1+galaxy4, exit_code: None, stderr: Lines   total/split/realigned/skipped:\t19/7/19/0\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_norm/bcftools_norm/1.15.1+galaxy4, exit_code: None, stderr: Lines   total/split/realigned/skipped:\t19/7/19/0\n." ], "status": "failure", "test_index": 3, "time_seconds": 28.620579957962036, "tool_id": "bcftools_norm", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:19/7/19/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #5)" name="4" time="37.67010474205017">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:26/0/0/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #6)" name="5" time="37.692192792892456">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:26/0/0/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #7)" name="6" time="36.97159695625305">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:8/0/0/0REF/ALT total/modified/added:  8/5/3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #8)" name="7" time="37.954370737075806">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Lines   total/split/realigned/skipped:39/20/3/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_norm (Test #9)" name="8" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 8, "tool_id": "bcftools_norm", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fill_tags (Test #1)" name="0" time="40.8952522277832">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fill_tags (Test #2)" name="1" time="36.32454299926758">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #1)" name="0" time="12.601017475128174">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.601017475128174, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #2)" name="1" time="12.738137245178223">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.738137245178223, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #3)" name="2" time="53.822012424468994">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/d/3/c/dataset_d3ca5d1b-a298-4bd4-a345-906ecab52158.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 6 of 58Getting block 5 of 58Getting block 2 of 58Getting block 4 of 58Getting block 1 of 58Getting block 3 of 58  Reserving size (388) for bucket 6  Reserving size (388) for bucket 5  Reserving size (388) for bucket 2  Reserving size (388) for bucket 4  Reserving size (388) for bucket 1  Reserving size (388) for bucket 3Getting block 7 of 58  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 2  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 1  Calculating Z arrays for bucket 3  Reserving size (388) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 2:  Entering block accumulator loop for bucket 1:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 7:  bucket 2: 10%  bucket 1: 10%  bucket 4: 10%  bucket 2: 20%  bucket 5: 10%  bucket 1: 20%  bucket 6: 10%  bucket 3: 10%  bucket 4: 20%  bucket 7: 10%  bucket 2: 30%  bucket 1: 30%  bucket 4: 30%  bucket 5: 20%  bucket 2: 40%  bucket 3: 20%  bucket 6: 20%  bucket 1: 40%  bucket 4: 40%  bucket 7: 20%  bucket 2: 50%  bucket 5: 30%  bucket 4: 50%  bucket 3: 30%  bucket 2: 60%  bucket 1: 50%  bucket 6: 30%  bucket 7: 30%  bucket 4: 60%  bucket 5: 40%  bucket 2: 70%  bucket 3: 40%  bucket 1: 60%  bucket 4: 70%  bucket 2: 80%  bucket 6: 40%  bucket 7: 40%  bucket 5: 50%  bucket 4: 80%  bucket 2: 90%  bucket 3: 50%  bucket 1: 70%  bucket 6: 50%  bucket 4: 90%  bucket 2: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 7: 50%  bucket 5: 60%  bucket 1: 80%  bucket 3: 60%  bucket 4: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 6: 60%  bucket 5: 70%  bucket 1: 90%  bucket 3: 70%  bucket 7: 60%  bucket 6: 70%  bucket 1: 100%  bucket 5: 80%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 3: 80%  bucket 7: 70%  bucket 6: 80%  bucket 5: 90%  bucket 3: 90%  bucket 7: 80%  bucket 5: 100%  bucket 6: 90%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 3: 100%  bucket 7: 90%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 6: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 7: 100%  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 371 for bucket 3Getting block 8 of 58  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 8Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 9:  bucket 8: 10%  bucket 9: 10%  bucket 8: 20%  bucket 9: 20%  bucket 8: 30%  bucket 9: 30%  bucket 8: 40%  bucket 9: 40%  bucket 8: 50%  bucket 9: 50%  bucket 8: 60%  bucket 8: 70%  bucket 9: 60%  bucket 8: 80%  bucket 9: 70%  bucket 8: 90%  bucket 9: 80%  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 9: 90%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 340 for bucket 9Getting block 10 of 58  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  Entering block accumulator loop for bucket 10:Getting block 11 of 58  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:  bucket 10: 10%  bucket 10: 20%  bucket 11: 10%  bucket 10: 30%  bucket 10: 40%  bucket 11: 20%  bucket 10: 50%  bucket 11: 30%  bucket 10: 60%  bucket 11: 40%  bucket 10: 70%  bucket 11: 50%  bucket 10: 80%  bucket 11: 60%  bucket 10: 90%  bucket 11: 70%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 11: 80%  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%  bucket 12: 20%  bucket 12: 30%  bucket 12: 40%  bucket 12: 50%  bucket 12: 60%  bucket 12: 70%  bucket 12: 80%  bucket 12: 90%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12Getting block 13 of 58  Reserving size (388) for bucket 13Getting block 14 of 58Getting block 15 of 58  Calculating Z arrays for bucket 13  Reserving size (388) for bucket 14  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 14  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 15:  Entering block accumulator loop for bucket 14:  bucket 13: 10%  bucket 15: 10%  bucket 13: 20%  bucket 14: 10%  bucket 15: 20%  bucket 13: 30%  bucket 14: 20%  bucket 15: 30%  bucket 13: 40%  bucket 14: 30%  bucket 13: 50%  bucket 15: 40%  bucket 13: 60%  bucket 14: 40%  bucket 15: 50%  bucket 13: 70%  bucket 14: 50%  bucket 15: 60%  bucket 13: 80%  bucket 15: 70%  bucket 13: 90%  bucket 14: 60%  bucket 13: 100%  bucket 15: 80%  bucket 14: 70%  Sorting block of length 282 for bucket 13  (Using difference cover)  bucket 15: 90%  bucket 14: 80%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 14: 90%  Sorting block time: 00:00:00Returning block of 283 for bucket 13  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 242 for bucket 15  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 16 of 58  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 16:Getting block 17 of 58  bucket 16: 10%  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  bucket 16: 20%  Entering block accumulator loop for bucket 17:  bucket 16: 30%  bucket 17: 10%  bucket 16: 40%  bucket 16: 50%  bucket 17: 20%  bucket 16: 60%  bucket 16: 70%  bucket 17: 30%  bucket 16: 80%  bucket 17: 40%  bucket 16: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  bucket 17: 50%  bucket 17: 60%  bucket 17: 70%  Sorting block time: 00:00:00Returning block of 380 for bucket 16  bucket 17: 80%  bucket 17: 90%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:Getting block 19 of 58  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  bucket 18: 10%  Entering block accumulator loop for bucket 19:  bucket 18: 20%  bucket 18: 30%  bucket 19: 10%  bucket 18: 40%  bucket 19: 20%  bucket 18: 50%  bucket 19: 30%  bucket 18: 60%  bucket 19: 40%  bucket 18: 70%  bucket 19: 50%  bucket 18: 80%  bucket 19: 60%  bucket 19: 70%  bucket 18: 90%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 19: 80%  bucket 19: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 18  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 20 of 58  Reserving size (388) for bucket 20Getting block 21 of 58  Calculating Z arrays for bucket 20  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 20:  Entering block accumulator loop for bucket 21:  bucket 20: 10%  bucket 21: 10%  bucket 20: 20%  bucket 21: 20%  bucket 20: 30%  bucket 20: 40%  bucket 21: 30%  bucket 20: 50%  bucket 21: 40%  bucket 20: 60%  bucket 21: 50%  bucket 20: 70%  bucket 20: 80%  bucket 21: 60%  bucket 20: 90%  bucket 21: 70%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  bucket 21: 80%  bucket 21: 90%  Sorting block time: 00:00:00Returning block of 314 for bucket 20  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 22:Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  bucket 22: 10%  Entering block accumulator loop for bucket 23:  bucket 22: 20%  bucket 22: 30%  bucket 23: 10%  bucket 22: 40%  bucket 23: 20%  bucket 22: 50%  bucket 23: 30%  bucket 22: 60%  bucket 23: 40%  bucket 23: 50%  bucket 22: 70%  bucket 23: 60%  bucket 22: 80%  bucket 22: 90%  bucket 23: 70%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  bucket 23: 80%  bucket 23: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22  Sorting block time: 00:00:00Returning block of 239 for bucket 23Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:Getting block 25 of 58  Reserving size (388) for bucket 25  bucket 24: 10%  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 24: 20%  bucket 25: 10%  bucket 24: 30%  bucket 25: 20%  bucket 24: 40%  bucket 25: 30%  bucket 24: 50%  bucket 25: 40%  bucket 24: 60%  bucket 25: 50%  bucket 24: 70%  bucket 25: 60%  bucket 24: 80%  bucket 25: 70%  bucket 24: 90%  bucket 25: 80%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 352 for bucket 24  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%  bucket 26: 20%  bucket 26: 30%  bucket 26: 40%  bucket 26: 50%  bucket 26: 60%  bucket 26: 70%  bucket 26: 80%  bucket 26: 90%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 355 for bucket 26Getting block 27 of 58  Reserving size (388) for bucket 27Getting block 28 of 58  Calculating Z arrays for bucket 27  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 28: 10%  bucket 27: 20%  bucket 27: 30%  bucket 28: 20%  bucket 27: 40%  bucket 28: 30%  bucket 27: 50%  bucket 27: 60%  bucket 28: 40%  bucket 27: 70%  bucket 28: 50%  bucket 27: 80%  bucket 28: 60%  bucket 27: 90%  bucket 28: 70%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 28: 80%  bucket 28: 90%  bucket 28: 100%  Sorting block of length 253 for bucket 28  Sorting block time: 00:00:00  (Using difference cover)Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28Getting block 29 of 58  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 29:  Entering block accumulator loop for bucket 30:  bucket 29: 10%  bucket 29: 20%  bucket 30: 10%  bucket 29: 30%  bucket 30: 20%  bucket 29: 40%  bucket 30: 30%  bucket 29: 50%  bucket 29: 60%  bucket 30: 40%  bucket 29: 70%  bucket 30: 50%  bucket 29: 80%  bucket 30: 60%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  bucket 30: 70%  bucket 30: 80%  Sorting block time: 00:00:00Returning block of 290 for bucket 29  bucket 30: 90%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 346 for bucket 30Getting block 31 of 58  Reserving size (388) for bucket 31Getting block 32 of 58  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 32: 10%  bucket 31: 10%  bucket 32: 20%  bucket 31: 20%  bucket 32: 30%  bucket 31: 30%  bucket 32: 40%  bucket 31: 40%  bucket 32: 50%  bucket 31: 50%  bucket 32: 60%  bucket 31: 60%  bucket 32: 70%  bucket 31: 70%  bucket 32: 80%  bucket 31: 80%  buc..ng block accumulator loop for bucket 25:  bucket 23: 20%  bucket 23: 30%  bucket 24: 10%  bucket 25: 10%  bucket 23: 40%  bucket 24: 20%  bucket 23: 50%  bucket 25: 20%  bucket 23: 60%  bucket 24: 30%  bucket 25: 30%  bucket 23: 70%  bucket 24: 40%  bucket 23: 80%  bucket 25: 40%  bucket 24: 50%  bucket 23: 90%  bucket 25: 50%  bucket 23: 100%  Sorting block of length 349 for bucket 23  (Using difference cover)  bucket 24: 60%  bucket 25: 60%  bucket 24: 70%  bucket 25: 70%  Sorting block time: 00:00:00Returning block of 350 for bucket 23  bucket 24: 80%  bucket 25: 80%  bucket 25: 90%  bucket 24: 90%  bucket 25: 100%  bucket 24: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 26 of 57  Reserving size (388) for bucket 26Getting block 27 of 57  Calculating Z arrays for bucket 26  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 26:  Entering block accumulator loop for bucket 27:  bucket 27: 10%  bucket 26: 10%  bucket 27: 20%  bucket 26: 20%  bucket 27: 30%  bucket 27: 40%  bucket 26: 30%  bucket 27: 50%  bucket 26: 40%  bucket 27: 60%  bucket 27: 70%  bucket 26: 50%  bucket 27: 80%  bucket 26: 60%  bucket 27: 90%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 26: 70%  bucket 26: 80%  Sorting block time: 00:00:00Returning block of 360 for bucket 27  bucket 26: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 28:  Entering block accumulator loop for bucket 29:  bucket 28: 10%  bucket 29: 10%  bucket 28: 20%  bucket 29: 20%  bucket 28: 30%  bucket 29: 30%  bucket 28: 40%  bucket 29: 40%  bucket 29: 50%  bucket 28: 50%  bucket 29: 60%  bucket 28: 60%  bucket 29: 70%  bucket 28: 70%  bucket 29: 80%  bucket 28: 80%  bucket 28: 90%  bucket 29: 90%  bucket 29: 100%  bucket 28: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 30 of 57  Reserving size (388) for bucket 30Getting block 31 of 57  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 30:  Entering block accumulator loop for bucket 31:  bucket 31: 10%  bucket 30: 10%  bucket 30: 20%  bucket 31: 20%  bucket 30: 30%  bucket 31: 30%  bucket 30: 40%  bucket 30: 50%  bucket 31: 40%  bucket 30: 60%  bucket 31: 50%  bucket 30: 70%  bucket 30: 80%  bucket 31: 60%  bucket 30: 90%  bucket 31: 70%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 80%  bucket 31: 90%  Sorting block time: 00:00:00Returning block of 258 for bucket 30  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32Getting block 33 of 57  Calculating Z arrays for bucket 32  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 32:  Entering block accumulator loop for bucket 33:  bucket 32: 10%  bucket 33: 10%  bucket 32: 20%  bucket 33: 20%  bucket 32: 30%  bucket 32: 40%  bucket 33: 30%  bucket 32: 50%  bucket 32: 60%  bucket 33: 40%  bucket 32: 70%  bucket 33: 50%  bucket 32: 80%  bucket 32: 90%  bucket 33: 60%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  bucket 33: 70%  bucket 33: 80%  Sorting block time: 00:00:00Returning block of 220 for bucket 32  bucket 33: 90%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34Getting block 35 of 57  Entering block accumulator loop for bucket 34:  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:  bucket 34: 10%  bucket 35: 10%  bucket 34: 20%  bucket 35: 20%  bucket 35: 30%  bucket 34: 30%  bucket 35: 40%  bucket 34: 40%  bucket 35: 50%  bucket 34: 50%  bucket 35: 60%  bucket 34: 60%  bucket 35: 70%  bucket 35: 80%  bucket 34: 70%  bucket 35: 90%  bucket 34: 80%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 36:  bucket 36: 10%  bucket 36: 20%  bucket 36: 30%  bucket 36: 40%  bucket 36: 50%  bucket 36: 60%  bucket 36: 70%  bucket 36: 80%  bucket 36: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  bucket 37: 10%  Entering block accumulator loop for bucket 38:  bucket 37: 20%  bucket 38: 10%  bucket 38: 20%  bucket 37: 30%  bucket 38: 30%  bucket 37: 40%  bucket 38: 40%  bucket 37: 50%  bucket 38: 50%  bucket 37: 60%  bucket 38: 60%  bucket 37: 70%  bucket 38: 70%  bucket 37: 80%  bucket 38: 80%  bucket 37: 90%  bucket 38: 90%  bucket 38: 100%  bucket 37: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  Sorting block of length 267 for bucket 37  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 39 of 57  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39Getting block 40 of 57  Entering block accumulator loop for bucket 39:  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:  bucket 39: 10%  bucket 40: 10%  bucket 39: 20%  bucket 39: 30%  bucket 40: 20%  bucket 40: 30%  bucket 39: 40%  bucket 40: 40%  bucket 39: 50%  bucket 40: 50%  bucket 39: 60%  bucket 40: 60%  bucket 40: 70%  bucket 39: 70%  bucket 40: 80%  bucket 39: 80%  bucket 40: 90%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 39: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 41 of 57  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 41:  Entering block accumulator loop for bucket 42:  bucket 42: 10%  bucket 41: 10%  bucket 42: 20%  bucket 41: 20%  bucket 42: 30%  bucket 42: 40%  bucket 41: 30%  bucket 42: 50%  bucket 41: 40%  bucket 42: 60%  bucket 41: 50%  bucket 42: 70%  bucket 41: 60%  bucket 42: 80%  bucket 41: 70%  bucket 42: 90%  bucket 41: 80%  bucket 42: 100%  bucket 41: 90%  Sorting block of length 188 for bucket 42  (Using difference cover)  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 331 for bucket 41Getting block 43 of 57  Reserving size (388) for bucket 43Getting block 44 of 57  Calculating Z arrays for bucket 43  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 43:  Entering block accumulator loop for bucket 44:  bucket 43: 10%  bucket 44: 10%  bucket 43: 20%  bucket 44: 20%  bucket 43: 30%  bucket 44: 30%  bucket 44: 40%  bucket 43: 40%  bucket 44: 50%  bucket 43: 50%  bucket 44: 60%  bucket 43: 60%  bucket 44: 70%  bucket 43: 70%  bucket 44: 80%  bucket 43: 80%  bucket 44: 90%  bucket 43: 90%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45Getting block 46 of 57  Entering block accumulator loop for bucket 45:  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 46:  Entering block accumulator loop for bucket 47:  bucket 45: 10%  bucket 47: 10%  bucket 46: 10%  bucket 45: 20%  bucket 47: 20%  bucket 46: 20%  bucket 47: 30%  bucket 45: 30%  bucket 46: 30%  bucket 47: 40%  bucket 45: 40%  bucket 46: 40%  bucket 45: 50%  bucket 47: 50%  bucket 45: 60%  bucket 47: 60%  bucket 46: 50%  bucket 47: 70%  bucket 45: 70%  bucket 46: 60%  bucket 47: 80%  bucket 46: 70%  bucket 45: 80%  bucket 47: 90%  bucket 46: 80%  bucket 45: 90%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 46: 90%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 218 for bucket 47  Sorting block time: 00:00:00Returning block of 366 for bucket 45  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:Getting block 49 of 57  bucket 48: 10%  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  bucket 48: 20%  Entering block accumulator loop for bucket 49:  bucket 48: 30%  bucket 49: 10%  bucket 48: 40%  bucket 48: 50%  bucket 49: 20%  bucket 48: 60%  bucket 48: 70%  bucket 49: 30%  bucket 48: 80%  bucket 49: 40%  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  bucket 49: 50%  bucket 49: 60%  bucket 49: 70%  Sorting block time: 00:00:00Returning block of 385 for bucket 48  bucket 49: 80%  bucket 49: 90%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  Sorting block time: 00:00:00Returning block of 113 for bucket 49Getting block 50 of 57  Reserving size (388) for bucket 50Getting block 51 of 57  Calculating Z arrays for bucket 50  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 50:  Entering block accumulator loop for bucket 51:  bucket 51: 10%  bucket 50: 10%  bucket 51: 20%  bucket 50: 20%  bucket 51: 30%  bucket 50: 30%  bucket 51: 40%  bucket 50: 40%  bucket 51: 50%  bucket 50: 50%  bucket 51: 60%  bucket 50: 60%  bucket 51: 70%  bucket 50: 70%  bucket 51: 80%  bucket 50: 80%  bucket 51: 90%  bucket 50: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 52 of 57  Reserving size (388) for bucket 52Getting block 53 of 57  Calculating Z arrays for bucket 52  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 52:  Entering block accumulator loop for bucket 53:  bucket 53: 10%  bucket 52: 10%  bucket 53: 20%  bucket 52: 20%  bucket 53: 30%  bucket 52: 30%  bucket 53: 40%  bucket 52: 40%  bucket 53: 50%  bucket 52: 50%  bucket 53: 60%  bucket 52: 60%  bucket 53: 70%  bucket 52: 70%  bucket 53: 80%  bucket 52: 80%  bucket 52: 90%  bucket 53: 90%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 54: 10%  bucket 54: 20%  bucket 54: 30%  bucket 54: 40%  bucket 54: 50%  bucket 54: 60%  bucket 54: 70%  bucket 54: 80%  bucket 54: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  Sorting block time: 00:00:00Returning block of 238 for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55Getting block 56 of 57  Reserving size (388) for bucket 56  Entering block accumulator loop for bucket 55:  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  bucket 55: 10%  bucket 55: 20%  bucket 56: 10%  bucket 55: 30%  bucket 56: 20%  bucket 55: 40%  bucket 55: 50%  bucket 56: 30%  bucket 55: 60%  bucket 56: 40%  bucket 55: 70%  bucket 55: 80%  bucket 56: 50%  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  bucket 56: 60%  bucket 56: 70%  bucket 56: 80%  Sorting block time: 00:00:00Returning block of 345 for bucket 55  bucket 56: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmpWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmpRe-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL indexRenaming genome.3.bt2.tmp to genome.3.bt2Renaming genome.4.bt2.tmp to genome.4.bt2Renaming genome.1.bt2.tmp to genome.1.bt2Renaming genome.2.bt2.tmp to genome.2.bt2Renaming genome.rev.1.bt2.tmp to genome.rev.1.bt2Renaming genome.rev.2.bt2.tmp to genome.rev.2.bt2100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #4)" name="3" time="13.625144004821777">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 13.625144004821777, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #5)" name="4" time="38.96101403236389">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/9/7/6/dataset_976f62e4-cae2-4b27-9a5a-f89e02e6e984.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2Getting block 5 of 58  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4Getting block 6 of 58  Calculating Z arrays for bucket 2Getting block 7 of 58  Entering block accumulator loop for bucket 1:  Reserving size (388) for bucket 5  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 3:  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 6:  Entering block accumulator loop for bucket 7:  bucket 2: 10%  bucket 1: 10%  bucket 4: 10%  bucket 5: 10%  bucket 3: 10%  bucket 2: 20%  bucket 6: 10%  bucket 4: 20%  bucket 1: 20%  bucket 5: 20%  bucket 7: 10%  bucket 2: 30%  bucket 3: 20%  bucket 4: 30%  bucket 6: 20%  bucket 5: 30%  bucket 2: 40%  bucket 1: 30%  bucket 7: 20%  bucket 4: 40%  bucket 5: 40%  bucket 6: 30%  bucket 2: 50%  bucket 3: 30%  bucket 1: 40%  bucket 4: 50%  bucket 5: 50%  bucket 2: 60%  bucket 6: 40%  bucket 7: 30%  bucket 3: 40%  bucket 4: 60%  bucket 2: 70%  bucket 5: 60%  bucket 1: 50%  bucket 6: 50%  bucket 4: 70%  bucket 2: 80%  bucket 7: 40%  bucket 5: 70%  bucket 3: 50%  bucket 1: 60%  bucket 6: 60%  bucket 4: 80%  bucket 2: 90%  bucket 5: 80%  bucket 7: 50%  bucket 3: 60%  bucket 6: 70%  bucket 2: 100%  bucket 4: 90%  bucket 1: 70%  bucket 5: 90%  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 3: 70%  bucket 6: 80%  bucket 7: 60%  bucket 4: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 1: 80%  bucket 5: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 6: 90%  bucket 3: 80%  bucket 7: 70%  bucket 1: 90%  bucket 6: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 3: 90%  bucket 7: 80%  bucket 1: 100%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 3: 100%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 7: 90%  bucket 7: 100%  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 369 for bucket 7Getting block 8 of 58Getting block 9 of 58  Reserving size (388) for bucket 8  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 8  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 9:Getting block 10 of 58Getting block 11 of 58  Reserving size (388) for bucket 10  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 10  Calculating Z arrays for bucket 11  bucket 8: 10%  Entering block accumulator loop for bucket 10:  Entering block accumulator loop for bucket 11:  bucket 9: 10%  bucket 10: 10%  bucket 8: 20%  bucket 11: 10%  bucket 9: 20%  bucket 10: 20%  bucket 11: 20%  bucket 8: 30%  bucket 9: 30%  bucket 10: 30%  bucket 11: 30%  bucket 10: 40%  bucket 8: 40%  bucket 9: 40%  bucket 11: 40%  bucket 10: 50%  bucket 11: 50%  bucket 8: 50%  bucket 10: 60%  bucket 9: 50%  bucket 11: 60%  bucket 10: 70%  bucket 8: 60%  bucket 11: 70%  bucket 10: 80%  bucket 9: 60%  bucket 8: 70%  bucket 11: 80%  bucket 10: 90%  bucket 11: 90%  bucket 10: 100%  bucket 9: 70%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 8: 80%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  bucket 9: 80%  bucket 8: 90%  bucket 9: 90%  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 306 for bucket 11  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 340 for bucket 9Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12Getting block 13 of 58  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  Entering block accumulator loop for bucket 12:Getting block 14 of 58  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 12: 10%  bucket 14: 10%  bucket 12: 20%  bucket 13: 10%  bucket 14: 20%  bucket 12: 30%  bucket 13: 20%  bucket 14: 30%  bucket 12: 40%  bucket 13: 30%  bucket 14: 40%  bucket 12: 50%  bucket 12: 60%  bucket 13: 40%  bucket 14: 50%  bucket 12: 70%  bucket 14: 60%  bucket 13: 50%  bucket 12: 80%  bucket 14: 70%  bucket 12: 90%  bucket 13: 60%  bucket 14: 80%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 14: 90%  bucket 13: 70%  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  bucket 13: 80%  bucket 13: 90%  Sorting block time: 00:00:00Returning block of 186 for bucket 12  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 14  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 15 of 58  Reserving size (388) for bucket 15Getting block 16 of 58  Calculating Z arrays for bucket 15  Reserving size (388) for bucket 16Getting block 17 of 58  Calculating Z arrays for bucket 16  Reserving size (388) for bucket 17  Entering block accumulator loop for bucket 15:  Calculating Z arrays for bucket 17  Entering block accumulator loop for bucket 16:  Entering block accumulator loop for bucket 17:  bucket 15: 10%  bucket 15: 20%Getting block 18 of 58  bucket 17: 10%  bucket 16: 10%  bucket 15: 30%  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  bucket 15: 40%  Entering block accumulator loop for bucket 18:  bucket 16: 20%  bucket 17: 20%  bucket 15: 50%  bucket 15: 60%  bucket 16: 30%  bucket 17: 30%  bucket 18: 10%  bucket 15: 70%  bucket 16: 40%  bucket 17: 40%  bucket 15: 80%  bucket 18: 20%  bucket 15: 90%  bucket 16: 50%  bucket 17: 50%  bucket 18: 30%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 16: 60%  bucket 17: 60%  bucket 18: 40%  bucket 16: 70%  bucket 17: 70%  bucket 18: 50%  Sorting block time: 00:00:00Returning block of 242 for bucket 15  bucket 16: 80%  bucket 17: 80%  bucket 18: 60%  bucket 16: 90%  bucket 17: 90%  bucket 18: 70%  bucket 16: 100%  bucket 17: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  Sorting block of length 215 for bucket 17  (Using difference cover)  bucket 18: 80%  bucket 18: 90%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17  Sorting block time: 00:00:00Returning block of 380 for bucket 16  Sorting block time: 00:00:00Returning block of 379 for bucket 18Getting block 19 of 58  Reserving size (388) for bucket 19Getting block 20 of 58Getting block 21 of 58  Calculating Z arrays for bucket 19  Reserving size (388) for bucket 20  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 20  Calculating Z arrays for bucket 21  Entering block accumulator loop for bucket 19:  Entering block accumulator loop for bucket 20:  Entering block accumulator loop for bucket 21:  bucket 20: 10%  bucket 19: 10%  bucket 21: 10%  bucket 20: 20%  bucket 19: 20%  bucket 21: 20%  bucket 20: 30%  bucket 19: 30%  bucket 20: 40%  bucket 21: 30%  bucket 20: 50%  bucket 19: 40%  bucket 21: 40%  bucket 20: 60%  bucket 19: 50%  bucket 20: 70%  bucket 21: 50%  bucket 19: 60%  bucket 20: 80%  bucket 21: 60%  bucket 20: 90%  bucket 19: 70%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  bucket 21: 70%  bucket 19: 80%  bucket 19: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 314 for bucket 20  bucket 21: 80%  bucket 21: 90%  bucket 21: 100%  Sorting block time: 00:00:00Returning block of 335 for bucket 19  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 22:  bucket 22: 10%  bucket 22: 20%  bucket 22: 30%  bucket 22: 40%  bucket 22: 50%  bucket 22: 60%  bucket 22: 70%  bucket 22: 80%  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23Getting block 24 of 58  Calculating Z arrays for bucket 23  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 23:  Entering block accumulator loop for bucket 24:  bucket 23: 10%  bucket 24: 10%  bucket 23: 20%  bucket 24: 20%  bucket 23: 30%  bucket 24: 30%  bucket 23: 40%  bucket 24: 40%  bucket 24: 50%  bucket 23: 50%  bucket 24: 60%  bucket 23: 60%  bucket 24: 70%  bucket 23: 70%  bucket 24: 80%  bucket 23: 80%  bucket 24: 90%  bucket 23: 90%  bucket 24: 100%  bucket 23: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block of length 238 for bucket 23  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 25: 20%  bucket 25: 30%  bucket 25: 40%  bucket 25: 50%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 25: 90%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26Getting block 27 of 58  Entering block accumulator loop for bucket 26:  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:Getting block 28 of 58  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  bucket 26: 10%  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 26: 20%  bucket 27: 20%  bucket 28: 10%  bucket 28: 20%  bucket 26: 30%  bucket 27: 30%  bucket 28: 30%  bucket 27: 40%  bucket 26: 40%  bucket 28: 40%  bucket 27: 50%  bucket 26: 50%  bucket 28: 50%  bucket 27: 60%  bucket 26: 60%  bucket 28: 60%  bucket 27: 70%  bucket 26: 70%  bucket 27: 80%  bucket 28: 70%  bucket 26: 80%  bucket 27: 90%  bucket 28: 80%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 28: 90%  bucket 26: 90%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28  Sorting block time: 00:00:00Returning block of 355 for bucket 26Getting block 29 of 58  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29  Entering block accumulator loop for bucket 29:Getting block 30 of 58  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30Getting block 31 of 58  Entering block accumulator loop for bucket 30:  Reserving size (388) for bucket 31  bucket 29: 10%  Calculating Z arrays for bucket 31Getting block 32 of 58  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  bucket 30: 10%  Entering block accumulator loop for bucket 32:  bucket 29: 20%  bucket 30: 20%  bucket 31: 10%  bucket 30: 30%  bucket 32: 10%  bucket 29: 30%  bucket 31: 20%  bucket 30: 40%  bucket 31: 30%  bucket 32: 20%  bucket 29: 40%  bucket 30: 50%  bucket 31: 40%  bucket 30: 60%  bucket 29: 50%  bucket 32: 30%  bucket 31: 50%  bucket 30: 70%  bucket 29: 60%  bucket 31: 60%  bucket 30: 80%  bucket 32: 40%  bucket 31: 70%  bucket 30: 90%  bucket 29: 70%  bucket 32: 50%  bucket 31: 80%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  bucket 31: 90%  bucket 29: 80%  bucket 32: 60%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using difference cover)  bucket 29: 90%  Sorting block time: 00:00:00  bucket 32: 70%Returning block of 346 for bucket 30  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using di..ucket 23: 50%  bucket 24: 40%  bucket 23: 60%  bucket 24: 50%  bucket 23: 70%  bucket 24: 60%  bucket 23: 80%  bucket 24: 70%  bucket 23: 90%  bucket 24: 80%  bucket 23: 100%  Sorting block of length 349 for bucket 23  (Using difference cover)  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 350 for bucket 23  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 25:  Entering block accumulator loop for bucket 26:  bucket 26: 10%  bucket 25: 10%  bucket 26: 20%  bucket 25: 20%  bucket 26: 30%  bucket 25: 30%  bucket 26: 40%  bucket 25: 40%  bucket 26: 50%  bucket 25: 50%  bucket 26: 60%  bucket 25: 60%  bucket 26: 70%  bucket 25: 70%  bucket 26: 80%  bucket 25: 80%  bucket 26: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  bucket 25: 90%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26  Sorting block time: 00:00:00Returning block of 287 for bucket 25Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 28: 10%  bucket 27: 20%  bucket 27: 30%  bucket 28: 20%  bucket 27: 40%  bucket 28: 30%  bucket 27: 50%  bucket 28: 40%  bucket 27: 60%  bucket 28: 50%  bucket 27: 70%  bucket 28: 60%  bucket 27: 80%  bucket 28: 70%  bucket 27: 90%  bucket 28: 80%  bucket 27: 100%  Sorting block of length 359 for bucket 27  (Using difference cover)  bucket 28: 90%  bucket 28: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29Getting block 30 of 57  Calculating Z arrays for bucket 29  Reserving size (388) for bucket 30Getting block 31 of 57  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31  Entering block accumulator loop for bucket 29:  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 30:  Entering block accumulator loop for bucket 31:  bucket 30: 10%  bucket 29: 10%  bucket 31: 10%  bucket 30: 20%  bucket 29: 20%  bucket 31: 20%  bucket 30: 30%  bucket 31: 30%  bucket 30: 40%  bucket 29: 30%  bucket 30: 50%  bucket 31: 40%  bucket 29: 40%  bucket 30: 60%  bucket 31: 50%  bucket 29: 50%  bucket 30: 70%  bucket 31: 60%  bucket 30: 80%  bucket 29: 60%  bucket 30: 90%  bucket 31: 70%  bucket 29: 70%  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  bucket 31: 80%  bucket 29: 80%  bucket 31: 90%  bucket 29: 90%  Sorting block time: 00:00:00Returning block of 258 for bucket 30  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:  bucket 32: 10%  bucket 32: 20%  bucket 33: 10%  bucket 32: 30%  bucket 33: 20%  bucket 32: 40%  bucket 33: 30%  bucket 32: 50%  bucket 33: 40%  bucket 32: 60%  bucket 33: 50%  bucket 32: 70%  bucket 33: 60%  bucket 32: 80%  bucket 33: 70%  bucket 32: 90%  bucket 33: 80%  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  bucket 33: 90%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  Sorting block time: 00:00:00Returning block of 220 for bucket 32  Sorting block time: 00:00:00Returning block of 388 for bucket 33Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  Entering block accumulator loop for bucket 34:  bucket 34: 10%  bucket 34: 20%  bucket 34: 30%  bucket 34: 40%  bucket 34: 50%  bucket 34: 60%  bucket 34: 70%  bucket 34: 80%  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36  Entering block accumulator loop for bucket 35:  Entering block accumulator loop for bucket 36:  bucket 35: 10%  bucket 36: 10%  bucket 35: 20%  bucket 36: 20%  bucket 35: 30%  bucket 36: 30%  bucket 35: 40%  bucket 36: 40%  bucket 35: 50%  bucket 36: 50%  bucket 35: 60%  bucket 36: 60%  bucket 35: 70%  bucket 36: 70%  bucket 35: 80%  bucket 36: 80%  bucket 35: 90%  bucket 36: 90%  bucket 35: 100%  bucket 36: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 37 of 57  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:  bucket 37: 10%  bucket 38: 10%  bucket 37: 20%  bucket 38: 20%  bucket 38: 30%  bucket 37: 30%  bucket 37: 40%  bucket 38: 40%  bucket 37: 50%  bucket 38: 50%  bucket 37: 60%  bucket 38: 60%  bucket 37: 70%  bucket 38: 70%  bucket 37: 80%  bucket 38: 80%  bucket 37: 90%  bucket 38: 90%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  Sorting block time: 00:00:00Returning block of 268 for bucket 37  Sorting block time: 00:00:00Returning block of 338 for bucket 38Getting block 39 of 57  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  Entering block accumulator loop for bucket 39:  bucket 39: 10%Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  bucket 39: 20%  Entering block accumulator loop for bucket 40:  bucket 39: 30%  bucket 40: 10%  bucket 39: 40%  bucket 39: 50%  bucket 40: 20%  bucket 39: 60%  bucket 39: 70%  bucket 40: 30%  bucket 39: 80%  bucket 40: 40%  bucket 39: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  bucket 40: 50%  bucket 40: 60%  Sorting block time: 00:00:00  bucket 40: 70%Returning block of 388 for bucket 39  bucket 40: 80%  bucket 40: 90%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40Getting block 41 of 57  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 41:Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  bucket 41: 10%  Entering block accumulator loop for bucket 42:Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  bucket 41: 20%  Entering block accumulator loop for bucket 43:  bucket 42: 10%  bucket 41: 30%  bucket 43: 10%  bucket 42: 20%  bucket 41: 40%  bucket 43: 20%  bucket 41: 50%  bucket 42: 30%  bucket 43: 30%  bucket 41: 60%  bucket 42: 40%  bucket 41: 70%  bucket 43: 40%  bucket 42: 50%  bucket 41: 80%  bucket 43: 50%  bucket 42: 60%  bucket 41: 90%  bucket 43: 60%  bucket 42: 70%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 43: 70%  bucket 42: 80%  bucket 42: 90%  bucket 43: 80%  bucket 42: 100%  bucket 43: 90%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 331 for bucket 41  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42  Sorting block time: 00:00:00Returning block of 322 for bucket 43Getting block 44 of 57  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 44:Getting block 45 of 57  bucket 44: 10%  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  bucket 44: 20%  Entering block accumulator loop for bucket 45:  bucket 44: 30%  bucket 44: 40%  bucket 45: 10%  bucket 44: 50%  bucket 45: 20%  bucket 44: 60%  bucket 44: 70%  bucket 45: 30%  bucket 44: 80%  bucket 45: 40%  bucket 44: 90%  bucket 45: 50%  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  bucket 45: 60%  bucket 45: 70%  bucket 45: 80%  bucket 45: 90%  Sorting block time: 00:00:00Returning block of 367 for bucket 44  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  Sorting block time: 00:00:00Returning block of 366 for bucket 45Getting block 46 of 57  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 46:  Entering block accumulator loop for bucket 47:  bucket 46: 10%  bucket 47: 10%  bucket 46: 20%  bucket 47: 20%  bucket 46: 30%  bucket 47: 30%  bucket 46: 40%  bucket 47: 40%  bucket 46: 50%  bucket 47: 50%  bucket 46: 60%  bucket 47: 60%  bucket 46: 70%  bucket 47: 70%  bucket 46: 80%  bucket 47: 80%  bucket 46: 90%  bucket 47: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46  Sorting block time: 00:00:00Returning block of 218 for bucket 47Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  Entering block accumulator loop for bucket 48:Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 49:  Entering block accumulator loop for bucket 50:  bucket 48: 10%  bucket 49: 10%  bucket 49: 20%  bucket 50: 10%  bucket 48: 20%  bucket 49: 30%  bucket 48: 30%  bucket 50: 20%  bucket 49: 40%  bucket 48: 40%  bucket 50: 30%  bucket 49: 50%  bucket 48: 50%  bucket 49: 60%  bucket 50: 40%  bucket 48: 60%  bucket 49: 70%  bucket 50: 50%  bucket 49: 80%  bucket 48: 70%  bucket 49: 90%  bucket 50: 60%  bucket 48: 80%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 50: 70%  bucket 48: 90%  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  bucket 50: 80%  bucket 50: 90%  Sorting block time: 00:00:00Returning block of 113 for bucket 49  Sorting block time: 00:00:00  bucket 50: 100%Returning block of 385 for bucket 48  Sorting block of length 275 for bucket 50  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 50Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:Getting block 52 of 57  Reserving size (388) for bucket 52  Calculating Z arrays for bucket 52  Entering block accumulator loop for bucket 52:  bucket 51: 10%  bucket 52: 10%  bucket 51: 20%  bucket 52: 20%  bucket 51: 30%  bucket 52: 30%  bucket 51: 40%  bucket 52: 40%  bucket 51: 50%  bucket 52: 50%  bucket 51: 60%  bucket 52: 60%  bucket 51: 70%  bucket 52: 70%  bucket 51: 80%  bucket 52: 80%  bucket 51: 90%  bucket 52: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51  Sorting block time: 00:00:00Returning block of 379 for bucket 52Getting block 53 of 57  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 53:  Entering block accumulator loop for bucket 54:  bucket 53: 10%  bucket 54: 10%  bucket 53: 20%  bucket 54: 20%  bucket 54: 30%  bucket 53: 30%  bucket 54: 40%  bucket 53: 40%  bucket 54: 50%  bucket 53: 50%  bucket 54: 60%  bucket 54: 70%  bucket 53: 60%  bucket 54: 80%  bucket 53: 70%  bucket 54: 90%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 53: 80%  bucket 53: 90%  Sorting block time: 00:00:00Returning block of 238 for bucket 54  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 55 of 57  Reserving size (388) for bucket 55Getting block 56 of 57  Calculating Z arrays for bucket 55  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  Entering block accumulator loop for bucket 55:Getting block 57 of 57  bucket 56: 10%  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 56: 20%  bucket 57: 10%  bucket 55: 10%  bucket 56: 30%  bucket 57: 20%  bucket 57: 30%  bucket 56: 40%  bucket 57: 40%  bucket 55: 20%  bucket 57: 50%  bucket 56: 50%  bucket 55: 30%  bucket 57: 60%  bucket 57: 70%  bucket 56: 60%  bucket 57: 80%  bucket 55: 40%  bucket 57: 90%  bucket 56: 70%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  bucket 56: 80%  bucket 55: 50%  bucket 56: 90%  bucket 55: 60%  Sorting block time: 00:00:00Returning block of 133 for bucket 57  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  bucket 55: 70%  bucket 55: 80%  Sorting block time: 00:00:00Returning block of 271 for bucket 56  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 345 for bucket 55Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmpWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmpRe-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL indexRenaming genome.3.bt2.tmp to genome.3.bt2Renaming genome.4.bt2.tmp to genome.4.bt2Renaming genome.1.bt2.tmp to genome.1.bt2Renaming genome.2.bt2.tmp to genome.2.bt2Renaming genome.rev.1.bt2.tmp to genome.rev.1.bt2Renaming genome.rev.2.bt2.tmp to genome.rev.2.bt23 reads; of these:  3 (100.00%) were paired; of these:    2 (66.67%) aligned concordantly 0 times    1 (33.33%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    2 pairs aligned concordantly 0 times; of these:      0 (0.00%) aligned discordantly 1 time    ----    2 pairs aligned 0 times concordantly or discordantly; of these:      4 mates make up the pairs; of these:        3 (75.00%) aligned 0 times        1 (25.00%) aligned exactly 1 time        0 (0.00%) aligned >1 times50.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #6)" name="5" time="13.530150175094604">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 13.530150175094604, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #7)" name="6" time="42.146809577941895">
        
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/f/c/6/dataset_fc6fd589-0469-4bb4-9fd5-92d60e5fa808.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58  Reserving size (388) for bucket 1Getting block 2 of 58Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58  Calculating Z arrays for bucket 1  Reserving size (388) for bucket 2  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5Getting block 6 of 58Getting block 7 of 58  Calculating Z arrays for bucket 2  Calculating Z arrays for bucket 3  Entering block accumulator loop for bucket 1:  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Reserving size (388) for bucket 6  Reserving size (388) for bucket 7  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 6  Entering block accumulator loop for bucket 3:  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 5:  bucket 1: 10%  Entering block accumulator loop for bucket 6:  bucket 2: 10%  Entering block accumulator loop for bucket 7:  bucket 3: 10%  bucket 1: 20%  bucket 4: 10%  bucket 2: 20%  bucket 1: 30%  bucket 3: 20%  bucket 5: 10%  bucket 4: 20%  bucket 6: 10%  bucket 1: 40%  bucket 7: 10%  bucket 3: 30%  bucket 2: 30%  bucket 4: 30%  bucket 1: 50%  bucket 5: 20%  bucket 3: 40%  bucket 6: 20%  bucket 2: 40%  bucket 1: 60%  bucket 4: 40%  bucket 7: 20%  bucket 3: 50%  bucket 5: 30%  bucket 2: 50%  bucket 1: 70%  bucket 4: 50%  bucket 6: 30%  bucket 3: 60%  bucket 2: 60%  bucket 1: 80%  bucket 4: 60%  bucket 7: 30%  bucket 5: 40%  bucket 3: 70%  bucket 2: 70%  bucket 1: 90%  bucket 4: 70%  bucket 6: 40%  bucket 3: 80%  bucket 2: 80%  bucket 1: 100%  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 4: 80%  bucket 7: 40%  bucket 3: 90%  bucket 6: 50%  bucket 4: 90%  bucket 3: 100%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 7: 50%  bucket 5: 50%  bucket 4: 100%  bucket 2: 90%  bucket 6: 60%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 7: 60%  bucket 2: 100%  bucket 5: 60%  Sorting block of length 165 for bucket 2  (Using difference cover)  bucket 6: 70%  bucket 7: 70%  bucket 5: 70%  bucket 6: 80%  bucket 7: 80%  bucket 5: 80%  bucket 6: 90%  bucket 7: 90%  bucket 5: 90%  bucket 7: 100%  bucket 6: 100%  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 5: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 340 for bucket 6  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 369 for bucket 7Getting block 8 of 58  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 8Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9  Entering block accumulator loop for bucket 8:  Entering block accumulator loop for bucket 9:Getting block 10 of 58  bucket 8: 10%  Reserving size (388) for bucket 10  Calculating Z arrays for bucket 10  bucket 9: 10%  bucket 8: 20%  Entering block accumulator loop for bucket 10:  bucket 9: 20%  bucket 8: 30%  bucket 10: 10%  bucket 9: 30%  bucket 8: 40%  bucket 10: 20%  bucket 9: 40%  bucket 8: 50%  bucket 10: 30%  bucket 9: 50%  bucket 8: 60%  bucket 10: 40%  bucket 10: 50%  bucket 9: 60%  bucket 8: 70%  bucket 10: 60%  bucket 8: 80%  bucket 9: 70%  bucket 10: 70%  bucket 8: 90%  bucket 10: 80%  bucket 9: 80%  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  bucket 10: 90%  bucket 9: 90%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  Sorting block time: 00:00:00Returning block of 172 for bucket 8  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 340 for bucket 9Getting block 11 of 58  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 11:Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  bucket 11: 10%  Entering block accumulator loop for bucket 12:  bucket 11: 20%  bucket 12: 10%  bucket 11: 30%  bucket 12: 20%  bucket 12: 30%  bucket 11: 40%  bucket 12: 40%  bucket 11: 50%  bucket 12: 50%  bucket 11: 60%  bucket 12: 60%  bucket 11: 70%  bucket 12: 70%  bucket 12: 80%  bucket 11: 80%  bucket 12: 90%  bucket 11: 90%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 186 for bucket 12  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 13 of 58  Reserving size (388) for bucket 13Getting block 14 of 58  Calculating Z arrays for bucket 13  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 13:  Entering block accumulator loop for bucket 14:  bucket 14: 10%  bucket 13: 10%  bucket 14: 20%  bucket 13: 20%  bucket 14: 30%  bucket 13: 30%  bucket 14: 40%  bucket 13: 40%  bucket 13: 50%  bucket 14: 50%  bucket 13: 60%  bucket 14: 60%  bucket 13: 70%  bucket 14: 70%  bucket 13: 80%  bucket 14: 80%  bucket 13: 90%  bucket 14: 90%  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 283 for bucket 13  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 15 of 58  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:Getting block 16 of 58  bucket 15: 10%  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 16:  bucket 15: 20%  bucket 16: 10%  bucket 15: 30%  bucket 15: 40%  bucket 16: 20%  bucket 15: 50%  bucket 16: 30%  bucket 15: 60%  bucket 15: 70%  bucket 16: 40%  bucket 15: 80%  bucket 16: 50%  bucket 15: 90%  bucket 16: 60%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 16: 70%  bucket 16: 80%  Sorting block time: 00:00:00Returning block of 242 for bucket 15  bucket 16: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 16Getting block 17 of 58  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  Entering block accumulator loop for bucket 17:  bucket 17: 10%  bucket 17: 20%  bucket 17: 30%  bucket 17: 40%  bucket 17: 50%  bucket 17: 60%  bucket 17: 70%  bucket 17: 80%  bucket 17: 90%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17Getting block 18 of 58  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:Getting block 19 of 58  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  bucket 18: 10%  Entering block accumulator loop for bucket 19:  bucket 18: 20%  bucket 19: 10%  bucket 18: 30%  bucket 19: 20%  bucket 18: 40%  bucket 19: 30%  bucket 18: 50%  bucket 19: 40%  bucket 18: 60%  bucket 19: 50%  bucket 18: 70%  bucket 19: 60%  bucket 18: 80%  bucket 19: 70%  bucket 18: 90%  bucket 19: 80%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  bucket 19: 90%  bucket 19: 100%  Sorting block of length 334 for bucket 19  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 18  Sorting block time: 00:00:00Returning block of 335 for bucket 19Getting block 20 of 58  Reserving size (388) for bucket 20  Calculating Z arrays for bucket 20  Entering block accumulator loop for bucket 20:Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21  bucket 20: 10%  Entering block accumulator loop for bucket 21:  bucket 21: 10%  bucket 20: 20%  bucket 21: 20%  bucket 20: 30%  bucket 21: 30%  bucket 20: 40%  bucket 21: 40%  bucket 20: 50%  bucket 21: 50%  bucket 20: 60%  bucket 21: 60%  bucket 20: 70%  bucket 21: 70%  bucket 20: 80%  bucket 21: 80%  bucket 20: 90%  bucket 21: 90%  bucket 20: 100%  bucket 21: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block of length 210 for bucket 21  (Using difference cover)  Sorting block time: 00:00:00Returning block of 211 for bucket 21  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 22:  bucket 22: 10%  bucket 22: 20%  bucket 22: 30%  bucket 22: 40%  bucket 22: 50%  bucket 22: 60%  bucket 22: 70%  bucket 22: 80%  bucket 22: 90%  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23Getting block 24 of 58  Calculating Z arrays for bucket 23  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 23:  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 23: 10%  bucket 24: 20%  bucket 23: 20%  bucket 24: 30%  bucket 23: 30%  bucket 24: 40%  bucket 23: 40%  bucket 23: 50%  bucket 24: 50%  bucket 23: 60%  bucket 24: 60%  bucket 23: 70%  bucket 24: 70%  bucket 23: 80%  bucket 24: 80%  bucket 23: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:Getting block 26 of 58  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  bucket 25: 10%  Entering block accumulator loop for bucket 26:  bucket 25: 20%  bucket 26: 10%  bucket 25: 30%  bucket 26: 20%  bucket 25: 40%  bucket 26: 30%  bucket 25: 50%  bucket 26: 40%  bucket 25: 60%  bucket 26: 50%  bucket 25: 70%  bucket 26: 60%  bucket 25: 80%  bucket 26: 70%  bucket 25: 90%  bucket 26: 80%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 26: 90%  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25  Sorting block time: 00:00:00Returning block of 355 for bucket 26Getting block 27 of 58  Reserving size (388) for bucket 27Getting block 28 of 58  Calculating Z arrays for bucket 27  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 28: 10%  bucket 27: 20%  bucket 28: 20%  bucket 27: 30%  bucket 28: 30%  bucket 27: 40%  bucket 28: 40%  bucket 27: 50%  bucket 27: 60%  bucket 28: 50%  bucket 27: 70%  bucket 28: 60%  bucket 27: 80%  bucket 28: 70%  bucket 27: 90%  bucket 27: 100%  bucket 28: 80%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 28: 90%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 254 for bucket 28Getting block 29 of 58  Reserving size (388) for bucket 29Getting block 30 of 58  Calculating Z arrays for bucket 29  Reserving size (388) for bucket 30Getting block 31 of 58Getting block 32 of 58  Calculating Z arrays for bucket 30  Reserving size (388) for bucket 31  Entering block accumulator loop for bucket 29:  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 31  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 30:  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 29: 10%  bucket 30: 10%  bucket 31: 10%  bucket 29: 20%  bucket 32: 10%  bucket 31: 20%  bucket 30: 20%  bucket 29: 30%  bucket 30: 30%  bucket 31: 30%  bucket 32: 20%  bucket 30: 40%  bucket 31: 40%  bucket 29: 40%  bucket 32: 30%  bucket 30: 50%  bucket 31: 50%  bucket 29: 50%  bucket 30: 60%  bucket 31: 60%  bucket 32: 40%  bucket 30: 70%  bucket 31: 70%  bucket 29: 60%  bucket 32: 50%  bucket 30: 80%  bucket 31: 80%  bucket 29: 70%  bucket 30: 90%  bucket 31: 90%  bucket 32: 60%  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  bucket 29: 80%  bucket 31: 100%  Sorting block of length 377 for bucket 31  (Using difference cover)  bucket 32: 70%  bucket 29: 90%  bucket 32: 80%  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  Sorting block time: 00:00:00Retu..0:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24  Entering block accumulator loop for bucket 24:  bucket 24: 10%  bucket 24: 20%  bucket 24: 30%  bucket 24: 40%  bucket 24: 50%  bucket 24: 60%  bucket 24: 70%  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 25 of 57  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:Getting block 26 of 57  Reserving size (388) for bucket 26Getting block 27 of 57  Calculating Z arrays for bucket 26  Reserving size (388) for bucket 27  bucket 25: 10%  Calculating Z arrays for bucket 27Getting block 28 of 57  Reserving size (388) for bucket 28  Entering block accumulator loop for bucket 26:  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 27:  bucket 25: 20%  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 25: 30%  bucket 26: 10%  bucket 28: 10%  bucket 25: 40%  bucket 27: 20%  bucket 26: 20%  bucket 25: 50%  bucket 28: 20%  bucket 27: 30%  bucket 25: 60%  bucket 26: 30%  bucket 28: 30%  bucket 27: 40%  bucket 25: 70%  bucket 28: 40%  bucket 26: 40%  bucket 25: 80%  bucket 27: 50%  bucket 26: 50%  bucket 28: 50%  bucket 25: 90%  bucket 27: 60%  bucket 25: 100%  bucket 26: 60%  Sorting block of length 286 for bucket 25  (Using difference cover)  bucket 28: 60%  bucket 27: 70%  bucket 26: 70%  bucket 28: 70%  bucket 26: 80%  bucket 27: 80%  bucket 28: 80%  Sorting block time: 00:00:00Returning block of 287 for bucket 25  bucket 26: 90%  bucket 27: 90%  bucket 28: 90%  bucket 26: 100%  bucket 27: 100%  bucket 28: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26  Sorting block time: 00:00:00Returning block of 360 for bucket 27  Sorting block time: 00:00:00Returning block of 388 for bucket 28Getting block 29 of 57  Reserving size (388) for bucket 29Getting block 30 of 57  Calculating Z arrays for bucket 29  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 29:  Entering block accumulator loop for bucket 30:  bucket 29: 10%  bucket 30: 10%  bucket 29: 20%  bucket 30: 20%  bucket 29: 30%  bucket 30: 30%  bucket 29: 40%  bucket 30: 40%  bucket 29: 50%  bucket 30: 50%  bucket 29: 60%  bucket 30: 60%  bucket 29: 70%  bucket 30: 70%  bucket 29: 80%  bucket 30: 80%  bucket 29: 90%  bucket 30: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 258 for bucket 30Getting block 31 of 57  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31Getting block 32 of 57  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 31: 10%  bucket 32: 10%  bucket 32: 20%  bucket 31: 20%  bucket 32: 30%  bucket 31: 30%  bucket 32: 40%  bucket 31: 40%  bucket 32: 50%  bucket 31: 50%  bucket 32: 60%  bucket 31: 60%  bucket 32: 70%  bucket 31: 70%  bucket 32: 80%  bucket 31: 80%  bucket 32: 90%  bucket 31: 90%  bucket 31: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  bucket 32: 100%  Sorting block of length 219 for bucket 32  (Using difference cover)  Sorting block time: 00:00:00Returning block of 220 for bucket 32  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 34:  bucket 33: 10%  Entering block accumulator loop for bucket 35:  bucket 34: 10%  bucket 35: 10%  bucket 33: 20%  bucket 34: 20%  bucket 35: 20%  bucket 33: 30%  bucket 34: 30%  bucket 35: 30%  bucket 33: 40%  bucket 34: 40%  bucket 35: 40%  bucket 33: 50%  bucket 34: 50%  bucket 35: 50%  bucket 33: 60%  bucket 34: 60%  bucket 35: 60%  bucket 34: 70%  bucket 33: 70%  bucket 34: 80%  bucket 35: 70%  bucket 33: 80%  bucket 34: 90%  bucket 33: 90%  bucket 35: 80%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 34  Sorting block time: 00:00:00Returning block of 388 for bucket 33  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36  Calculating Z arrays for bucket 36Getting block 37 of 57  Entering block accumulator loop for bucket 36:  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 37:  bucket 36: 10%  bucket 37: 10%  bucket 36: 20%  bucket 37: 20%  bucket 36: 30%  bucket 37: 30%  bucket 36: 40%  bucket 37: 40%  bucket 37: 50%  bucket 36: 50%  bucket 37: 60%  bucket 36: 60%  bucket 37: 70%  bucket 37: 80%  bucket 36: 70%  bucket 37: 90%  bucket 36: 80%  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  bucket 36: 90%  Sorting block time: 00:00:00Returning block of 268 for bucket 37  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:Getting block 39 of 57  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  bucket 38: 10%  Entering block accumulator loop for bucket 39:  bucket 38: 20%  bucket 39: 10%  bucket 38: 30%  bucket 38: 40%  bucket 39: 20%  bucket 38: 50%  bucket 39: 30%  bucket 38: 60%  bucket 39: 40%  bucket 38: 70%  bucket 39: 50%  bucket 38: 80%  bucket 39: 60%  bucket 38: 90%  bucket 39: 70%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 80%  bucket 39: 90%  Sorting block time: 00:00:00  bucket 39: 100%Returning block of 338 for bucket 38  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:Getting block 41 of 57  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 41:  bucket 40: 10%  bucket 40: 20%  bucket 41: 10%  bucket 40: 30%  bucket 41: 20%  bucket 40: 40%  bucket 40: 50%  bucket 41: 30%  bucket 40: 60%  bucket 41: 40%  bucket 40: 70%  bucket 40: 80%  bucket 41: 50%  bucket 40: 90%  bucket 41: 60%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  bucket 41: 70%  bucket 41: 80%  Sorting block time: 00:00:00Returning block of 380 for bucket 40  bucket 41: 90%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  Sorting block time: 00:00:00Returning block of 331 for bucket 41Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  Entering block accumulator loop for bucket 42:  bucket 42: 10%  bucket 42: 20%  bucket 42: 30%  bucket 42: 40%  bucket 42: 50%  bucket 42: 60%  bucket 42: 70%  bucket 42: 80%  bucket 42: 90%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43  Calculating Z arrays for bucket 43  Entering block accumulator loop for bucket 43:Getting block 44 of 57  Reserving size (388) for bucket 44Getting block 45 of 57  Calculating Z arrays for bucket 44  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  bucket 43: 10%  Entering block accumulator loop for bucket 44:  Entering block accumulator loop for bucket 45:  bucket 43: 20%  bucket 45: 10%  bucket 43: 30%  bucket 44: 10%  bucket 45: 20%  bucket 43: 40%  bucket 44: 20%  bucket 45: 30%  bucket 43: 50%  bucket 45: 40%  bucket 44: 30%  bucket 43: 60%  bucket 45: 50%  bucket 43: 70%  bucket 44: 40%  bucket 45: 60%  bucket 43: 80%  bucket 45: 70%  bucket 44: 50%  bucket 43: 90%  bucket 45: 80%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 44: 60%  bucket 45: 90%  bucket 45: 100%  bucket 44: 70%  Sorting block of length 365 for bucket 45  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  bucket 44: 80%  bucket 44: 90%  Sorting block time: 00:00:00Returning block of 366 for bucket 45  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 46 of 57  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  Entering block accumulator loop for bucket 46:  bucket 46: 10%  bucket 46: 20%  bucket 46: 30%  bucket 46: 40%  bucket 46: 50%  bucket 46: 60%  bucket 46: 70%  bucket 46: 80%  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47Getting block 48 of 57  Calculating Z arrays for bucket 47  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 47:  Entering block accumulator loop for bucket 48:Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49  bucket 48: 10%  bucket 47: 10%  Entering block accumulator loop for bucket 49:  bucket 47: 20%  bucket 49: 10%  bucket 48: 20%  bucket 47: 30%  bucket 49: 20%  bucket 48: 30%  bucket 47: 40%  bucket 49: 30%  bucket 47: 50%  bucket 49: 40%  bucket 48: 40%  bucket 47: 60%  bucket 49: 50%  bucket 48: 50%  bucket 47: 70%  bucket 49: 60%  bucket 47: 80%  bucket 49: 70%  bucket 48: 60%  bucket 47: 90%  bucket 49: 80%  bucket 47: 100%  bucket 49: 90%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 70%  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  bucket 48: 80%  Sorting block time: 00:00:00Returning block of 218 for bucket 47  bucket 48: 90%  Sorting block time: 00:00:00Returning block of 113 for bucket 49  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 50:Getting block 51 of 57  bucket 50: 10%  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:  bucket 50: 20%  bucket 50: 30%  bucket 51: 10%  bucket 50: 40%  bucket 51: 20%  bucket 50: 50%  bucket 51: 30%  bucket 50: 60%  bucket 51: 40%  bucket 50: 70%  bucket 51: 50%  bucket 50: 80%  bucket 51: 60%  bucket 50: 90%  bucket 51: 70%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  bucket 51: 80%  bucket 51: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 50  Sorting block time: 00:00:00Returning block of 351 for bucket 51Getting block 52 of 57  Reserving size (388) for bucket 52Getting block 53 of 57  Calculating Z arrays for bucket 52  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 52:  Entering block accumulator loop for bucket 53:  bucket 52: 10%  bucket 53: 10%  bucket 53: 20%  bucket 52: 20%  bucket 53: 30%  bucket 52: 30%  bucket 52: 40%  bucket 53: 40%  bucket 52: 50%  bucket 53: 50%  bucket 52: 60%  bucket 52: 70%  bucket 53: 60%  bucket 52: 80%  bucket 53: 70%  bucket 52: 90%  bucket 53: 80%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 53: 90%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54Getting block 55 of 57  Reserving size (388) for bucket 55  Calculating Z arrays for bucket 55  Entering block accumulator loop for bucket 54:  Entering block accumulator loop for bucket 55:  bucket 54: 10%  bucket 54: 20%  bucket 55: 10%  bucket 54: 30%  bucket 55: 20%  bucket 54: 40%  bucket 54: 50%  bucket 55: 30%  bucket 54: 60%  bucket 55: 40%  bucket 54: 70%  bucket 55: 50%  bucket 54: 80%  bucket 54: 90%  bucket 55: 60%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 55: 70%  bucket 55: 80%  Sorting block time: 00:00:00Returning block of 238 for bucket 54  bucket 55: 90%  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  Sorting block time: 00:00:00Returning block of 345 for bucket 55Getting block 56 of 57  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 56:  bucket 56: 10%  bucket 56: 20%  bucket 56: 30%  bucket 56: 40%  bucket 56: 50%  bucket 56: 60%  bucket 56: 70%  bucket 56: 80%  bucket 56: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmpWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmpRe-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL indexRenaming genome.3.bt2.tmp to genome.3.bt2Renaming genome.4.bt2.tmp to genome.4.bt2Renaming genome.1.bt2.tmp to genome.1.bt2Renaming genome.2.bt2.tmp to genome.2.bt2Renaming genome.rev.1.bt2.tmp to genome.rev.1.bt2Renaming genome.rev.2.bt2.tmp to genome.rev.2.bt2100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      8 (8.25%) aligned discordantly 1 time    ----    89 pairs aligned 0 times concordantly or discordantly; of these:      178 mates make up the pairs; of these:        153 (85.96%) aligned 0 times        25 (14.04%) aligned exactly 1 time        0 (0.00%) aligned >1 times23.50% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #8)" name="7" time="20.92143225669861">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 20.92143225669861, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #9)" name="8" time="34.60016751289368">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "analysis_type|analysis_type_selector": "simple",  "library|input_1": {   "id": "9f0544eba807dd1c",   "src": "hda"  },  "library|input_2": {   "id": "53bd264bc346fb0b",   "src": "hda"  },  "library|paired_options|paired_options_selector": "no",  "library|type": "paired",  "library|unaligned_file": false,  "reference_genome|own_file": {   "id": "b23eae0c014b117a",   "src": "hda"  },  "reference_genome|source": "history",  "sam_options|reorder": true,  "sam_options|sam_options_selector": "yes" }, "job": {  "command_line": "set -o | grep -q pipefail \u0026\u0026 set -o pipefail; bowtie2-build --threads ${GALAXY_SLOTS:-4} \u0027/galaxy/server/database/objects/7/2/c/dataset_72ce7c3e-c81b-409f-ab5c-0ac23b7fb471.dat\u0027 genome \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/7/2/c/dataset_72ce7c3e-c81b-409f-ab5c-0ac23b7fb471.dat\u0027 genome.fa \u0026\u0026   ln -f -s \u0027/galaxy/server/database/objects/1/3/4/dataset_1346f832-0d35-4816-9443-9d3708c694a0.dat\u0027 input_f.fasta \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/0/8/0/dataset_0804d7a8-a3f5-4eb7-a649-98d2ad604507.dat\u0027 input_r.fasta \u0026\u0026   THREADS=${GALAXY_SLOTS:-4} \u0026\u0026 if [ \"$THREADS\" -gt 1 ]; then (( THREADS-- )); fi \u0026\u0026   bowtie2  -p \"$THREADS\"  -x \u0027genome\u0027  -f  -1 \u0027input_f.fasta\u0027 -2 \u0027input_r.fasta\u0027                    --reorder   | samtools view --no-PG -b -o \u0027/galaxy/server/database/objects/b/f/3/dataset_bf346f93-70f8-4868-8570-5a5f67b24c7c.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T18:52:02.910409",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-zh5dg",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "b23eae0c014b117a",  "inputs": {   "library|input_1": {    "id": "9f0544eba807dd1c",    "src": "hda",    "uuid": "1346f832-0d35-4816-9443-9d3708c694a0"   },   "library|input_2": {    "id": "53bd264bc346fb0b",    "src": "hda",    "uuid": "0804d7a8-a3f5-4eb7-a649-98d2ad604507"   },   "reference_genome|own_file": {    "id": "b23eae0c014b117a",    "src": "hda",    "uuid": "72ce7c3e-c81b-409f-ab5c-0ac23b7fb471"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "00a4a37b56cf01a1",    "src": "hda",    "uuid": "bf346f93-70f8-4868-8570-5a5f67b24c7c"   }  },  "params": {   "__input_ext": "\"input\"",   "analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "library": "{\"__current_case__\": 1, \"aligned_file\": false, \"input_1\": {\"values\": [{\"id\": 74, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 75, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": false}",   "reference_genome": "{\"__current_case__\": 1, \"own_file\": {\"values\": [{\"id\": 76, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",   "sam_options": "{\"__current_case__\": 0, \"no_unal\": false, \"omit_sec_seq\": false, \"reorder\": true, \"sam_no_qname_trunc\": false, \"sam_opt\": false, \"sam_options_selector\": \"yes\", \"soft_clipped_unmapped_tlen\": false, \"xeq\": false}",   "save_mapping_stats": "false"  },  "state": "error",  "stderr": "Building a SMALL index\nRenaming genome.3.bt2.tmp to genome.3.bt2\nRenaming genome.4.bt2.tmp to genome.4.bt2\nRenaming genome.1.bt2.tmp to genome.1.bt2\nRenaming genome.2.bt2.tmp to genome.2.bt2\nRenaming genome.rev.1.bt2.tmp to genome.rev.1.bt2\nRenaming genome.rev.2.bt2.tmp to genome.rev.2.bt2\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n22.00% overall alignment rate\n",  "stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/7/2/c/dataset_72ce7c3e-c81b-409f-ab5c-0ac23b7fb471.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\nGetting block 2 of 58\n  Reserving size (388) for bucket 1\n  Reserving size (388) for bucket 2\n  Calculating Z arrays for bucket 1\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\n  Calculating Z arrays for bucket 2\nGetting block 6 of 58\n  Entering block accumulator loop for bucket 1:\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\nGetting block 7 of 58\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Reserving size (388) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 3:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  bucket 2: 10%\n  Entering block accumulator loop for bucket 7:\n  bucket 1: 20%\n  bucket 3: 10%\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 4: 10%\n  bucket 1: 30%\n  bucket 7: 10%\n  bucket 2: 30%\n  bucket 3: 20%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 1: 40%\n  bucket 4: 20%\n  bucket 2: 40%\n  bucket 7: 20%\n  bucket 3: 30%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 1: 50%\n  bucket 4: 30%\n  bucket 2: 50%\n  bucket 3: 40%\n  bucket 7: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 5: 50%\n  bucket 7: 40%\n  bucket 1: 70%\n  bucket 6: 50%\n  bucket 2: 70%\n  bucket 4: 50%\n  bucket 5: 60%\n  bucket 3: 60%\n  bucket 1: 80%\n  bucket 7: 50%\n  bucket 2: 80%\n  bucket 6: 60%\n  bucket 4: 60%\n  bucket 5: 70%\n  bucket 3: 70%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 7: 60%\n  bucket 6: 70%\n  bucket 4: 70%\n  bucket 5: 80%\n  bucket 3: 80%\n  bucket 2: 100%\n  bucket 1: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 6: 80%\n  bucket 7: 70%\n  bucket 4: 80%\n  bucket 5: 90%\n  bucket 3: 90%\n  bucket 6: 90%\n  bucket 7: 80%\n  bucket 5: 100%\n  bucket 3: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 4: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 90%\n  bucket 4: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\nGetting block 8 of 58\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\n  bucket 8: 10%\n  Entering block accumulator loop for bucket 9:\n  bucket 8: 20%\n  bucket 9: 10%\n  bucket 8: 30%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 8: 40%\n  bucket 9: 40%\n  bucket 8: 50%\n  bucket 9: 50%\n  bucket 8: 60%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 8: 70%\n  bucket 9: 80%\n  bucket 8: 80%\n  bucket 9: 90%\n  bucket 8: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 10 of 58\n  Reserving size (388) for bucket 10\nGetting block 11 of 58\n  Calculating Z arrays for bucket 10\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 10:\n  Entering block accumulator loop for bucket 11:\n  bucket 10: 10%\n  bucket 11: 10%\n  bucket 10: 20%\n  bucket 11: 20%\n  bucket 10: 30%\n  bucket 11: 30%\n  bucket 10: 40%\n  bucket 11: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 11: 50%\n  bucket 10: 70%\n  bucket 11: 60%\n  bucket 10: 80%\n  bucket 11: 70%\n  bucket 10: 90%\n  bucket 11: 80%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 20%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 13: 10%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 13: 20%\n  bucket 12: 70%\n  bucket 13: 30%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 13: 40%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\nGetting block 15 of 58\n  bucket 14: 10%\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 20%\n  bucket 15: 10%\n  bucket 14: 30%\n  bucket 15: 20%\n  bucket 14: 40%\n  bucket 15: 30%\n  bucket 14: 50%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 14: 60%\n  bucket 15: 60%\n  bucket 14: 70%\n  bucket 15: 70%\n  bucket 14: 80%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 14: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 16 of 58\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 16:\n  bucket 16: 10%\n  bucket 16: 20%\n  bucket 16: 30%\n  bucket 16: 40%\n  bucket 16: 50%\n  bucket 16: 60%\n  bucket 16: 70%\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 17:\n  bucket 17: 10%\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\n  bucket 18: 10%\n  bucket 17: 20%\n  bucket 18: 20%\n  bucket 17: 30%\n  bucket 18: 30%\n  bucket 17: 40%\n  bucket 18: 40%\n  bucket 17: 50%\n  bucket 17: 60%\n  bucket 18: 50%\n  bucket 17: 70%\n  bucket 18: 60%\n  bucket 17: 80%\n  bucket 18: 70%\n  bucket 17: 90%\n  bucket 18: 80%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 90%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 19:\n  bucket 19: 10%\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  bucket 19: 20%\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 19: 30%\n  bucket 20: 20%\n  bucket 19: 40%\n  bucket 20: 30%\n  bucket 19: 50%\n  bucket 20: 40%\n  bucket 19: 60%\n  bucket 20: 50%\n  bucket 19: 70%\n  bucket 19: 80%\n  bucket 20: 60%\n  bucket 19: 90%\n  bucket 20: 70%\n  bucket 19: 100%\n  bucket 20: 80%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  Entering block accumulator loop for bucket 21:\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 22: 10%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 21: 30%\n  bucket 22: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 22: 40%\n  bucket 21: 60%\n  bucket 21: 70%\n  bucket 22: 50%\n  bucket 21: 80%\n  bucket 22: 60%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 70%\n  bucket 22: 80%\n  bucket 22: 90%\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 23: 80%\n  bucket 23: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Entering block accumulator loop for bucket 25:\n  bucket 25: 10%\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 25: 30%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 24: 50%\n  bucket 25: 50%\n  bucket 24: 60%\n  bucket 25: 60%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 24: 70%\n  bucket 25: 90%\n  bucket 24: 80%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\nGetting block 27 of 58\n  Calculating Z arrays for bucket 26\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 26: 20%\n  bucket 27: 10%\n  bucket 26: 30%\n  bucket 27: 20%\n  bucket 26: 40%\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 27: 50%\n  bucket 26: 60%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 26: 70%\n  bucket 27: 80%\n  bucket 26: 80%\n  bucket 27: 90%\n  bucket 26: 90%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 28: 10%\n  bucket 28: 20%\nGetting block 29 of 58\n  bucket 28: 30%\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\nGetting block 30 of 58\n  Entering block accumulator loop for bucket 29:\n  Reserving size (388) for bucket 30\n  bucket 28: 40%\n  Calculating Z arrays for bucket 30\n  bucket 28: 50%\n  Entering block accumulator loop for bucket 30:\n  bucket 29: 10%\n  bucket 28: 60%\n  bucket 29: 20%\n  bucket 30: 10%\n  bucket 28: 70%\n  bucket 29: 30%\n  bucket 28: 80%\n  bucket 30: 20%\n  bucket 29: 40%\n  bucket 28: 90%\n  bucket 30: 30%\n  bucket 29: 50%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 60%\n  bucket 30: 40%\n  bucket 29: 70%\n  bucket 30: 50%\n  bucket 29: 80%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  bucket 30: 60%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 30: 70%\n  bucket 30: 80%\n  Sorting block time: 00:00:00\n  bucket 30: 90%\nReturning block of 290 for bucket 29\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 32: 10%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 32: 20%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 32: 30%\n  bucket 31: 80%\n  bucket 32: 40%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for buck\n..\n0:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 57\n  Entering block accumulator loop for bucket 24:\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 25: 10%\n  bucket 25: 20%\n  bucket 24: 20%\n  bucket 25: 30%\n  bucket 24: 30%\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 24: 40%\n  bucket 25: 60%\n  bucket 24: 50%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 24: 60%\n  bucket 25: 90%\n  bucket 24: 70%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 26: 10%\n  bucket 26: 20%\n  bucket 26: 30%\n  bucket 26: 40%\n  bucket 26: 50%\n  bucket 26: 60%\n  bucket 26: 70%\n  bucket 26: 80%\n  bucket 26: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 27: 20%\n  bucket 28: 20%\n  bucket 27: 30%\n  bucket 28: 30%\n  bucket 27: 40%\n  bucket 28: 40%\n  bucket 27: 50%\n  bucket 28: 50%\n  bucket 28: 60%\n  bucket 27: 60%\n  bucket 28: 70%\n  bucket 27: 70%\n  bucket 28: 80%\n  bucket 27: 80%\n  bucket 28: 90%\n  bucket 27: 90%\n  bucket 28: 100%\n  bucket 27: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 29:\n  Entering block accumulator loop for bucket 30:\n  bucket 29: 10%\n  bucket 30: 10%\n  bucket 29: 20%\n  bucket 30: 20%\n  bucket 29: 30%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 30: 60%\n  bucket 29: 70%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 30: 80%\n  bucket 29: 90%\n  bucket 30: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\nGetting block 32 of 57\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 32: 10%\n  bucket 31: 20%\n  bucket 32: 20%\n  bucket 31: 30%\n  bucket 32: 30%\n  bucket 31: 40%\n  bucket 32: 40%\n  bucket 31: 50%\n  bucket 32: 50%\n  bucket 31: 60%\n  bucket 32: 60%\n  bucket 31: 70%\n  bucket 32: 70%\n  bucket 31: 80%\n  bucket 32: 80%\n  bucket 31: 90%\n  bucket 32: 90%\n  bucket 31: 100%\n  bucket 32: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 10%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 20%\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 33: 30%\n  bucket 34: 30%\n  bucket 33: 40%\n  bucket 34: 40%\n  bucket 33: 50%\n  bucket 34: 50%\n  bucket 33: 60%\n  bucket 33: 70%\n  bucket 34: 60%\n  bucket 33: 80%\n  bucket 34: 70%\n  bucket 33: 90%\n  bucket 34: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\nGetting block 37 of 57\n  Calculating Z arrays for bucket 36\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 36:\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 10%\n  bucket 37: 10%\n  bucket 36: 20%\n  bucket 37: 20%\n  bucket 36: 30%\n  bucket 37: 30%\n  bucket 36: 40%\n  bucket 37: 40%\n  bucket 36: 50%\n  bucket 37: 50%\n  bucket 36: 60%\n  bucket 37: 60%\n  bucket 36: 70%\n  bucket 37: 70%\n  bucket 36: 80%\n  bucket 37: 80%\n  bucket 36: 90%\n  bucket 37: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\nGetting block 39 of 57\n  bucket 38: 20%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 39: 10%\n  bucket 38: 50%\n  bucket 39: 20%\n  bucket 38: 60%\n  bucket 39: 30%\n  bucket 38: 70%\n  bucket 39: 40%\n  bucket 38: 80%\n  bucket 39: 50%\n  bucket 38: 90%\n  bucket 39: 60%\n  bucket 39: 70%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 80%\n  bucket 39: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\n  bucket 40: 20%\n  bucket 40: 30%\n  bucket 40: 40%\n  bucket 40: 50%\n  bucket 40: 60%\n  bucket 40: 70%\n  bucket 40: 80%\n  bucket 40: 90%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 41: 10%\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  bucket 41: 20%\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 41: 30%\n  bucket 42: 20%\n  bucket 41: 40%\n  bucket 42: 30%\n  bucket 41: 50%\n  bucket 42: 40%\n  bucket 41: 60%\n  bucket 42: 50%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 42: 70%\n  bucket 41: 80%\n  bucket 41: 90%\n  bucket 42: 80%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\nGetting block 44 of 57\n  Calculating Z arrays for bucket 43\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 43:\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 10%\n  bucket 44: 10%\n  bucket 43: 20%\n  bucket 44: 20%\n  bucket 43: 30%\n  bucket 44: 30%\n  bucket 43: 40%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 43: 80%\n  bucket 44: 80%\n  bucket 43: 90%\n  bucket 44: 90%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\nGetting block 46 of 57\n  bucket 45: 10%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 46: 10%\n  bucket 45: 40%\n  bucket 46: 20%\n  bucket 45: 50%\n  bucket 46: 30%\n  bucket 45: 60%\n  bucket 46: 40%\n  bucket 45: 70%\n  bucket 46: 50%\n  bucket 45: 80%\n  bucket 46: 60%\n  bucket 45: 90%\n  bucket 46: 70%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 48: 10%\n  bucket 47: 30%\n  bucket 48: 20%\n  bucket 48: 30%\n  bucket 47: 40%\n  bucket 47: 50%\n  bucket 48: 40%\n  bucket 47: 60%\n  bucket 48: 50%\n  bucket 47: 70%\n  bucket 47: 80%\n  bucket 48: 60%\n  bucket 47: 90%\n  bucket 48: 70%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 80%\n  bucket 48: 90%\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 49:\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 10%\n  bucket 50: 10%\n  bucket 49: 20%\n  bucket 50: 20%\n  bucket 49: 30%\n  bucket 50: 30%\n  bucket 49: 40%\n  bucket 50: 40%\n  bucket 49: 50%\n  bucket 50: 50%\n  bucket 50: 60%\n  bucket 49: 60%\n  bucket 50: 70%\n  bucket 49: 70%\n  bucket 50: 80%\n  bucket 49: 80%\n  bucket 50: 90%\n  bucket 49: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\nGetting block 53 of 57\n  Calculating Z arrays for bucket 52\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 52:\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 10%\n  bucket 53: 10%\n  bucket 52: 20%\n  bucket 53: 20%\n  bucket 52: 30%\n  bucket 53: 30%\n  bucket 52: 40%\n  bucket 53: 40%\n  bucket 52: 50%\n  bucket 53: 50%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 53: 60%\n  bucket 52: 80%\n  bucket 53: 70%\n  bucket 52: 90%\n  bucket 53: 80%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 53: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\nGetting block 56 of 57\n  bucket 54: 20%\n  Calculating Z arrays for bucket 55\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 55:\n  Entering block accumulator loop for bucket 56:\n  bucket 54: 30%\n  bucket 55: 10%\n  bucket 54: 40%\n  bucket 56: 10%\n  bucket 55: 20%\n  bucket 54: 50%\n  bucket 56: 20%\n  bucket 55: 30%\n  bucket 54: 60%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 55: 50%\n  bucket 56: 40%\n  bucket 54: 90%\n  bucket 55: 60%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 56: 50%\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 56: 60%\n  bucket 55: 90%\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  bucket 56: 70%\n  bucket 56: 80%\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\n  bucket 56: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmp\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmp\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.5.3+galaxy1",  "tool_stderr": "Building a SMALL index\nRenaming genome.3.bt2.tmp to genome.3.bt2\nRenaming genome.4.bt2.tmp to genome.4.bt2\nRenaming genome.1.bt2.tmp to genome.1.bt2\nRenaming genome.2.bt2.tmp to genome.2.bt2\nRenaming genome.rev.1.bt2.tmp to genome.rev.1.bt2\nRenaming genome.rev.2.bt2.tmp to genome.rev.2.bt2\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n22.00% overall alignment rate\n",  "tool_stdout": "Settings:\n  Output files: \"genome.*.bt2\"\n  Line rate: 6 (line is 64 bytes)\n  Lines per side: 1 (side is 64 bytes)\n  Offset rate: 4 (one in 16)\n  FTable chars: 10\n  Strings: unpacked\n  Max bucket size: default\n  Max bucket size, sqrt multiplier: default\n  Max bucket size, len divisor: 32\n  Difference-cover sample period: 1024\n  Endianness: little\n  Actual local endianness: little\n  Sanity checking: disabled\n  Assertions: disabled\n  Random seed: 0\n  Sizeofs: void*:8, int:4, long:8, size_t:8\nInput files DNA, FASTA:\n  /galaxy/server/database/objects/7/2/c/dataset_72ce7c3e-c81b-409f-ab5c-0ac23b7fb471.dat\nReading reference sizes\n  Time reading reference sizes: 00:00:00\nCalculating joined length\nWriting header\nReserving space for joined string\nJoining reference sequences\n  Time to join reference sequences: 00:00:00\nbmax according to bmaxDivN setting: 517\nUsing parameters --bmax 388 --dcv 1024\n  Doing ahead-of-time memory usage test\n  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024\nConstructing suffix-array element generator\nBuilding DifferenceCoverSample\n  Building sPrime\n  Building sPrimeOrder\n  V-Sorting samples\n  V-Sorting samples time: 00:00:00\n  Allocating rank array\n  Ranking v-sort output\n  Ranking v-sort output time: 00:00:00\n  Invoking Larsson-Sadakane on ranks\n  Invoking Larsson-Sadakane on ranks time: 00:00:00\n  Sanity-checking and returning\nBuilding samples\nReserving space for 86 sample suffixes\nGenerating random suffixes\nQSorting 86 sample offsets, eliminating duplicates\nQSorting sample offsets, eliminating duplicates time: 00:00:00\nMultikey QSorting 86 samples\n  (Using difference cover)\n  Multikey QSorting samples time: 00:00:00\nCalculating bucket sizes\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 12, merged 41; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 6, merged 6; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 5, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nSplit 3, merged 3; iterating...\nSplitting and merging\n  Splitting and merging time: 00:00:00\nAvg bucket size: 284.672 (target: 387)\nConverting suffix-array elements to index image\nAllocating ftab, absorbFtab\nEntering Ebwt loop\nGetting block 1 of 58\nGetting block 2 of 58\n  Reserving size (388) for bucket 1\n  Reserving size (388) for bucket 2\n  Calculating Z arrays for bucket 1\nGetting block 3 of 58\nGetting block 4 of 58\nGetting block 5 of 58\n  Calculating Z arrays for bucket 2\nGetting block 6 of 58\n  Entering block accumulator loop for bucket 1:\n  Reserving size (388) for bucket 3\n  Reserving size (388) for bucket 4\n  Reserving size (388) for bucket 5\n  Reserving size (388) for bucket 6\nGetting block 7 of 58\n  Entering block accumulator loop for bucket 2:\n  Calculating Z arrays for bucket 3\n  Calculating Z arrays for bucket 4\n  Calculating Z arrays for bucket 5\n  Calculating Z arrays for bucket 6\n  Reserving size (388) for bucket 7\n  Calculating Z arrays for bucket 7\n  Entering block accumulator loop for bucket 3:\n  bucket 1: 10%\n  Entering block accumulator loop for bucket 5:\n  Entering block accumulator loop for bucket 4:\n  Entering block accumulator loop for bucket 6:\n  bucket 2: 10%\n  Entering block accumulator loop for bucket 7:\n  bucket 1: 20%\n  bucket 3: 10%\n  bucket 5: 10%\n  bucket 6: 10%\n  bucket 2: 20%\n  bucket 4: 10%\n  bucket 1: 30%\n  bucket 7: 10%\n  bucket 2: 30%\n  bucket 3: 20%\n  bucket 5: 20%\n  bucket 6: 20%\n  bucket 1: 40%\n  bucket 4: 20%\n  bucket 2: 40%\n  bucket 7: 20%\n  bucket 3: 30%\n  bucket 5: 30%\n  bucket 6: 30%\n  bucket 1: 50%\n  bucket 4: 30%\n  bucket 2: 50%\n  bucket 3: 40%\n  bucket 7: 30%\n  bucket 5: 40%\n  bucket 6: 40%\n  bucket 1: 60%\n  bucket 2: 60%\n  bucket 4: 40%\n  bucket 3: 50%\n  bucket 5: 50%\n  bucket 7: 40%\n  bucket 1: 70%\n  bucket 6: 50%\n  bucket 2: 70%\n  bucket 4: 50%\n  bucket 5: 60%\n  bucket 3: 60%\n  bucket 1: 80%\n  bucket 7: 50%\n  bucket 2: 80%\n  bucket 6: 60%\n  bucket 4: 60%\n  bucket 5: 70%\n  bucket 3: 70%\n  bucket 2: 90%\n  bucket 1: 90%\n  bucket 7: 60%\n  bucket 6: 70%\n  bucket 4: 70%\n  bucket 5: 80%\n  bucket 3: 80%\n  bucket 2: 100%\n  bucket 1: 100%\n  Sorting block of length 165 for bucket 2\n  (Using difference cover)\n  Sorting block of length 355 for bucket 1\n  (Using difference cover)\n  bucket 6: 80%\n  bucket 7: 70%\n  bucket 4: 80%\n  bucket 5: 90%\n  bucket 3: 90%\n  bucket 6: 90%\n  bucket 7: 80%\n  bucket 5: 100%\n  bucket 3: 100%\n  Sorting block of length 203 for bucket 5\n  (Using difference cover)\n  bucket 4: 90%\n  Sorting block of length 370 for bucket 3\n  (Using difference cover)\n  bucket 6: 100%\n  Sorting block of length 339 for bucket 6\n  (Using difference cover)\n  bucket 7: 90%\n  bucket 4: 100%\n  Sorting block of length 328 for bucket 4\n  (Using difference cover)\n  bucket 7: 100%\n  Sorting block of length 368 for bucket 7\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 204 for bucket 5\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 3\n  Sorting block time: 00:00:00\nReturning block of 356 for bucket 1\n  Sorting block time: 00:00:00\nReturning block of 166 for bucket 2\n  Sorting block time: 00:00:00\nReturning block of 329 for bucket 4\n  Sorting block time: 00:00:00\nReturning block of 369 for bucket 7\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 6\nGetting block 8 of 58\n  Reserving size (388) for bucket 8\n  Calculating Z arrays for bucket 8\n  Entering block accumulator loop for bucket 8:\nGetting block 9 of 58\n  Reserving size (388) for bucket 9\n  Calculating Z arrays for bucket 9\n  bucket 8: 10%\n  Entering block accumulator loop for bucket 9:\n  bucket 8: 20%\n  bucket 9: 10%\n  bucket 8: 30%\n  bucket 9: 20%\n  bucket 9: 30%\n  bucket 8: 40%\n  bucket 9: 40%\n  bucket 8: 50%\n  bucket 9: 50%\n  bucket 8: 60%\n  bucket 9: 60%\n  bucket 9: 70%\n  bucket 8: 70%\n  bucket 9: 80%\n  bucket 8: 80%\n  bucket 9: 90%\n  bucket 8: 90%\n  bucket 9: 100%\n  Sorting block of length 339 for bucket 9\n  (Using difference cover)\n  bucket 8: 100%\n  Sorting block of length 171 for bucket 8\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 9\n  Sorting block time: 00:00:00\nReturning block of 172 for bucket 8\nGetting block 10 of 58\n  Reserving size (388) for bucket 10\nGetting block 11 of 58\n  Calculating Z arrays for bucket 10\n  Reserving size (388) for bucket 11\n  Calculating Z arrays for bucket 11\n  Entering block accumulator loop for bucket 10:\n  Entering block accumulator loop for bucket 11:\n  bucket 10: 10%\n  bucket 11: 10%\n  bucket 10: 20%\n  bucket 11: 20%\n  bucket 10: 30%\n  bucket 11: 30%\n  bucket 10: 40%\n  bucket 11: 40%\n  bucket 10: 50%\n  bucket 10: 60%\n  bucket 11: 50%\n  bucket 10: 70%\n  bucket 11: 60%\n  bucket 10: 80%\n  bucket 11: 70%\n  bucket 10: 90%\n  bucket 11: 80%\n  bucket 10: 100%\n  Sorting block of length 357 for bucket 10\n  (Using difference cover)\n  bucket 11: 90%\n  bucket 11: 100%\n  Sorting block of length 305 for bucket 11\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 358 for bucket 10\n  Sorting block time: 00:00:00\nReturning block of 306 for bucket 11\nGetting block 12 of 58\n  Reserving size (388) for bucket 12\n  Calculating Z arrays for bucket 12\n  Entering block accumulator loop for bucket 12:\n  bucket 12: 10%\nGetting block 13 of 58\n  Reserving size (388) for bucket 13\n  Calculating Z arrays for bucket 13\n  bucket 12: 20%\n  Entering block accumulator loop for bucket 13:\n  bucket 12: 30%\n  bucket 12: 40%\n  bucket 13: 10%\n  bucket 12: 50%\n  bucket 12: 60%\n  bucket 13: 20%\n  bucket 12: 70%\n  bucket 13: 30%\n  bucket 12: 80%\n  bucket 12: 90%\n  bucket 13: 40%\n  bucket 12: 100%\n  Sorting block of length 185 for bucket 12\n  (Using difference cover)\n  bucket 13: 50%\n  bucket 13: 60%\n  bucket 13: 70%\n  Sorting block time: 00:00:00\nReturning block of 186 for bucket 12\n  bucket 13: 80%\n  bucket 13: 90%\n  bucket 13: 100%\n  Sorting block of length 282 for bucket 13\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 283 for bucket 13\nGetting block 14 of 58\n  Reserving size (388) for bucket 14\n  Calculating Z arrays for bucket 14\n  Entering block accumulator loop for bucket 14:\nGetting block 15 of 58\n  bucket 14: 10%\n  Reserving size (388) for bucket 15\n  Calculating Z arrays for bucket 15\n  Entering block accumulator loop for bucket 15:\n  bucket 14: 20%\n  bucket 15: 10%\n  bucket 14: 30%\n  bucket 15: 20%\n  bucket 14: 40%\n  bucket 15: 30%\n  bucket 14: 50%\n  bucket 15: 40%\n  bucket 15: 50%\n  bucket 14: 60%\n  bucket 15: 60%\n  bucket 14: 70%\n  bucket 15: 70%\n  bucket 14: 80%\n  bucket 15: 80%\n  bucket 15: 90%\n  bucket 14: 90%\n  bucket 15: 100%\n  Sorting block of length 241 for bucket 15\n  (Using difference cover)\n  bucket 14: 100%\n  Sorting block of length 339 for bucket 14\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 242 for bucket 15\n  Sorting block time: 00:00:00\nReturning block of 340 for bucket 14\nGetting block 16 of 58\n  Reserving size (388) for bucket 16\n  Calculating Z arrays for bucket 16\n  Entering block accumulator loop for bucket 16:\n  bucket 16: 10%\n  bucket 16: 20%\n  bucket 16: 30%\n  bucket 16: 40%\n  bucket 16: 50%\n  bucket 16: 60%\n  bucket 16: 70%\n  bucket 16: 80%\n  bucket 16: 90%\n  bucket 16: 100%\n  Sorting block of length 379 for bucket 16\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 16\nGetting block 17 of 58\n  Reserving size (388) for bucket 17\n  Calculating Z arrays for bucket 17\n  Entering block accumulator loop for bucket 17:\n  bucket 17: 10%\nGetting block 18 of 58\n  Reserving size (388) for bucket 18\n  Calculating Z arrays for bucket 18\n  Entering block accumulator loop for bucket 18:\n  bucket 18: 10%\n  bucket 17: 20%\n  bucket 18: 20%\n  bucket 17: 30%\n  bucket 18: 30%\n  bucket 17: 40%\n  bucket 18: 40%\n  bucket 17: 50%\n  bucket 17: 60%\n  bucket 18: 50%\n  bucket 17: 70%\n  bucket 18: 60%\n  bucket 17: 80%\n  bucket 18: 70%\n  bucket 17: 90%\n  bucket 18: 80%\n  bucket 17: 100%\n  Sorting block of length 215 for bucket 17\n  (Using difference cover)\n  bucket 18: 90%\n  bucket 18: 100%\n  Sorting block of length 378 for bucket 18\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 216 for bucket 17\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 18\nGetting block 19 of 58\n  Reserving size (388) for bucket 19\n  Calculating Z arrays for bucket 19\n  Entering block accumulator loop for bucket 19:\n  bucket 19: 10%\nGetting block 20 of 58\n  Reserving size (388) for bucket 20\n  Calculating Z arrays for bucket 20\n  bucket 19: 20%\n  Entering block accumulator loop for bucket 20:\n  bucket 20: 10%\n  bucket 19: 30%\n  bucket 20: 20%\n  bucket 19: 40%\n  bucket 20: 30%\n  bucket 19: 50%\n  bucket 20: 40%\n  bucket 19: 60%\n  bucket 20: 50%\n  bucket 19: 70%\n  bucket 19: 80%\n  bucket 20: 60%\n  bucket 19: 90%\n  bucket 20: 70%\n  bucket 19: 100%\n  bucket 20: 80%\n  Sorting block of length 334 for bucket 19\n  (Using difference cover)\n  bucket 20: 90%\n  bucket 20: 100%\n  Sorting block of length 313 for bucket 20\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 19\n  Sorting block time: 00:00:00\nReturning block of 314 for bucket 20\nGetting block 21 of 58\n  Reserving size (388) for bucket 21\n  Calculating Z arrays for bucket 21\nGetting block 22 of 58\n  Reserving size (388) for bucket 22\n  Calculating Z arrays for bucket 22\n  Entering block accumulator loop for bucket 21:\n  Entering block accumulator loop for bucket 22:\n  bucket 21: 10%\n  bucket 22: 10%\n  bucket 21: 20%\n  bucket 22: 20%\n  bucket 21: 30%\n  bucket 22: 30%\n  bucket 21: 40%\n  bucket 21: 50%\n  bucket 22: 40%\n  bucket 21: 60%\n  bucket 21: 70%\n  bucket 22: 50%\n  bucket 21: 80%\n  bucket 22: 60%\n  bucket 21: 90%\n  bucket 21: 100%\n  Sorting block of length 210 for bucket 21\n  (Using difference cover)\n  bucket 22: 70%\n  bucket 22: 80%\n  bucket 22: 90%\n  Sorting block time: 00:00:00\nReturning block of 211 for bucket 21\n  bucket 22: 100%\n  Sorting block of length 386 for bucket 22\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 387 for bucket 22\nGetting block 23 of 58\n  Reserving size (388) for bucket 23\n  Calculating Z arrays for bucket 23\n  Entering block accumulator loop for bucket 23:\n  bucket 23: 10%\n  bucket 23: 20%\n  bucket 23: 30%\n  bucket 23: 40%\n  bucket 23: 50%\n  bucket 23: 60%\n  bucket 23: 70%\n  bucket 23: 80%\n  bucket 23: 90%\n  bucket 23: 100%\n  Sorting block of length 238 for bucket 23\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 239 for bucket 23\nGetting block 24 of 58\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 58\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 24:\n  Entering block accumulator loop for bucket 25:\n  bucket 25: 10%\n  bucket 24: 10%\n  bucket 24: 20%\n  bucket 25: 20%\n  bucket 24: 30%\n  bucket 25: 30%\n  bucket 24: 40%\n  bucket 25: 40%\n  bucket 24: 50%\n  bucket 25: 50%\n  bucket 24: 60%\n  bucket 25: 60%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 24: 70%\n  bucket 25: 90%\n  bucket 24: 80%\n  bucket 25: 100%\n  Sorting block of length 105 for bucket 25\n  (Using difference cover)\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 351 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 106 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 352 for bucket 24\nGetting block 26 of 58\n  Reserving size (388) for bucket 26\nGetting block 27 of 58\n  Calculating Z arrays for bucket 26\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 26:\n  Entering block accumulator loop for bucket 27:\n  bucket 26: 10%\n  bucket 26: 20%\n  bucket 27: 10%\n  bucket 26: 30%\n  bucket 27: 20%\n  bucket 26: 40%\n  bucket 27: 30%\n  bucket 27: 40%\n  bucket 26: 50%\n  bucket 27: 50%\n  bucket 26: 60%\n  bucket 27: 60%\n  bucket 27: 70%\n  bucket 26: 70%\n  bucket 27: 80%\n  bucket 26: 80%\n  bucket 27: 90%\n  bucket 26: 90%\n  bucket 27: 100%\n  Sorting block of length 334 for bucket 27\n  (Using difference cover)\n  bucket 26: 100%\n  Sorting block of length 354 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 335 for bucket 27\n  Sorting block time: 00:00:00\nReturning block of 355 for bucket 26\nGetting block 28 of 58\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 28: 10%\n  bucket 28: 20%\nGetting block 29 of 58\n  bucket 28: 30%\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\nGetting block 30 of 58\n  Entering block accumulator loop for bucket 29:\n  Reserving size (388) for bucket 30\n  bucket 28: 40%\n  Calculating Z arrays for bucket 30\n  bucket 28: 50%\n  Entering block accumulator loop for bucket 30:\n  bucket 29: 10%\n  bucket 28: 60%\n  bucket 29: 20%\n  bucket 30: 10%\n  bucket 28: 70%\n  bucket 29: 30%\n  bucket 28: 80%\n  bucket 30: 20%\n  bucket 29: 40%\n  bucket 28: 90%\n  bucket 30: 30%\n  bucket 29: 50%\n  bucket 28: 100%\n  Sorting block of length 253 for bucket 28\n  (Using difference cover)\n  bucket 29: 60%\n  bucket 30: 40%\n  bucket 29: 70%\n  bucket 30: 50%\n  bucket 29: 80%\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 28\n  bucket 30: 60%\n  bucket 29: 90%\n  bucket 29: 100%\n  Sorting block of length 289 for bucket 29\n  (Using difference cover)\n  bucket 30: 70%\n  bucket 30: 80%\n  Sorting block time: 00:00:00\n  bucket 30: 90%\nReturning block of 290 for bucket 29\n  bucket 30: 100%\n  Sorting block of length 345 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 346 for bucket 30\nGetting block 31 of 58\n  Reserving size (388) for bucket 31\n  Calculating Z arrays for bucket 31\n  Entering block accumulator loop for bucket 31:\n  bucket 31: 10%\nGetting block 32 of 58\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 20%\n  bucket 31: 30%\n  bucket 32: 10%\n  bucket 31: 40%\n  bucket 31: 50%\n  bucket 32: 20%\n  bucket 31: 60%\n  bucket 31: 70%\n  bucket 32: 30%\n  bucket 31: 80%\n  bucket 32: 40%\n  bucket 31: 90%\n  bucket 31: 100%\n  Sorting block of length 377 for buck\n..\n0:00\nReturning block of 350 for bucket 23\nGetting block 24 of 57\n  Reserving size (388) for bucket 24\n  Calculating Z arrays for bucket 24\nGetting block 25 of 57\n  Entering block accumulator loop for bucket 24:\n  Reserving size (388) for bucket 25\n  Calculating Z arrays for bucket 25\n  Entering block accumulator loop for bucket 25:\n  bucket 24: 10%\n  bucket 25: 10%\n  bucket 25: 20%\n  bucket 24: 20%\n  bucket 25: 30%\n  bucket 24: 30%\n  bucket 25: 40%\n  bucket 25: 50%\n  bucket 24: 40%\n  bucket 25: 60%\n  bucket 24: 50%\n  bucket 25: 70%\n  bucket 25: 80%\n  bucket 24: 60%\n  bucket 25: 90%\n  bucket 24: 70%\n  bucket 25: 100%\n  Sorting block of length 286 for bucket 25\n  (Using difference cover)\n  bucket 24: 80%\n  bucket 24: 90%\n  bucket 24: 100%\n  Sorting block of length 245 for bucket 24\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 287 for bucket 25\n  Sorting block time: 00:00:00\nReturning block of 246 for bucket 24\nGetting block 26 of 57\n  Reserving size (388) for bucket 26\n  Calculating Z arrays for bucket 26\n  Entering block accumulator loop for bucket 26:\n  bucket 26: 10%\n  bucket 26: 20%\n  bucket 26: 30%\n  bucket 26: 40%\n  bucket 26: 50%\n  bucket 26: 60%\n  bucket 26: 70%\n  bucket 26: 80%\n  bucket 26: 90%\n  bucket 26: 100%\n  Sorting block of length 384 for bucket 26\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 26\nGetting block 27 of 57\n  Reserving size (388) for bucket 27\n  Calculating Z arrays for bucket 27\n  Entering block accumulator loop for bucket 27:\nGetting block 28 of 57\n  Reserving size (388) for bucket 28\n  Calculating Z arrays for bucket 28\n  Entering block accumulator loop for bucket 28:\n  bucket 27: 10%\n  bucket 28: 10%\n  bucket 27: 20%\n  bucket 28: 20%\n  bucket 27: 30%\n  bucket 28: 30%\n  bucket 27: 40%\n  bucket 28: 40%\n  bucket 27: 50%\n  bucket 28: 50%\n  bucket 28: 60%\n  bucket 27: 60%\n  bucket 28: 70%\n  bucket 27: 70%\n  bucket 28: 80%\n  bucket 27: 80%\n  bucket 28: 90%\n  bucket 27: 90%\n  bucket 28: 100%\n  bucket 27: 100%\n  Sorting block of length 387 for bucket 28\n  (Using difference cover)\n  Sorting block of length 359 for bucket 27\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 28\n  Sorting block time: 00:00:00\nReturning block of 360 for bucket 27\nGetting block 29 of 57\n  Reserving size (388) for bucket 29\n  Calculating Z arrays for bucket 29\nGetting block 30 of 57\n  Reserving size (388) for bucket 30\n  Calculating Z arrays for bucket 30\n  Entering block accumulator loop for bucket 29:\n  Entering block accumulator loop for bucket 30:\n  bucket 29: 10%\n  bucket 30: 10%\n  bucket 29: 20%\n  bucket 30: 20%\n  bucket 29: 30%\n  bucket 30: 30%\n  bucket 29: 40%\n  bucket 30: 40%\n  bucket 29: 50%\n  bucket 30: 50%\n  bucket 29: 60%\n  bucket 30: 60%\n  bucket 29: 70%\n  bucket 30: 70%\n  bucket 29: 80%\n  bucket 30: 80%\n  bucket 29: 90%\n  bucket 30: 90%\n  bucket 29: 100%\n  Sorting block of length 195 for bucket 29\n  (Using difference cover)\n  bucket 30: 100%\n  Sorting block of length 257 for bucket 30\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 196 for bucket 29\n  Sorting block time: 00:00:00\nReturning block of 258 for bucket 30\nGetting block 31 of 57\n  Reserving size (388) for bucket 31\nGetting block 32 of 57\n  Calculating Z arrays for bucket 31\n  Reserving size (388) for bucket 32\n  Calculating Z arrays for bucket 32\n  Entering block accumulator loop for bucket 31:\n  Entering block accumulator loop for bucket 32:\n  bucket 31: 10%\n  bucket 32: 10%\n  bucket 31: 20%\n  bucket 32: 20%\n  bucket 31: 30%\n  bucket 32: 30%\n  bucket 31: 40%\n  bucket 32: 40%\n  bucket 31: 50%\n  bucket 32: 50%\n  bucket 31: 60%\n  bucket 32: 60%\n  bucket 31: 70%\n  bucket 32: 70%\n  bucket 31: 80%\n  bucket 32: 80%\n  bucket 31: 90%\n  bucket 32: 90%\n  bucket 31: 100%\n  bucket 32: 100%\n  Sorting block of length 310 for bucket 31\n  (Using difference cover)\n  Sorting block of length 219 for bucket 32\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 220 for bucket 32\n  Sorting block time: 00:00:00\nReturning block of 311 for bucket 31\nGetting block 33 of 57\n  Reserving size (388) for bucket 33\n  Calculating Z arrays for bucket 33\n  Entering block accumulator loop for bucket 33:\nGetting block 34 of 57\n  Reserving size (388) for bucket 34\n  Calculating Z arrays for bucket 34\n  bucket 33: 10%\n  Entering block accumulator loop for bucket 34:\n  bucket 33: 20%\n  bucket 34: 10%\n  bucket 34: 20%\n  bucket 33: 30%\n  bucket 34: 30%\n  bucket 33: 40%\n  bucket 34: 40%\n  bucket 33: 50%\n  bucket 34: 50%\n  bucket 33: 60%\n  bucket 33: 70%\n  bucket 34: 60%\n  bucket 33: 80%\n  bucket 34: 70%\n  bucket 33: 90%\n  bucket 34: 80%\n  bucket 33: 100%\n  Sorting block of length 387 for bucket 33\n  (Using difference cover)\n  bucket 34: 90%\n  bucket 34: 100%\n  Sorting block of length 275 for bucket 34\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 33\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 34\nGetting block 35 of 57\n  Reserving size (388) for bucket 35\n  Calculating Z arrays for bucket 35\n  Entering block accumulator loop for bucket 35:\n  bucket 35: 10%\n  bucket 35: 20%\n  bucket 35: 30%\n  bucket 35: 40%\n  bucket 35: 50%\n  bucket 35: 60%\n  bucket 35: 70%\n  bucket 35: 80%\n  bucket 35: 90%\n  bucket 35: 100%\n  Sorting block of length 350 for bucket 35\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 35\nGetting block 36 of 57\n  Reserving size (388) for bucket 36\nGetting block 37 of 57\n  Calculating Z arrays for bucket 36\n  Reserving size (388) for bucket 37\n  Calculating Z arrays for bucket 37\n  Entering block accumulator loop for bucket 36:\n  Entering block accumulator loop for bucket 37:\n  bucket 36: 10%\n  bucket 37: 10%\n  bucket 36: 20%\n  bucket 37: 20%\n  bucket 36: 30%\n  bucket 37: 30%\n  bucket 36: 40%\n  bucket 37: 40%\n  bucket 36: 50%\n  bucket 37: 50%\n  bucket 36: 60%\n  bucket 37: 60%\n  bucket 36: 70%\n  bucket 37: 70%\n  bucket 36: 80%\n  bucket 37: 80%\n  bucket 36: 90%\n  bucket 37: 90%\n  bucket 36: 100%\n  Sorting block of length 150 for bucket 36\n  (Using difference cover)\n  bucket 37: 100%\n  Sorting block of length 267 for bucket 37\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 151 for bucket 36\n  Sorting block time: 00:00:00\nReturning block of 268 for bucket 37\nGetting block 38 of 57\n  Reserving size (388) for bucket 38\n  Calculating Z arrays for bucket 38\n  Entering block accumulator loop for bucket 38:\n  bucket 38: 10%\nGetting block 39 of 57\n  bucket 38: 20%\n  Reserving size (388) for bucket 39\n  Calculating Z arrays for bucket 39\n  Entering block accumulator loop for bucket 39:\n  bucket 38: 30%\n  bucket 38: 40%\n  bucket 39: 10%\n  bucket 38: 50%\n  bucket 39: 20%\n  bucket 38: 60%\n  bucket 39: 30%\n  bucket 38: 70%\n  bucket 39: 40%\n  bucket 38: 80%\n  bucket 39: 50%\n  bucket 38: 90%\n  bucket 39: 60%\n  bucket 39: 70%\n  bucket 38: 100%\n  Sorting block of length 337 for bucket 38\n  (Using difference cover)\n  bucket 39: 80%\n  bucket 39: 90%\n  bucket 39: 100%\n  Sorting block of length 387 for bucket 39\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 338 for bucket 38\n  Sorting block time: 00:00:00\nReturning block of 388 for bucket 39\nGetting block 40 of 57\n  Reserving size (388) for bucket 40\n  Calculating Z arrays for bucket 40\n  Entering block accumulator loop for bucket 40:\n  bucket 40: 10%\n  bucket 40: 20%\n  bucket 40: 30%\n  bucket 40: 40%\n  bucket 40: 50%\n  bucket 40: 60%\n  bucket 40: 70%\n  bucket 40: 80%\n  bucket 40: 90%\n  bucket 40: 100%\n  Sorting block of length 379 for bucket 40\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 380 for bucket 40\nGetting block 41 of 57\n  Reserving size (388) for bucket 41\n  Calculating Z arrays for bucket 41\n  Entering block accumulator loop for bucket 41:\n  bucket 41: 10%\nGetting block 42 of 57\n  Reserving size (388) for bucket 42\n  Calculating Z arrays for bucket 42\n  bucket 41: 20%\n  Entering block accumulator loop for bucket 42:\n  bucket 42: 10%\n  bucket 41: 30%\n  bucket 42: 20%\n  bucket 41: 40%\n  bucket 42: 30%\n  bucket 41: 50%\n  bucket 42: 40%\n  bucket 41: 60%\n  bucket 42: 50%\n  bucket 42: 60%\n  bucket 41: 70%\n  bucket 42: 70%\n  bucket 41: 80%\n  bucket 41: 90%\n  bucket 42: 80%\n  bucket 41: 100%\n  Sorting block of length 330 for bucket 41\n  (Using difference cover)\n  bucket 42: 90%\n  bucket 42: 100%\n  Sorting block of length 188 for bucket 42\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 331 for bucket 41\n  Sorting block time: 00:00:00\nReturning block of 189 for bucket 42\nGetting block 43 of 57\n  Reserving size (388) for bucket 43\nGetting block 44 of 57\n  Calculating Z arrays for bucket 43\n  Reserving size (388) for bucket 44\n  Calculating Z arrays for bucket 44\n  Entering block accumulator loop for bucket 43:\n  Entering block accumulator loop for bucket 44:\n  bucket 43: 10%\n  bucket 44: 10%\n  bucket 43: 20%\n  bucket 44: 20%\n  bucket 43: 30%\n  bucket 44: 30%\n  bucket 43: 40%\n  bucket 43: 50%\n  bucket 44: 40%\n  bucket 43: 60%\n  bucket 44: 50%\n  bucket 43: 70%\n  bucket 44: 60%\n  bucket 44: 70%\n  bucket 43: 80%\n  bucket 44: 80%\n  bucket 43: 90%\n  bucket 44: 90%\n  bucket 43: 100%\n  Sorting block of length 321 for bucket 43\n  (Using difference cover)\n  bucket 44: 100%\n  Sorting block of length 366 for bucket 44\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 322 for bucket 43\n  Sorting block time: 00:00:00\nReturning block of 367 for bucket 44\nGetting block 45 of 57\n  Reserving size (388) for bucket 45\n  Calculating Z arrays for bucket 45\n  Entering block accumulator loop for bucket 45:\nGetting block 46 of 57\n  bucket 45: 10%\n  Reserving size (388) for bucket 46\n  Calculating Z arrays for bucket 46\n  Entering block accumulator loop for bucket 46:\n  bucket 45: 20%\n  bucket 45: 30%\n  bucket 46: 10%\n  bucket 45: 40%\n  bucket 46: 20%\n  bucket 45: 50%\n  bucket 46: 30%\n  bucket 45: 60%\n  bucket 46: 40%\n  bucket 45: 70%\n  bucket 46: 50%\n  bucket 45: 80%\n  bucket 46: 60%\n  bucket 45: 90%\n  bucket 46: 70%\n  bucket 45: 100%\n  Sorting block of length 365 for bucket 45\n  (Using difference cover)\n  bucket 46: 80%\n  bucket 46: 90%\n  bucket 46: 100%\n  Sorting block of length 253 for bucket 46\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 366 for bucket 45\n  Sorting block time: 00:00:00\nReturning block of 254 for bucket 46\nGetting block 47 of 57\n  Reserving size (388) for bucket 47\n  Calculating Z arrays for bucket 47\n  Entering block accumulator loop for bucket 47:\nGetting block 48 of 57\n  Reserving size (388) for bucket 48\n  Calculating Z arrays for bucket 48\n  Entering block accumulator loop for bucket 48:\n  bucket 47: 10%\n  bucket 47: 20%\n  bucket 48: 10%\n  bucket 47: 30%\n  bucket 48: 20%\n  bucket 48: 30%\n  bucket 47: 40%\n  bucket 47: 50%\n  bucket 48: 40%\n  bucket 47: 60%\n  bucket 48: 50%\n  bucket 47: 70%\n  bucket 47: 80%\n  bucket 48: 60%\n  bucket 47: 90%\n  bucket 48: 70%\n  bucket 47: 100%\n  Sorting block of length 217 for bucket 47\n  (Using difference cover)\n  bucket 48: 80%\n  bucket 48: 90%\n  Sorting block time: 00:00:00\nReturning block of 218 for bucket 47\n  bucket 48: 100%\n  Sorting block of length 384 for bucket 48\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 385 for bucket 48\nGetting block 49 of 57\n  Reserving size (388) for bucket 49\n  Calculating Z arrays for bucket 49\nGetting block 50 of 57\n  Reserving size (388) for bucket 50\n  Calculating Z arrays for bucket 50\n  Entering block accumulator loop for bucket 49:\n  Entering block accumulator loop for bucket 50:\n  bucket 49: 10%\n  bucket 50: 10%\n  bucket 49: 20%\n  bucket 50: 20%\n  bucket 49: 30%\n  bucket 50: 30%\n  bucket 49: 40%\n  bucket 50: 40%\n  bucket 49: 50%\n  bucket 50: 50%\n  bucket 50: 60%\n  bucket 49: 60%\n  bucket 50: 70%\n  bucket 49: 70%\n  bucket 50: 80%\n  bucket 49: 80%\n  bucket 50: 90%\n  bucket 49: 90%\n  bucket 50: 100%\n  Sorting block of length 275 for bucket 50\n  (Using difference cover)\n  bucket 49: 100%\n  Sorting block of length 112 for bucket 49\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 276 for bucket 50\n  Sorting block time: 00:00:00\nReturning block of 113 for bucket 49\nGetting block 51 of 57\n  Reserving size (388) for bucket 51\n  Calculating Z arrays for bucket 51\n  Entering block accumulator loop for bucket 51:\n  bucket 51: 10%\n  bucket 51: 20%\n  bucket 51: 30%\n  bucket 51: 40%\n  bucket 51: 50%\n  bucket 51: 60%\n  bucket 51: 70%\n  bucket 51: 80%\n  bucket 51: 90%\n  bucket 51: 100%\n  Sorting block of length 350 for bucket 51\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 351 for bucket 51\nGetting block 52 of 57\n  Reserving size (388) for bucket 52\nGetting block 53 of 57\n  Calculating Z arrays for bucket 52\n  Reserving size (388) for bucket 53\n  Calculating Z arrays for bucket 53\n  Entering block accumulator loop for bucket 52:\n  Entering block accumulator loop for bucket 53:\n  bucket 52: 10%\n  bucket 53: 10%\n  bucket 52: 20%\n  bucket 53: 20%\n  bucket 52: 30%\n  bucket 53: 30%\n  bucket 52: 40%\n  bucket 53: 40%\n  bucket 52: 50%\n  bucket 53: 50%\n  bucket 52: 60%\n  bucket 52: 70%\n  bucket 53: 60%\n  bucket 52: 80%\n  bucket 53: 70%\n  bucket 52: 90%\n  bucket 53: 80%\n  bucket 52: 100%\n  Sorting block of length 378 for bucket 52\n  (Using difference cover)\n  bucket 53: 90%\n  bucket 53: 100%\n  Sorting block of length 370 for bucket 53\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 379 for bucket 52\n  Sorting block time: 00:00:00\nReturning block of 371 for bucket 53\nGetting block 54 of 57\n  Reserving size (388) for bucket 54\n  Calculating Z arrays for bucket 54\n  Entering block accumulator loop for bucket 54:\n  bucket 54: 10%\nGetting block 55 of 57\n  Reserving size (388) for bucket 55\nGetting block 56 of 57\n  bucket 54: 20%\n  Calculating Z arrays for bucket 55\n  Reserving size (388) for bucket 56\n  Calculating Z arrays for bucket 56\n  Entering block accumulator loop for bucket 55:\n  Entering block accumulator loop for bucket 56:\n  bucket 54: 30%\n  bucket 55: 10%\n  bucket 54: 40%\n  bucket 56: 10%\n  bucket 55: 20%\n  bucket 54: 50%\n  bucket 56: 20%\n  bucket 55: 30%\n  bucket 54: 60%\n  bucket 56: 30%\n  bucket 55: 40%\n  bucket 54: 70%\n  bucket 54: 80%\n  bucket 55: 50%\n  bucket 56: 40%\n  bucket 54: 90%\n  bucket 55: 60%\n  bucket 54: 100%\n  Sorting block of length 237 for bucket 54\n  (Using difference cover)\n  bucket 56: 50%\n  bucket 55: 70%\n  bucket 55: 80%\n  bucket 56: 60%\n  bucket 55: 90%\n  Sorting block time: 00:00:00\nReturning block of 238 for bucket 54\n  bucket 55: 100%\n  Sorting block of length 344 for bucket 55\n  (Using difference cover)\n  bucket 56: 70%\n  bucket 56: 80%\n  Sorting block time: 00:00:00\nReturning block of 345 for bucket 55\n  bucket 56: 90%\n  bucket 56: 100%\n  Sorting block of length 270 for bucket 56\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 271 for bucket 56\nGetting block 57 of 57\n  Reserving size (388) for bucket 57\n  Calculating Z arrays for bucket 57\n  Entering block accumulator loop for bucket 57:\n  bucket 57: 10%\n  bucket 57: 20%\n  bucket 57: 30%\n  bucket 57: 40%\n  bucket 57: 50%\n  bucket 57: 60%\n  bucket 57: 70%\n  bucket 57: 80%\n  bucket 57: 90%\n  bucket 57: 100%\n  Sorting block of length 132 for bucket 57\n  (Using difference cover)\n  Sorting block time: 00:00:00\nReturning block of 133 for bucket 57\nExited Ebwt loop\nfchr[A]: 0\nfchr[C]: 5124\nfchr[G]: 10305\nfchr[T]: 12474\nfchr[$]: 16568\nExiting Ebwt::buildToDisk()\nReturning from initFromVector\nWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmp\nWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmp\nRe-opening _in1 and _in2 as input streams\nReturning from Ebwt constructor\nHeaders:\n    len: 16568\n    bwtLen: 16569\n    sz: 4142\n    bwtSz: 4143\n    lineRate: 6\n    offRate: 4\n    offMask: 0xfffffff0\n    ftabChars: 10\n    eftabLen: 20\n    eftabSz: 80\n    ftabLen: 1048577\n    ftabSz: 4194308\n    offsLen: 1036\n    offsSz: 4144\n    lineSz: 64\n    sideSz: 64\n    sideBwtSz: 48\n    sideBwtLen: 192\n    numSides: 87\n    numLines: 87\n    ebwtTotLen: 5568\n    ebwtTotSz: 5568\n    color: 0\n    reverse: 1\nTotal time for backward call to driver() for mirror index: 00:00:00\n",  "update_time": "2024-09-20T18:52:08.859189",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.5.3+galaxy1, exit_code: None, stderr: Building a SMALL index\nRenaming genome.3.bt2.tmp to genome.3.bt2\nRenaming genome.4.bt2.tmp to genome.4.bt2\nRenaming genome.1.bt2.tmp to genome.1.bt2\nRenaming genome.2.bt2.tmp to genome.2.bt2\nRenaming genome.rev.1.bt2.tmp to genome.rev.1.bt2\nRenaming genome.rev.2.bt2.tmp to genome.rev.2.bt2\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n22.00% overall alignment rate\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.5.3+galaxy1, exit_code: None, stderr: Building a SMALL index\nRenaming genome.3.bt2.tmp to genome.3.bt2\nRenaming genome.4.bt2.tmp to genome.4.bt2\nRenaming genome.1.bt2.tmp to genome.1.bt2\nRenaming genome.2.bt2.tmp to genome.2.bt2\nRenaming genome.rev.1.bt2.tmp to genome.rev.1.bt2\nRenaming genome.rev.2.bt2.tmp to genome.rev.2.bt2\n100 reads; of these:\n  100 (100.00%) were paired; of these:\n    97 (97.00%) aligned concordantly 0 times\n    3 (3.00%) aligned concordantly exactly 1 time\n    0 (0.00%) aligned concordantly \u003e1 times\n    ----\n    97 pairs aligned concordantly 0 times; of these:\n      7 (7.22%) aligned discordantly 1 time\n    ----\n    90 pairs aligned 0 times concordantly or discordantly; of these:\n      180 mates make up the pairs; of these:\n        156 (86.67%) aligned 0 times\n        24 (13.33%) aligned exactly 1 time\n        0 (0.00%) aligned \u003e1 times\n22.00% overall alignment rate\n." ], "status": "failure", "test_index": 8, "time_seconds": 34.60016751289368, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            Settings:  Output files: "genome.*.bt2"  Line rate: 6 (line is 64 bytes)  Lines per side: 1 (side is 64 bytes)  Offset rate: 4 (one in 16)  FTable chars: 10  Strings: unpacked  Max bucket size: default  Max bucket size, sqrt multiplier: default  Max bucket size, len divisor: 32  Difference-cover sample period: 1024  Endianness: little  Actual local endianness: little  Sanity checking: disabled  Assertions: disabled  Random seed: 0  Sizeofs: void*:8, int:4, long:8, size_t:8Input files DNA, FASTA:  /galaxy/server/database/objects/7/2/c/dataset_72ce7c3e-c81b-409f-ab5c-0ac23b7fb471.datReading reference sizes  Time reading reference sizes: 00:00:00Calculating joined lengthWriting headerReserving space for joined stringJoining reference sequences  Time to join reference sequences: 00:00:00bmax according to bmaxDivN setting: 517Using parameters --bmax 388 --dcv 1024  Doing ahead-of-time memory usage test  Passed!  Constructing with these parameters: --bmax 388 --dcv 1024Constructing suffix-array element generatorBuilding DifferenceCoverSample  Building sPrime  Building sPrimeOrder  V-Sorting samples  V-Sorting samples time: 00:00:00  Allocating rank array  Ranking v-sort output  Ranking v-sort output time: 00:00:00  Invoking Larsson-Sadakane on ranks  Invoking Larsson-Sadakane on ranks time: 00:00:00  Sanity-checking and returningBuilding samplesReserving space for 86 sample suffixesGenerating random suffixesQSorting 86 sample offsets, eliminating duplicatesQSorting sample offsets, eliminating duplicates time: 00:00:00Multikey QSorting 86 samples  (Using difference cover)  Multikey QSorting samples time: 00:00:00Calculating bucket sizesSplitting and merging  Splitting and merging time: 00:00:00Split 12, merged 41; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 6, merged 6; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 5, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Split 3, merged 3; iterating...Splitting and merging  Splitting and merging time: 00:00:00Avg bucket size: 284.672 (target: 387)Converting suffix-array elements to index imageAllocating ftab, absorbFtabEntering Ebwt loopGetting block 1 of 58Getting block 2 of 58  Reserving size (388) for bucket 1  Reserving size (388) for bucket 2  Calculating Z arrays for bucket 1Getting block 3 of 58Getting block 4 of 58Getting block 5 of 58  Calculating Z arrays for bucket 2Getting block 6 of 58  Entering block accumulator loop for bucket 1:  Reserving size (388) for bucket 3  Reserving size (388) for bucket 4  Reserving size (388) for bucket 5  Reserving size (388) for bucket 6Getting block 7 of 58  Entering block accumulator loop for bucket 2:  Calculating Z arrays for bucket 3  Calculating Z arrays for bucket 4  Calculating Z arrays for bucket 5  Calculating Z arrays for bucket 6  Reserving size (388) for bucket 7  Calculating Z arrays for bucket 7  Entering block accumulator loop for bucket 3:  bucket 1: 10%  Entering block accumulator loop for bucket 5:  Entering block accumulator loop for bucket 4:  Entering block accumulator loop for bucket 6:  bucket 2: 10%  Entering block accumulator loop for bucket 7:  bucket 1: 20%  bucket 3: 10%  bucket 5: 10%  bucket 6: 10%  bucket 2: 20%  bucket 4: 10%  bucket 1: 30%  bucket 7: 10%  bucket 2: 30%  bucket 3: 20%  bucket 5: 20%  bucket 6: 20%  bucket 1: 40%  bucket 4: 20%  bucket 2: 40%  bucket 7: 20%  bucket 3: 30%  bucket 5: 30%  bucket 6: 30%  bucket 1: 50%  bucket 4: 30%  bucket 2: 50%  bucket 3: 40%  bucket 7: 30%  bucket 5: 40%  bucket 6: 40%  bucket 1: 60%  bucket 2: 60%  bucket 4: 40%  bucket 3: 50%  bucket 5: 50%  bucket 7: 40%  bucket 1: 70%  bucket 6: 50%  bucket 2: 70%  bucket 4: 50%  bucket 5: 60%  bucket 3: 60%  bucket 1: 80%  bucket 7: 50%  bucket 2: 80%  bucket 6: 60%  bucket 4: 60%  bucket 5: 70%  bucket 3: 70%  bucket 2: 90%  bucket 1: 90%  bucket 7: 60%  bucket 6: 70%  bucket 4: 70%  bucket 5: 80%  bucket 3: 80%  bucket 2: 100%  bucket 1: 100%  Sorting block of length 165 for bucket 2  (Using difference cover)  Sorting block of length 355 for bucket 1  (Using difference cover)  bucket 6: 80%  bucket 7: 70%  bucket 4: 80%  bucket 5: 90%  bucket 3: 90%  bucket 6: 90%  bucket 7: 80%  bucket 5: 100%  bucket 3: 100%  Sorting block of length 203 for bucket 5  (Using difference cover)  bucket 4: 90%  Sorting block of length 370 for bucket 3  (Using difference cover)  bucket 6: 100%  Sorting block of length 339 for bucket 6  (Using difference cover)  bucket 7: 90%  bucket 4: 100%  Sorting block of length 328 for bucket 4  (Using difference cover)  bucket 7: 100%  Sorting block of length 368 for bucket 7  (Using difference cover)  Sorting block time: 00:00:00Returning block of 204 for bucket 5  Sorting block time: 00:00:00Returning block of 371 for bucket 3  Sorting block time: 00:00:00Returning block of 356 for bucket 1  Sorting block time: 00:00:00Returning block of 166 for bucket 2  Sorting block time: 00:00:00Returning block of 329 for bucket 4  Sorting block time: 00:00:00Returning block of 369 for bucket 7  Sorting block time: 00:00:00Returning block of 340 for bucket 6Getting block 8 of 58  Reserving size (388) for bucket 8  Calculating Z arrays for bucket 8  Entering block accumulator loop for bucket 8:Getting block 9 of 58  Reserving size (388) for bucket 9  Calculating Z arrays for bucket 9  bucket 8: 10%  Entering block accumulator loop for bucket 9:  bucket 8: 20%  bucket 9: 10%  bucket 8: 30%  bucket 9: 20%  bucket 9: 30%  bucket 8: 40%  bucket 9: 40%  bucket 8: 50%  bucket 9: 50%  bucket 8: 60%  bucket 9: 60%  bucket 9: 70%  bucket 8: 70%  bucket 9: 80%  bucket 8: 80%  bucket 9: 90%  bucket 8: 90%  bucket 9: 100%  Sorting block of length 339 for bucket 9  (Using difference cover)  bucket 8: 100%  Sorting block of length 171 for bucket 8  (Using difference cover)  Sorting block time: 00:00:00Returning block of 340 for bucket 9  Sorting block time: 00:00:00Returning block of 172 for bucket 8Getting block 10 of 58  Reserving size (388) for bucket 10Getting block 11 of 58  Calculating Z arrays for bucket 10  Reserving size (388) for bucket 11  Calculating Z arrays for bucket 11  Entering block accumulator loop for bucket 10:  Entering block accumulator loop for bucket 11:  bucket 10: 10%  bucket 11: 10%  bucket 10: 20%  bucket 11: 20%  bucket 10: 30%  bucket 11: 30%  bucket 10: 40%  bucket 11: 40%  bucket 10: 50%  bucket 10: 60%  bucket 11: 50%  bucket 10: 70%  bucket 11: 60%  bucket 10: 80%  bucket 11: 70%  bucket 10: 90%  bucket 11: 80%  bucket 10: 100%  Sorting block of length 357 for bucket 10  (Using difference cover)  bucket 11: 90%  bucket 11: 100%  Sorting block of length 305 for bucket 11  (Using difference cover)  Sorting block time: 00:00:00Returning block of 358 for bucket 10  Sorting block time: 00:00:00Returning block of 306 for bucket 11Getting block 12 of 58  Reserving size (388) for bucket 12  Calculating Z arrays for bucket 12  Entering block accumulator loop for bucket 12:  bucket 12: 10%Getting block 13 of 58  Reserving size (388) for bucket 13  Calculating Z arrays for bucket 13  bucket 12: 20%  Entering block accumulator loop for bucket 13:  bucket 12: 30%  bucket 12: 40%  bucket 13: 10%  bucket 12: 50%  bucket 12: 60%  bucket 13: 20%  bucket 12: 70%  bucket 13: 30%  bucket 12: 80%  bucket 12: 90%  bucket 13: 40%  bucket 12: 100%  Sorting block of length 185 for bucket 12  (Using difference cover)  bucket 13: 50%  bucket 13: 60%  bucket 13: 70%  Sorting block time: 00:00:00Returning block of 186 for bucket 12  bucket 13: 80%  bucket 13: 90%  bucket 13: 100%  Sorting block of length 282 for bucket 13  (Using difference cover)  Sorting block time: 00:00:00Returning block of 283 for bucket 13Getting block 14 of 58  Reserving size (388) for bucket 14  Calculating Z arrays for bucket 14  Entering block accumulator loop for bucket 14:Getting block 15 of 58  bucket 14: 10%  Reserving size (388) for bucket 15  Calculating Z arrays for bucket 15  Entering block accumulator loop for bucket 15:  bucket 14: 20%  bucket 15: 10%  bucket 14: 30%  bucket 15: 20%  bucket 14: 40%  bucket 15: 30%  bucket 14: 50%  bucket 15: 40%  bucket 15: 50%  bucket 14: 60%  bucket 15: 60%  bucket 14: 70%  bucket 15: 70%  bucket 14: 80%  bucket 15: 80%  bucket 15: 90%  bucket 14: 90%  bucket 15: 100%  Sorting block of length 241 for bucket 15  (Using difference cover)  bucket 14: 100%  Sorting block of length 339 for bucket 14  (Using difference cover)  Sorting block time: 00:00:00Returning block of 242 for bucket 15  Sorting block time: 00:00:00Returning block of 340 for bucket 14Getting block 16 of 58  Reserving size (388) for bucket 16  Calculating Z arrays for bucket 16  Entering block accumulator loop for bucket 16:  bucket 16: 10%  bucket 16: 20%  bucket 16: 30%  bucket 16: 40%  bucket 16: 50%  bucket 16: 60%  bucket 16: 70%  bucket 16: 80%  bucket 16: 90%  bucket 16: 100%  Sorting block of length 379 for bucket 16  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 16Getting block 17 of 58  Reserving size (388) for bucket 17  Calculating Z arrays for bucket 17  Entering block accumulator loop for bucket 17:  bucket 17: 10%Getting block 18 of 58  Reserving size (388) for bucket 18  Calculating Z arrays for bucket 18  Entering block accumulator loop for bucket 18:  bucket 18: 10%  bucket 17: 20%  bucket 18: 20%  bucket 17: 30%  bucket 18: 30%  bucket 17: 40%  bucket 18: 40%  bucket 17: 50%  bucket 17: 60%  bucket 18: 50%  bucket 17: 70%  bucket 18: 60%  bucket 17: 80%  bucket 18: 70%  bucket 17: 90%  bucket 18: 80%  bucket 17: 100%  Sorting block of length 215 for bucket 17  (Using difference cover)  bucket 18: 90%  bucket 18: 100%  Sorting block of length 378 for bucket 18  (Using difference cover)  Sorting block time: 00:00:00Returning block of 216 for bucket 17  Sorting block time: 00:00:00Returning block of 379 for bucket 18Getting block 19 of 58  Reserving size (388) for bucket 19  Calculating Z arrays for bucket 19  Entering block accumulator loop for bucket 19:  bucket 19: 10%Getting block 20 of 58  Reserving size (388) for bucket 20  Calculating Z arrays for bucket 20  bucket 19: 20%  Entering block accumulator loop for bucket 20:  bucket 20: 10%  bucket 19: 30%  bucket 20: 20%  bucket 19: 40%  bucket 20: 30%  bucket 19: 50%  bucket 20: 40%  bucket 19: 60%  bucket 20: 50%  bucket 19: 70%  bucket 19: 80%  bucket 20: 60%  bucket 19: 90%  bucket 20: 70%  bucket 19: 100%  bucket 20: 80%  Sorting block of length 334 for bucket 19  (Using difference cover)  bucket 20: 90%  bucket 20: 100%  Sorting block of length 313 for bucket 20  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 19  Sorting block time: 00:00:00Returning block of 314 for bucket 20Getting block 21 of 58  Reserving size (388) for bucket 21  Calculating Z arrays for bucket 21Getting block 22 of 58  Reserving size (388) for bucket 22  Calculating Z arrays for bucket 22  Entering block accumulator loop for bucket 21:  Entering block accumulator loop for bucket 22:  bucket 21: 10%  bucket 22: 10%  bucket 21: 20%  bucket 22: 20%  bucket 21: 30%  bucket 22: 30%  bucket 21: 40%  bucket 21: 50%  bucket 22: 40%  bucket 21: 60%  bucket 21: 70%  bucket 22: 50%  bucket 21: 80%  bucket 22: 60%  bucket 21: 90%  bucket 21: 100%  Sorting block of length 210 for bucket 21  (Using difference cover)  bucket 22: 70%  bucket 22: 80%  bucket 22: 90%  Sorting block time: 00:00:00Returning block of 211 for bucket 21  bucket 22: 100%  Sorting block of length 386 for bucket 22  (Using difference cover)  Sorting block time: 00:00:00Returning block of 387 for bucket 22Getting block 23 of 58  Reserving size (388) for bucket 23  Calculating Z arrays for bucket 23  Entering block accumulator loop for bucket 23:  bucket 23: 10%  bucket 23: 20%  bucket 23: 30%  bucket 23: 40%  bucket 23: 50%  bucket 23: 60%  bucket 23: 70%  bucket 23: 80%  bucket 23: 90%  bucket 23: 100%  Sorting block of length 238 for bucket 23  (Using difference cover)  Sorting block time: 00:00:00Returning block of 239 for bucket 23Getting block 24 of 58  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24Getting block 25 of 58  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 24:  Entering block accumulator loop for bucket 25:  bucket 25: 10%  bucket 24: 10%  bucket 24: 20%  bucket 25: 20%  bucket 24: 30%  bucket 25: 30%  bucket 24: 40%  bucket 25: 40%  bucket 24: 50%  bucket 25: 50%  bucket 24: 60%  bucket 25: 60%  bucket 25: 70%  bucket 25: 80%  bucket 24: 70%  bucket 25: 90%  bucket 24: 80%  bucket 25: 100%  Sorting block of length 105 for bucket 25  (Using difference cover)  bucket 24: 90%  bucket 24: 100%  Sorting block of length 351 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 106 for bucket 25  Sorting block time: 00:00:00Returning block of 352 for bucket 24Getting block 26 of 58  Reserving size (388) for bucket 26Getting block 27 of 58  Calculating Z arrays for bucket 26  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 26:  Entering block accumulator loop for bucket 27:  bucket 26: 10%  bucket 26: 20%  bucket 27: 10%  bucket 26: 30%  bucket 27: 20%  bucket 26: 40%  bucket 27: 30%  bucket 27: 40%  bucket 26: 50%  bucket 27: 50%  bucket 26: 60%  bucket 27: 60%  bucket 27: 70%  bucket 26: 70%  bucket 27: 80%  bucket 26: 80%  bucket 27: 90%  bucket 26: 90%  bucket 27: 100%  Sorting block of length 334 for bucket 27  (Using difference cover)  bucket 26: 100%  Sorting block of length 354 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 335 for bucket 27  Sorting block time: 00:00:00Returning block of 355 for bucket 26Getting block 28 of 58  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 28:  bucket 28: 10%  bucket 28: 20%Getting block 29 of 58  bucket 28: 30%  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29Getting block 30 of 58  Entering block accumulator loop for bucket 29:  Reserving size (388) for bucket 30  bucket 28: 40%  Calculating Z arrays for bucket 30  bucket 28: 50%  Entering block accumulator loop for bucket 30:  bucket 29: 10%  bucket 28: 60%  bucket 29: 20%  bucket 30: 10%  bucket 28: 70%  bucket 29: 30%  bucket 28: 80%  bucket 30: 20%  bucket 29: 40%  bucket 28: 90%  bucket 30: 30%  bucket 29: 50%  bucket 28: 100%  Sorting block of length 253 for bucket 28  (Using difference cover)  bucket 29: 60%  bucket 30: 40%  bucket 29: 70%  bucket 30: 50%  bucket 29: 80%  Sorting block time: 00:00:00Returning block of 254 for bucket 28  bucket 30: 60%  bucket 29: 90%  bucket 29: 100%  Sorting block of length 289 for bucket 29  (Using difference cover)  bucket 30: 70%  bucket 30: 80%  Sorting block time: 00:00:00  bucket 30: 90%Returning block of 290 for bucket 29  bucket 30: 100%  Sorting block of length 345 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 346 for bucket 30Getting block 31 of 58  Reserving size (388) for bucket 31  Calculating Z arrays for bucket 31  Entering block accumulator loop for bucket 31:  bucket 31: 10%Getting block 32 of 58  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 32:  bucket 31: 20%  bucket 31: 30%  bucket 32: 10%  bucket 31: 40%  bucket 31: 50%  bucket 32: 20%  bucket 31: 60%  bucket 31: 70%  bucket 32: 30%  bucket 31: 80%  bucket 32: 40%  bucket 31: 90%  bucket 31: 100%  Sorting block of length 377 for buck..0:00Returning block of 350 for bucket 23Getting block 24 of 57  Reserving size (388) for bucket 24  Calculating Z arrays for bucket 24Getting block 25 of 57  Entering block accumulator loop for bucket 24:  Reserving size (388) for bucket 25  Calculating Z arrays for bucket 25  Entering block accumulator loop for bucket 25:  bucket 24: 10%  bucket 25: 10%  bucket 25: 20%  bucket 24: 20%  bucket 25: 30%  bucket 24: 30%  bucket 25: 40%  bucket 25: 50%  bucket 24: 40%  bucket 25: 60%  bucket 24: 50%  bucket 25: 70%  bucket 25: 80%  bucket 24: 60%  bucket 25: 90%  bucket 24: 70%  bucket 25: 100%  Sorting block of length 286 for bucket 25  (Using difference cover)  bucket 24: 80%  bucket 24: 90%  bucket 24: 100%  Sorting block of length 245 for bucket 24  (Using difference cover)  Sorting block time: 00:00:00Returning block of 287 for bucket 25  Sorting block time: 00:00:00Returning block of 246 for bucket 24Getting block 26 of 57  Reserving size (388) for bucket 26  Calculating Z arrays for bucket 26  Entering block accumulator loop for bucket 26:  bucket 26: 10%  bucket 26: 20%  bucket 26: 30%  bucket 26: 40%  bucket 26: 50%  bucket 26: 60%  bucket 26: 70%  bucket 26: 80%  bucket 26: 90%  bucket 26: 100%  Sorting block of length 384 for bucket 26  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 26Getting block 27 of 57  Reserving size (388) for bucket 27  Calculating Z arrays for bucket 27  Entering block accumulator loop for bucket 27:Getting block 28 of 57  Reserving size (388) for bucket 28  Calculating Z arrays for bucket 28  Entering block accumulator loop for bucket 28:  bucket 27: 10%  bucket 28: 10%  bucket 27: 20%  bucket 28: 20%  bucket 27: 30%  bucket 28: 30%  bucket 27: 40%  bucket 28: 40%  bucket 27: 50%  bucket 28: 50%  bucket 28: 60%  bucket 27: 60%  bucket 28: 70%  bucket 27: 70%  bucket 28: 80%  bucket 27: 80%  bucket 28: 90%  bucket 27: 90%  bucket 28: 100%  bucket 27: 100%  Sorting block of length 387 for bucket 28  (Using difference cover)  Sorting block of length 359 for bucket 27  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 28  Sorting block time: 00:00:00Returning block of 360 for bucket 27Getting block 29 of 57  Reserving size (388) for bucket 29  Calculating Z arrays for bucket 29Getting block 30 of 57  Reserving size (388) for bucket 30  Calculating Z arrays for bucket 30  Entering block accumulator loop for bucket 29:  Entering block accumulator loop for bucket 30:  bucket 29: 10%  bucket 30: 10%  bucket 29: 20%  bucket 30: 20%  bucket 29: 30%  bucket 30: 30%  bucket 29: 40%  bucket 30: 40%  bucket 29: 50%  bucket 30: 50%  bucket 29: 60%  bucket 30: 60%  bucket 29: 70%  bucket 30: 70%  bucket 29: 80%  bucket 30: 80%  bucket 29: 90%  bucket 30: 90%  bucket 29: 100%  Sorting block of length 195 for bucket 29  (Using difference cover)  bucket 30: 100%  Sorting block of length 257 for bucket 30  (Using difference cover)  Sorting block time: 00:00:00Returning block of 196 for bucket 29  Sorting block time: 00:00:00Returning block of 258 for bucket 30Getting block 31 of 57  Reserving size (388) for bucket 31Getting block 32 of 57  Calculating Z arrays for bucket 31  Reserving size (388) for bucket 32  Calculating Z arrays for bucket 32  Entering block accumulator loop for bucket 31:  Entering block accumulator loop for bucket 32:  bucket 31: 10%  bucket 32: 10%  bucket 31: 20%  bucket 32: 20%  bucket 31: 30%  bucket 32: 30%  bucket 31: 40%  bucket 32: 40%  bucket 31: 50%  bucket 32: 50%  bucket 31: 60%  bucket 32: 60%  bucket 31: 70%  bucket 32: 70%  bucket 31: 80%  bucket 32: 80%  bucket 31: 90%  bucket 32: 90%  bucket 31: 100%  bucket 32: 100%  Sorting block of length 310 for bucket 31  (Using difference cover)  Sorting block of length 219 for bucket 32  (Using difference cover)  Sorting block time: 00:00:00Returning block of 220 for bucket 32  Sorting block time: 00:00:00Returning block of 311 for bucket 31Getting block 33 of 57  Reserving size (388) for bucket 33  Calculating Z arrays for bucket 33  Entering block accumulator loop for bucket 33:Getting block 34 of 57  Reserving size (388) for bucket 34  Calculating Z arrays for bucket 34  bucket 33: 10%  Entering block accumulator loop for bucket 34:  bucket 33: 20%  bucket 34: 10%  bucket 34: 20%  bucket 33: 30%  bucket 34: 30%  bucket 33: 40%  bucket 34: 40%  bucket 33: 50%  bucket 34: 50%  bucket 33: 60%  bucket 33: 70%  bucket 34: 60%  bucket 33: 80%  bucket 34: 70%  bucket 33: 90%  bucket 34: 80%  bucket 33: 100%  Sorting block of length 387 for bucket 33  (Using difference cover)  bucket 34: 90%  bucket 34: 100%  Sorting block of length 275 for bucket 34  (Using difference cover)  Sorting block time: 00:00:00Returning block of 388 for bucket 33  Sorting block time: 00:00:00Returning block of 276 for bucket 34Getting block 35 of 57  Reserving size (388) for bucket 35  Calculating Z arrays for bucket 35  Entering block accumulator loop for bucket 35:  bucket 35: 10%  bucket 35: 20%  bucket 35: 30%  bucket 35: 40%  bucket 35: 50%  bucket 35: 60%  bucket 35: 70%  bucket 35: 80%  bucket 35: 90%  bucket 35: 100%  Sorting block of length 350 for bucket 35  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 35Getting block 36 of 57  Reserving size (388) for bucket 36Getting block 37 of 57  Calculating Z arrays for bucket 36  Reserving size (388) for bucket 37  Calculating Z arrays for bucket 37  Entering block accumulator loop for bucket 36:  Entering block accumulator loop for bucket 37:  bucket 36: 10%  bucket 37: 10%  bucket 36: 20%  bucket 37: 20%  bucket 36: 30%  bucket 37: 30%  bucket 36: 40%  bucket 37: 40%  bucket 36: 50%  bucket 37: 50%  bucket 36: 60%  bucket 37: 60%  bucket 36: 70%  bucket 37: 70%  bucket 36: 80%  bucket 37: 80%  bucket 36: 90%  bucket 37: 90%  bucket 36: 100%  Sorting block of length 150 for bucket 36  (Using difference cover)  bucket 37: 100%  Sorting block of length 267 for bucket 37  (Using difference cover)  Sorting block time: 00:00:00Returning block of 151 for bucket 36  Sorting block time: 00:00:00Returning block of 268 for bucket 37Getting block 38 of 57  Reserving size (388) for bucket 38  Calculating Z arrays for bucket 38  Entering block accumulator loop for bucket 38:  bucket 38: 10%Getting block 39 of 57  bucket 38: 20%  Reserving size (388) for bucket 39  Calculating Z arrays for bucket 39  Entering block accumulator loop for bucket 39:  bucket 38: 30%  bucket 38: 40%  bucket 39: 10%  bucket 38: 50%  bucket 39: 20%  bucket 38: 60%  bucket 39: 30%  bucket 38: 70%  bucket 39: 40%  bucket 38: 80%  bucket 39: 50%  bucket 38: 90%  bucket 39: 60%  bucket 39: 70%  bucket 38: 100%  Sorting block of length 337 for bucket 38  (Using difference cover)  bucket 39: 80%  bucket 39: 90%  bucket 39: 100%  Sorting block of length 387 for bucket 39  (Using difference cover)  Sorting block time: 00:00:00Returning block of 338 for bucket 38  Sorting block time: 00:00:00Returning block of 388 for bucket 39Getting block 40 of 57  Reserving size (388) for bucket 40  Calculating Z arrays for bucket 40  Entering block accumulator loop for bucket 40:  bucket 40: 10%  bucket 40: 20%  bucket 40: 30%  bucket 40: 40%  bucket 40: 50%  bucket 40: 60%  bucket 40: 70%  bucket 40: 80%  bucket 40: 90%  bucket 40: 100%  Sorting block of length 379 for bucket 40  (Using difference cover)  Sorting block time: 00:00:00Returning block of 380 for bucket 40Getting block 41 of 57  Reserving size (388) for bucket 41  Calculating Z arrays for bucket 41  Entering block accumulator loop for bucket 41:  bucket 41: 10%Getting block 42 of 57  Reserving size (388) for bucket 42  Calculating Z arrays for bucket 42  bucket 41: 20%  Entering block accumulator loop for bucket 42:  bucket 42: 10%  bucket 41: 30%  bucket 42: 20%  bucket 41: 40%  bucket 42: 30%  bucket 41: 50%  bucket 42: 40%  bucket 41: 60%  bucket 42: 50%  bucket 42: 60%  bucket 41: 70%  bucket 42: 70%  bucket 41: 80%  bucket 41: 90%  bucket 42: 80%  bucket 41: 100%  Sorting block of length 330 for bucket 41  (Using difference cover)  bucket 42: 90%  bucket 42: 100%  Sorting block of length 188 for bucket 42  (Using difference cover)  Sorting block time: 00:00:00Returning block of 331 for bucket 41  Sorting block time: 00:00:00Returning block of 189 for bucket 42Getting block 43 of 57  Reserving size (388) for bucket 43Getting block 44 of 57  Calculating Z arrays for bucket 43  Reserving size (388) for bucket 44  Calculating Z arrays for bucket 44  Entering block accumulator loop for bucket 43:  Entering block accumulator loop for bucket 44:  bucket 43: 10%  bucket 44: 10%  bucket 43: 20%  bucket 44: 20%  bucket 43: 30%  bucket 44: 30%  bucket 43: 40%  bucket 43: 50%  bucket 44: 40%  bucket 43: 60%  bucket 44: 50%  bucket 43: 70%  bucket 44: 60%  bucket 44: 70%  bucket 43: 80%  bucket 44: 80%  bucket 43: 90%  bucket 44: 90%  bucket 43: 100%  Sorting block of length 321 for bucket 43  (Using difference cover)  bucket 44: 100%  Sorting block of length 366 for bucket 44  (Using difference cover)  Sorting block time: 00:00:00Returning block of 322 for bucket 43  Sorting block time: 00:00:00Returning block of 367 for bucket 44Getting block 45 of 57  Reserving size (388) for bucket 45  Calculating Z arrays for bucket 45  Entering block accumulator loop for bucket 45:Getting block 46 of 57  bucket 45: 10%  Reserving size (388) for bucket 46  Calculating Z arrays for bucket 46  Entering block accumulator loop for bucket 46:  bucket 45: 20%  bucket 45: 30%  bucket 46: 10%  bucket 45: 40%  bucket 46: 20%  bucket 45: 50%  bucket 46: 30%  bucket 45: 60%  bucket 46: 40%  bucket 45: 70%  bucket 46: 50%  bucket 45: 80%  bucket 46: 60%  bucket 45: 90%  bucket 46: 70%  bucket 45: 100%  Sorting block of length 365 for bucket 45  (Using difference cover)  bucket 46: 80%  bucket 46: 90%  bucket 46: 100%  Sorting block of length 253 for bucket 46  (Using difference cover)  Sorting block time: 00:00:00Returning block of 366 for bucket 45  Sorting block time: 00:00:00Returning block of 254 for bucket 46Getting block 47 of 57  Reserving size (388) for bucket 47  Calculating Z arrays for bucket 47  Entering block accumulator loop for bucket 47:Getting block 48 of 57  Reserving size (388) for bucket 48  Calculating Z arrays for bucket 48  Entering block accumulator loop for bucket 48:  bucket 47: 10%  bucket 47: 20%  bucket 48: 10%  bucket 47: 30%  bucket 48: 20%  bucket 48: 30%  bucket 47: 40%  bucket 47: 50%  bucket 48: 40%  bucket 47: 60%  bucket 48: 50%  bucket 47: 70%  bucket 47: 80%  bucket 48: 60%  bucket 47: 90%  bucket 48: 70%  bucket 47: 100%  Sorting block of length 217 for bucket 47  (Using difference cover)  bucket 48: 80%  bucket 48: 90%  Sorting block time: 00:00:00Returning block of 218 for bucket 47  bucket 48: 100%  Sorting block of length 384 for bucket 48  (Using difference cover)  Sorting block time: 00:00:00Returning block of 385 for bucket 48Getting block 49 of 57  Reserving size (388) for bucket 49  Calculating Z arrays for bucket 49Getting block 50 of 57  Reserving size (388) for bucket 50  Calculating Z arrays for bucket 50  Entering block accumulator loop for bucket 49:  Entering block accumulator loop for bucket 50:  bucket 49: 10%  bucket 50: 10%  bucket 49: 20%  bucket 50: 20%  bucket 49: 30%  bucket 50: 30%  bucket 49: 40%  bucket 50: 40%  bucket 49: 50%  bucket 50: 50%  bucket 50: 60%  bucket 49: 60%  bucket 50: 70%  bucket 49: 70%  bucket 50: 80%  bucket 49: 80%  bucket 50: 90%  bucket 49: 90%  bucket 50: 100%  Sorting block of length 275 for bucket 50  (Using difference cover)  bucket 49: 100%  Sorting block of length 112 for bucket 49  (Using difference cover)  Sorting block time: 00:00:00Returning block of 276 for bucket 50  Sorting block time: 00:00:00Returning block of 113 for bucket 49Getting block 51 of 57  Reserving size (388) for bucket 51  Calculating Z arrays for bucket 51  Entering block accumulator loop for bucket 51:  bucket 51: 10%  bucket 51: 20%  bucket 51: 30%  bucket 51: 40%  bucket 51: 50%  bucket 51: 60%  bucket 51: 70%  bucket 51: 80%  bucket 51: 90%  bucket 51: 100%  Sorting block of length 350 for bucket 51  (Using difference cover)  Sorting block time: 00:00:00Returning block of 351 for bucket 51Getting block 52 of 57  Reserving size (388) for bucket 52Getting block 53 of 57  Calculating Z arrays for bucket 52  Reserving size (388) for bucket 53  Calculating Z arrays for bucket 53  Entering block accumulator loop for bucket 52:  Entering block accumulator loop for bucket 53:  bucket 52: 10%  bucket 53: 10%  bucket 52: 20%  bucket 53: 20%  bucket 52: 30%  bucket 53: 30%  bucket 52: 40%  bucket 53: 40%  bucket 52: 50%  bucket 53: 50%  bucket 52: 60%  bucket 52: 70%  bucket 53: 60%  bucket 52: 80%  bucket 53: 70%  bucket 52: 90%  bucket 53: 80%  bucket 52: 100%  Sorting block of length 378 for bucket 52  (Using difference cover)  bucket 53: 90%  bucket 53: 100%  Sorting block of length 370 for bucket 53  (Using difference cover)  Sorting block time: 00:00:00Returning block of 379 for bucket 52  Sorting block time: 00:00:00Returning block of 371 for bucket 53Getting block 54 of 57  Reserving size (388) for bucket 54  Calculating Z arrays for bucket 54  Entering block accumulator loop for bucket 54:  bucket 54: 10%Getting block 55 of 57  Reserving size (388) for bucket 55Getting block 56 of 57  bucket 54: 20%  Calculating Z arrays for bucket 55  Reserving size (388) for bucket 56  Calculating Z arrays for bucket 56  Entering block accumulator loop for bucket 55:  Entering block accumulator loop for bucket 56:  bucket 54: 30%  bucket 55: 10%  bucket 54: 40%  bucket 56: 10%  bucket 55: 20%  bucket 54: 50%  bucket 56: 20%  bucket 55: 30%  bucket 54: 60%  bucket 56: 30%  bucket 55: 40%  bucket 54: 70%  bucket 54: 80%  bucket 55: 50%  bucket 56: 40%  bucket 54: 90%  bucket 55: 60%  bucket 54: 100%  Sorting block of length 237 for bucket 54  (Using difference cover)  bucket 56: 50%  bucket 55: 70%  bucket 55: 80%  bucket 56: 60%  bucket 55: 90%  Sorting block time: 00:00:00Returning block of 238 for bucket 54  bucket 55: 100%  Sorting block of length 344 for bucket 55  (Using difference cover)  bucket 56: 70%  bucket 56: 80%  Sorting block time: 00:00:00Returning block of 345 for bucket 55  bucket 56: 90%  bucket 56: 100%  Sorting block of length 270 for bucket 56  (Using difference cover)  Sorting block time: 00:00:00Returning block of 271 for bucket 56Getting block 57 of 57  Reserving size (388) for bucket 57  Calculating Z arrays for bucket 57  Entering block accumulator loop for bucket 57:  bucket 57: 10%  bucket 57: 20%  bucket 57: 30%  bucket 57: 40%  bucket 57: 50%  bucket 57: 60%  bucket 57: 70%  bucket 57: 80%  bucket 57: 90%  bucket 57: 100%  Sorting block of length 132 for bucket 57  (Using difference cover)  Sorting block time: 00:00:00Returning block of 133 for bucket 57Exited Ebwt loopfchr[A]: 0fchr[C]: 5124fchr[G]: 10305fchr[T]: 12474fchr[$]: 16568Exiting Ebwt::buildToDisk()Returning from initFromVectorWrote 4200050 bytes to primary EBWT file: genome.rev.1.bt2.tmpWrote 4148 bytes to secondary EBWT file: genome.rev.2.bt2.tmpRe-opening _in1 and _in2 as input streamsReturning from Ebwt constructorHeaders:    len: 16568    bwtLen: 16569    sz: 4142    bwtSz: 4143    lineRate: 6    offRate: 4    offMask: 0xfffffff0    ftabChars: 10    eftabLen: 20    eftabSz: 80    ftabLen: 1048577    ftabSz: 4194308    offsLen: 1036    offsSz: 4144    lineSz: 64    sideSz: 64    sideBwtSz: 48    sideBwtLen: 192    numSides: 87    numLines: 87    ebwtTotLen: 5568    ebwtTotSz: 5568    color: 0    reverse: 1Total time for backward call to driver() for mirror index: 00:00:00
            ]]></system-out>
            <system-err><![CDATA[
            Building a SMALL indexRenaming genome.3.bt2.tmp to genome.3.bt2Renaming genome.4.bt2.tmp to genome.4.bt2Renaming genome.1.bt2.tmp to genome.1.bt2Renaming genome.2.bt2.tmp to genome.2.bt2Renaming genome.rev.1.bt2.tmp to genome.rev.1.bt2Renaming genome.rev.2.bt2.tmp to genome.rev.2.bt2100 reads; of these:  100 (100.00%) were paired; of these:    97 (97.00%) aligned concordantly 0 times    3 (3.00%) aligned concordantly exactly 1 time    0 (0.00%) aligned concordantly >1 times    ----    97 pairs aligned concordantly 0 times; of these:      7 (7.22%) aligned discordantly 1 time    ----    90 pairs aligned 0 times concordantly or discordantly; of these:      180 mates make up the pairs; of these:        156 (86.67%) aligned 0 times        24 (13.33%) aligned exactly 1 time        0 (0.00%) aligned >1 times22.00% overall alignment rate
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bowtie2 (Test #10)" name="9" time="11.862570524215698">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 11.862570524215698, "tool_id": "bowtie2", "tool_version": "2.5.3+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="datamash_reverse (Test #1)" name="0" time="61.65064191818237">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_enrichment (Test #1)" name="0" time="56.775325775146484">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_filtervariants (Test #1)" name="0" time="65.51718664169312">
        
            
            <system-out><![CDATA[
            Header format of ./var_0.tsv did not match! Please use files generated using "ivar variants" command.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="42.66087365150452">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="37.67746376991272">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="37.2593560218811">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus_pipeline (Test #1)" name="0" time="101.8953025341034">
        
            
            <system-out><![CDATA[
            Checking program versionsThis is medaka 1.7.2Program    Version    Required   Pass     bcftools   1.15.1     1.11       True     bgzip      1.16       1.11       True     minimap2   2.24       2.11       True     samtools   1.15.1     1.11       True     tabix      1.16       1.11       True     Aligning basecalls to draftCreating fai index file /galaxy/server/database/jobs_directory/000/82/working/input_assembly.fa.faiCreating mmi index file /galaxy/server/database/jobs_directory/000/82/working/input_assembly.fa.map-ont.mmi[M::mm_idx_gen::0.003*1.08] collected minimizers[M::mm_idx_gen::0.004*1.27] sorted minimizers[M::main::0.005*1.21] loaded/built the index for 1 target sequence(s)[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.005*1.21] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792[M::main] Version: 2.24-r1122[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/82/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/82/working/input_assembly.fa[M::main] Real time: 0.011 sec; CPU: 0.007 sec; Peak RSS: 0.003 GB[M::main::0.004*1.29] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.004*1.28] mid_occ = 10[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.004*1.27] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792[M::worker_pipeline::0.036*4.34] mapped 125 sequences[M::main] Version: 2.24-r1122[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/82/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/a/7/5/dataset_a75c97e8-8a84-4cc7-8d5a-4626e9fa6e57.dat[M::main] Real time: 0.038 sec; CPU: 0.158 sec; Peak RSS: 0.015 GBRunning medaka consensus[18:53:24 - Predict] Reducing threads to 2, anymore is a waste.[18:53:24 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.[18:53:24 - Predict] Setting tensorflow inter/intra-op threads to 2/1.[18:53:24 - Predict] Processing region(s): 4:0-3792[18:53:24 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5.[18:53:24 - Predict] Processing 1 long region(s) with batching.[18:53:24 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5[18:53:24 - BAMFile] Creating pool of 16 BAM file sets.[18:53:24 - Sampler] Initializing sampler for consensus of region 4:0-3792.[18:53:24 - PWorker] Running inference for 0.0M draft bases.[18:53:25 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)[18:53:25 - Sampler] Took 0.32s to make features.[18:53:25 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.[18:53:25 - PWorker] Processed 0 batches[18:53:25 - PWorker] All done, 1 remainder regions.[18:53:25 - Predict] Processing 1 short region(s).[18:53:25 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5[18:53:25 - Sampler] Initializing sampler for consensus of region 4:0-3792.[18:53:25 - PWorker] Running inference for 0.0M draft bases.[18:53:26 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)[18:53:26 - Sampler] Took 0.21s to make features.[18:53:46 - PWorker] Batches in cache: 1.[18:53:46 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 21.0s[18:53:46 - PWorker] Processed 1 batches[18:53:46 - PWorker] All done, 0 remainder regions.[18:53:46 - Predict] Finished processing all regions.[18:53:49 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:53:49 - DataIndx] Loaded 1/1 (100.00%) sample files.Polished assembly written to results/consensus.fasta, have a nice day.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus_pipeline (Test #2)" name="1" time="81.89111065864563">
        
            
            <system-out><![CDATA[
            Checking program versionsThis is medaka 1.7.2Program    Version    Required   Pass     bcftools   1.15.1     1.11       True     bgzip      1.16       1.11       True     minimap2   2.24       2.11       True     samtools   1.15.1     1.11       True     tabix      1.16       1.11       True     Aligning basecalls to draftCreating fai index file /galaxy/server/database/jobs_directory/000/85/working/input_assembly.fa.faiCreating mmi index file /galaxy/server/database/jobs_directory/000/85/working/input_assembly.fa.map-ont.mmi[M::mm_idx_gen::0.003*0.91] collected minimizers[M::mm_idx_gen::0.004*0.93] sorted minimizers[M::main::0.005*0.95] loaded/built the index for 1 target sequence(s)[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.005*0.95] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792[M::main] Version: 2.24-r1122[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/85/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/85/working/input_assembly.fa[M::main] Real time: 0.010 sec; CPU: 0.005 sec; Peak RSS: 0.003 GB[M::main::0.003*1.23] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.004*1.22] mid_occ = 10[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.004*1.21] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792[M::worker_pipeline::0.036*4.36] mapped 125 sequences[M::main] Version: 2.24-r1122[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/85/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/c/b/c/dataset_cbc020be-8683-45a5-80d9-7337d3b3151a.dat[M::main] Real time: 0.038 sec; CPU: 0.160 sec; Peak RSS: 0.014 GBRunning medaka consensus[18:54:44 - Predict] Reducing threads to 2, anymore is a waste.[18:54:44 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.[18:54:44 - Predict] Setting tensorflow inter/intra-op threads to 2/1.[18:54:44 - Predict] Processing region(s): 4:0-3792[18:54:44 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.[18:54:44 - Predict] Processing 1 long region(s) with batching.[18:54:44 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5[18:54:45 - BAMFile] Creating pool of 16 BAM file sets.[18:54:45 - Sampler] Initializing sampler for consensus of region 4:0-3792.[18:54:45 - PWorker] Running inference for 0.0M draft bases.[18:54:45 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)[18:54:45 - Sampler] Took 0.28s to make features.[18:54:45 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.[18:54:45 - PWorker] Processed 0 batches[18:54:45 - PWorker] All done, 1 remainder regions.[18:54:45 - Predict] Processing 1 short region(s).[18:54:45 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5[18:54:46 - Sampler] Initializing sampler for consensus of region 4:0-3792.[18:54:46 - PWorker] Running inference for 0.0M draft bases.[18:54:46 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)[18:54:46 - Sampler] Took 0.49s to make features.[18:55:07 - PWorker] Batches in cache: 1.[18:55:07 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 21.6s[18:55:07 - PWorker] Processed 1 batches[18:55:07 - PWorker] All done, 0 remainder regions.[18:55:07 - Predict] Finished processing all regions.[18:55:10 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:55:10 - DataIndx] Loaded 1/1 (100.00%) sample files.Polished assembly written to results/consensus.fasta, have a nice day.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_stats (Test #1)" name="0" time="52.07226204872131">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "detailed": true,  "input": {   "id": "ac2f5eddb6699c87",   "src": "hda"  },  "type": "fwd" }, "job": {  "command_line": "poretools stats --type fwd --full-tsv \u0027/galaxy/server/database/objects/1/f/0/dataset_1f0a4fb8-6f68-4671-a658-cea4dbd7bed7.dat\u0027 \u003e \u0027/galaxy/server/database/objects/e/c/c/dataset_ecc6d969-7dbe-411b-b44c-a4d29d52a1a8.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T18:55:49.422730",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-vsqk7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "ec9205d39868a4f9",  "inputs": {   "input": {    "id": "ac2f5eddb6699c87",    "src": "hda",    "uuid": "1f0a4fb8-6f68-4671-a658-cea4dbd7bed7"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3f8a8807ee342410",    "src": "hda",    "uuid": "ecc6d969-7dbe-411b-b44c-a4d29d52a1a8"   }  },  "params": {   "__input_ext": "\"fast5.tar\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "detailed": "true",   "type": "\"fwd\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T18:56:18.661240",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 52.07226204872131, "tool_id": "poretools_stats", "tool_version": "0.6.1a1.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_stats (Test #2)" name="1" time="37.43029522895813">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_stats (Test #3)" name="2" time="37.07308864593506">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_stats (Test #4)" name="3" time="38.41534876823425">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_stats (Test #5)" name="4" time="13.141504764556885">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 13.141504764556885, "tool_id": "poretools_stats", "tool_version": "0.6.1a1.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="salmonquantmerge (Test #1)" name="0" time="20.614357471466064">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 20.614357471466064, "tool_id": "salmonquantmerge", "tool_version": "1.5.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="40.33689570426941">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "018a77be700c6416",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/e/a/e/dataset_eae61030-7467-4ab8-b957-e60d392626af.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/9/2/9/dataset_929ecb74-da62-458e-85a6-808c69529b90.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:05:40.557260",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-95sxn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "6f1ef81a9563d183",  "inputs": {   "bamfile": {    "id": "018a77be700c6416",    "src": "hda",    "uuid": "eae61030-7467-4ab8-b957-e60d392626af"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859145.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:05:45"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859145.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:05:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "716aaaa89e4b429f",    "src": "hda",    "uuid": "929ecb74-da62-458e-85a6-808c69529b90"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:05:58.575451",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 40.33689570426941, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="37.100005865097046">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "cc6152cbacb2dd9d",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/7/a/8/dataset_7a858c38-7232-4a41-bc3d-1263785f4b14.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/9/f/b/dataset_9fbea5a8-060e-4314-8fef-8491db2d2a13.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:08:11.535767",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tkrfh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "d4f32fb8ce30435d",  "inputs": {   "bamfile": {    "id": "cc6152cbacb2dd9d",    "src": "hda",    "uuid": "7a858c38-7232-4a41-bc3d-1263785f4b14"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859292.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:08:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859292.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:08:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0db830a73f0b8d67",    "src": "hda",    "uuid": "9fbea5a8-060e-4314-8fef-8491db2d2a13"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:08:26.603607",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 37.100005865097046, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="35.22628045082092">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "fa3d64a51bea518c",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/e/6/4/dataset_e64d98d6-cda0-4ec5-9d06-7e455ba8a433.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/d/1/8/dataset_d186f023-4b76-41c0-bc05-8bd6f8cf3c32.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:06:20.194211",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dzlrw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "30b75f3978bb62ed",  "inputs": {   "bamfile": {    "id": "fa3d64a51bea518c",    "src": "hda",    "uuid": "e64d98d6-cda0-4ec5-9d06-7e455ba8a433"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859181.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:06:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859181.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:06:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "ee84c1f37e0da9c4",    "src": "hda",    "uuid": "d186f023-4b76-41c0-bc05-8bd6f8cf3c32"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "true",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:06:33.817423",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 35.22628045082092, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="37.40639853477478">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "d99d76447e36cf06",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/7/6/6/dataset_766a23ef-b6ef-4d71-8968-fa3ec9d5c219.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/b/d/0/dataset_bd04a972-6166-4e4b-baf8-23cfd29cb5f7.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:08:49.023562",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xfbxc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "1deae5e20fc00d74",  "inputs": {   "bamfile": {    "id": "d99d76447e36cf06",    "src": "hda",    "uuid": "766a23ef-b6ef-4d71-8968-fa3ec9d5c219"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859330.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:08:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859330.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:08:50"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "6376cb7c4e577cfe",    "src": "hda",    "uuid": "bd04a972-6166-4e4b-baf8-23cfd29cb5f7"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "true",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:09:04.004047",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 37.40639853477478, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="36.9334282875061">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "70d554372f8466af",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/8/3/a/dataset_83a5ab97-c90a-4bf2-bb63-956fff796c56.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/2/e/a/dataset_2eab683a-54e1-48ab-a177-c5cc819727c3.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:06:56.459730",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-snht2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "3cfc7668b3d087be",  "inputs": {   "bamfile": {    "id": "70d554372f8466af",    "src": "hda",    "uuid": "83a5ab97-c90a-4bf2-bb63-956fff796c56"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859218.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:06:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859218.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:06:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "7555c98fa9882312",    "src": "hda",    "uuid": "2eab683a-54e1-48ab-a177-c5cc819727c3"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "true"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:07:10.737961",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 36.9334282875061, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="37.479658365249634">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "31efcc275e3199f5",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/c/e/1/dataset_ce18c280-d3da-4e53-916a-ebdbb9871350.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/9/3/1/dataset_931dd9d5-0f9a-423b-bf45-5a35e2e2b7b4.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:09:26.566394",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lh4rm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "11701c583ae88187",  "inputs": {   "bamfile": {    "id": "31efcc275e3199f5",    "src": "hda",    "uuid": "ce18c280-d3da-4e53-916a-ebdbb9871350"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859368.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:09:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859368.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:09:28"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0745d322b545ae66",    "src": "hda",    "uuid": "931dd9d5-0f9a-423b-bf45-5a35e2e2b7b4"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "true"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:09:41.565257",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 37.479658365249634, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="37.62509608268738">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "bf821f8b3c7c066d",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/5/2/b/dataset_52b99180-f991-414f-96a7-5cde48a23738.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/a/f/8/dataset_af8fddd7-d4ed-4060-8be8-f527a5e66f98.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/e/7/5/dataset_e75ba97c-c7c5-4538-9d13-04915672e0ae.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:07:33.224847",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kxxbx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "24916164a2024c72",  "inputs": {   "bamfile": {    "id": "bf821f8b3c7c066d",    "src": "hda",    "uuid": "52b99180-f991-414f-96a7-5cde48a23738"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859255.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:07:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859254.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:07:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f96898414ab06ffb",    "src": "hda",    "uuid": "af8fddd7-d4ed-4060-8be8-f527a5e66f98"   },   "stats_output": {    "id": "94ceb74ef2fd0a0d",    "src": "hda",    "uuid": "e75ba97c-c7c5-4538-9d13-04915672e0ae"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "true",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:07:48.069718",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmpo88_j64mstats.txt v. /tmp/tmpcw8s6rchstats.txt )\n--- local_file\n+++ history_data\n@@ -1,17 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -m t -s -f /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_9e69bd59-3165-4ede-92bf-2f438627a6a1.dat -O BAM coordsort.sam /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_ccf59cfe-ffbd-41d5-9412-d7a7ac6e65d9.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n-\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 37.62509608268738, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="36.27791881561279">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "c4b8523c5996d2de",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/8/6/1/dataset_8610f7bf-44e6-404b-b15f-6f7eb2cb9e69.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/5/1/7/dataset_517da01b-c4f8-41fb-973a-9088a9749c2a.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/4/b/6/dataset_4b6c82c1-c5ee-4557-b095-b0e8a812f988.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-20T19:10:04.019177",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kxvw2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "e3f2d8d00d9ed5b7",  "inputs": {   "bamfile": {    "id": "c4b8523c5996d2de",    "src": "hda",    "uuid": "8610f7bf-44e6-404b-b15f-6f7eb2cb9e69"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726859405.0000000",    "title": "Job End Time",    "value": "2024-09-20 19:10:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726859405.0000000",    "title": "Job Start Time",    "value": "2024-09-20 19:10:05"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "bb50afd5aebd2ce0",    "src": "hda",    "uuid": "517da01b-c4f8-41fb-973a-9088a9749c2a"   },   "stats_output": {    "id": "d7771aa0fe224493",    "src": "hda",    "uuid": "4b6c82c1-c5ee-4557-b095-b0e8a812f988"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "true",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:10:17.820092",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmpm1vy2fzrstats.txt v. /tmp/tmpy703niyzstats.txt )\n--- local_file\n+++ history_data\n@@ -1,17 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -m t -s -f /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_9e69bd59-3165-4ede-92bf-2f438627a6a1.dat -O BAM coordsort.sam /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_ccf59cfe-ffbd-41d5-9412-d7a7ac6e65d9.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n-\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 36.27791881561279, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_compute_graph (Test #1)" name="0" time="0.208160400390625">
        
            <error type="error" message="Input staging problem: Test input file (run_pca.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (run_pca.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.208160400390625, "tool_id": "scanpy_compute_graph", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_compute_graph (Test #1)" name="0" time="0.2113485336303711">
        
            <error type="error" message="Input staging problem: Test input file (run_pca.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (run_pca.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2113485336303711, "tool_id": "scanpy_compute_graph", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_compute_graph (Test #2)" name="1" time="0.1427764892578125">
        
            <error type="error" message="Input staging problem: Test input file (run_pca.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (run_pca.h5) cannot be found.", "status": "error", "test_index": 1, "time_seconds": 0.1427764892578125, "tool_id": "scanpy_compute_graph", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_compute_graph (Test #2)" name="1" time="0.14208221435546875">
        
            <error type="error" message="Input staging problem: Test input file (run_pca.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (run_pca.h5) cannot be found.", "status": "error", "test_index": 1, "time_seconds": 0.14208221435546875, "tool_id": "scanpy_compute_graph", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_remove_confounders (Test #1)" name="0" time="73.76384377479553">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_remove_confounders (Test #2)" name="1" time="39.79010891914368">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #1)" name="0" time="42.411839962005615">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #2)" name="1" time="36.418046951293945">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #11)" name="10" time="23.442609310150146">
        
            <error type="error" message="parameter 'ref_builtin': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_builtin\u0027: an invalid option (None) was selected, please verify", "inputs": {  "adv|fraction": "0.15",  "guide|guide_source|guide_gff_select": "cached",  "guide|use_guide": "yes",  "input_options|error_splice": "30",  "input_options|input_bam": {   "id": "d1fc0209efd803dd",   "src": "hda"  },  "input_options|input_mode": "long_reads" }, "status": "error", "test_index": 10, "time_seconds": 23.442609310150146, "tool_id": "stringtie", "tool_version": "2.2.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="stringtie (Test #12)" name="11" time="39.96655201911926">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #13)" name="12" time="36.2331440448761">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #3)" name="2" time="13.054248809814453">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 13.054248809814453, "tool_id": "stringtie", "tool_version": "2.2.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="stringtie (Test #4)" name="3" time="37.22523021697998">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #5)" name="4" time="30.472400188446045">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "guide|coverage_file": true,  "guide|guide_source|guide_gff_select": "history",  "guide|guide_source|ref_hist": {   "id": "5cf9535eb50d9fb2",   "src": "hda"  },  "guide|special_outputs|special_outputs_select": "ballgown",  "guide|use_guide": "yes",  "input_options|input_bam": {   "id": "f0c1af1647499f1f",   "src": "hda"  },  "input_options|input_mode": "short_reads" }, "job": {  "command_line": "mkdir -p ./special_de_output/sample1/ \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/9/b/7/dataset_9b778e09-2f5a-4a42-aae1-36252dfc8bc5.dat\u0027 guide.gff \u0026\u0026  stringtie \u0027/galaxy/server/database/objects/d/d/d/dataset_ddd4d124-6e95-42eb-99e7-fc29d393748d.dat\u0027  -o \u0027/galaxy/server/database/objects/6/a/5/dataset_6a5bbac6-3c3f-4a7a-bbbc-535a091c22df.dat\u0027 -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff -C \u0027/galaxy/server/database/objects/7/e/3/dataset_7e3526e8-0f79-49f4-986e-30ffc2452fe7.dat\u0027  -b ./special_de_output/sample1/  -f \u00270.01\u0027 -m \u0027200\u0027 -a \u002710\u0027 -j \u00271\u0027 -c \u00271\u0027 -g \u002750\u0027 -M \u00271.0\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T19:00:58.563499",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-zd5cz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "f6974c45d8f9db72",  "inputs": {   "guide|guide_source|ref_hist": {    "id": "5cf9535eb50d9fb2",    "src": "hda",    "uuid": "9b778e09-2f5a-4a42-aae1-36252dfc8bc5"   },   "input_options|input_bam": {    "id": "f0c1af1647499f1f",    "src": "hda",    "uuid": "ddd4d124-6e95-42eb-99e7-fc29d393748d"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "coverage": {    "id": "ffa20ed21bac5e66",    "src": "hda",    "uuid": "7e3526e8-0f79-49f4-986e-30ffc2452fe7"   },   "exon_expression": {    "id": "2fa9ab62c7c989fe",    "src": "hda",    "uuid": "bdfd191e-2254-4944-a6f9-7d00b391646a"   },   "exon_transcript_mapping": {    "id": "ae6c41b573268a80",    "src": "hda",    "uuid": "7e780508-c0e5-45f2-a4fa-e7d75b468366"   },   "intron_expression": {    "id": "16c7a5c501cdc77a",    "src": "hda",    "uuid": "641ee746-623e-4635-a5f2-97c6ad583147"   },   "intron_transcript_mapping": {    "id": "cecafb6498e1a751",    "src": "hda",    "uuid": "470f6f89-5d23-483f-9510-0699fbcd381f"   },   "output_gtf": {    "id": "7e9a18ae76dae301",    "src": "hda",    "uuid": "6a5bbac6-3c3f-4a7a-bbbc-535a091c22df"   },   "transcript_expression": {    "id": "f617cacb2d1b4ef2",    "src": "hda",    "uuid": "5a4b6f9c-ba4e-4257-ab96-d1a8ee557b45"   }  },  "params": {   "__input_ext": "\"input\"",   "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "guide": "{\"__current_case__\": 1, \"coverage_file\": true, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 112, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 0, \"special_outputs_select\": \"ballgown\"}, \"use_guide\": \"yes\"}",   "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 111, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}",   "rna_strandness": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-20T19:01:04.925700",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 30.472400188446045, "tool_id": "stringtie", "tool_version": "2.2.3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #6)" name="5" time="40.77633714675903">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #7)" name="6" time="38.10378074645996">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #8)" name="7" time="38.04044198989868">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="stringtie (Test #9)" name="8" time="12.836848020553589">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 12.836848020553589, "tool_id": "stringtie", "tool_version": "2.2.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="stringtie (Test #10)" name="9" time="21.277347326278687">
        
            <error type="error" message="parameter 'ref_builtin': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027ref_builtin\u0027: an invalid option (None) was selected, please verify", "inputs": {  "adv|fraction": "0.15",  "guide|guide_source|guide_gff_select": "cached",  "guide|use_guide": "yes",  "input_options|input_bam": {   "id": "1deae5e20fc00d74",   "src": "hda"  },  "input_options|input_mode": "long_reads" }, "status": "error", "test_index": 9, "time_seconds": 21.277347326278687, "tool_id": "stringtie", "tool_version": "2.2.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #1)" name="0" time="49.75173473358154">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/0/8/a/dataset_08aad371-146a-4af7-9ca6-abd97b3b2f42.dat --log2stderr# job started at Fri Sep 20 18:35:59 2024 on gxy-6fxpz-w2qst -- 29a4bd96-79bb-4db7-8be4-4622d72f8e4f# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/0/8/a/dataset_08aad371-146a-4af7-9ca6-abd97b3b2f42.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:35:59,200 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/0/8/a/dataset_08aad371-146a-4af7-9ca6-abd97b3b2f42.dat --log2stderr2024-09-20 18:35:59,227 INFO Input Reads: 12032024-09-20 18:35:59,228 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:35:59,228 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:35:59 2024 --  0.86  0.24  0.00  0.00 -- 29a4bd96-79bb-4db7-8be4-4622d72f8e4f
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #1)" name="0" time="36.392282247543335">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/3/c/b/dataset_3cb23835-3aa0-44aa-bb04-ef87ebec1a40.dat --log2stderr# job started at Fri Sep 20 18:39:58 2024 on gxy-fgbmh-8kbn9 -- 712f762d-ad90-48e8-90ea-f5b31ae588c8# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/3/c/b/dataset_3cb23835-3aa0-44aa-bb04-ef87ebec1a40.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:39:58,875 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/3/c/b/dataset_3cb23835-3aa0-44aa-bb04-ef87ebec1a40.dat --log2stderr2024-09-20 18:39:58,902 INFO Input Reads: 12032024-09-20 18:39:58,902 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:39:58,902 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:39:58 2024 --  0.87  0.24  0.00  0.00 -- 712f762d-ad90-48e8-90ea-f5b31ae588c8
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #1)" name="0" time="37.3676655292511">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/7/1/dataset_87103521-58b5-44d1-9cf0-fe17df40cb04.dat --log2stderr# job started at Fri Sep 20 18:44:14 2024 on gxy-ssw6m-mxmvw -- 13b507fe-3bda-42ad-9ee5-491d2e5cc8e1# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/8/7/1/dataset_87103521-58b5-44d1-9cf0-fe17df40cb04.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:44:14,198 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/7/1/dataset_87103521-58b5-44d1-9cf0-fe17df40cb04.dat --log2stderr2024-09-20 18:44:14,227 INFO Input Reads: 12032024-09-20 18:44:14,227 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:44:14,227 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:44:14 2024 --  0.89  0.24  0.00  0.00 -- 13b507fe-3bda-42ad-9ee5-491d2e5cc8e1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #2)" name="1" time="40.39160680770874">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/6/c/6/dataset_6c65ae4a-1dc0-47c5-be7a-077c0eee83b7.dat --log2stderr# job started at Fri Sep 20 18:36:41 2024 on gxy-kvqsr-ndhpx -- 146ca040-4620-41f2-9d6d-dcf5727a5ae6# pid: 26, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/6/c/6/dataset_6c65ae4a-1dc0-47c5-be7a-077c0eee83b7.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:36:41,973 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/6/c/6/dataset_6c65ae4a-1dc0-47c5-be7a-077c0eee83b7.dat --log2stderr2024-09-20 18:36:41,999 INFO Input Reads: 12032024-09-20 18:36:41,999 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:36:41,999 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:36:41 2024 --  0.85  0.26  0.00  0.00 -- 146ca040-4620-41f2-9d6d-dcf5727a5ae6
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #2)" name="1" time="40.1048150062561">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/2/1/4/dataset_2144d9a0-cca8-497a-acd9-473852918ee1.dat --log2stderr# job started at Fri Sep 20 18:40:39 2024 on gxy-qnd6k-hrzvt -- 9b2f8b6e-c376-4231-a6f8-bf1d6c3f71f5# pid: 26, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/2/1/4/dataset_2144d9a0-cca8-497a-acd9-473852918ee1.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:40:39,771 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/2/1/4/dataset_2144d9a0-cca8-497a-acd9-473852918ee1.dat --log2stderr2024-09-20 18:40:39,799 INFO Input Reads: 12032024-09-20 18:40:39,799 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:40:39,799 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:40:39 2024 --  0.88  0.24  0.00  0.00 -- 9b2f8b6e-c376-4231-a6f8-bf1d6c3f71f5
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #2)" name="1" time="40.50876188278198">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/f/c/6/dataset_fc676e41-0d4e-48f5-839e-e922251b7078.dat --log2stderr# job started at Fri Sep 20 18:44:55 2024 on gxy-mnrz6-j9fpq -- 3c7d3b51-117c-4d79-8845-9027de786e3f# pid: 26, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : False# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/f/c/6/dataset_fc676e41-0d4e-48f5-839e-e922251b7078.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:44:55,267 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/f/c/6/dataset_fc676e41-0d4e-48f5-839e-e922251b7078.dat --log2stderr2024-09-20 18:44:55,294 INFO Input Reads: 12032024-09-20 18:44:55,294 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:44:55,294 INFO Number of (post deduplication) reads counted: 141# job finished in 0 seconds at Fri Sep 20 18:44:55 2024 --  0.87  0.25  0.00  0.00 -- 3c7d3b51-117c-4d79-8845-9027de786e3f
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #3)" name="2" time="36.34103751182556">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/d/b/8/dataset_db84c508-daf2-43b9-a9fa-70e2c5359a5e.dat --log2stderr# job started at Fri Sep 20 18:37:18 2024 on gxy-wnpcr-5c4wf -- 8c0d2c13-e085-439c-8983-121e19f3e3a6# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/d/b/8/dataset_db84c508-daf2-43b9-a9fa-70e2c5359a5e.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:37:18,251 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/d/b/8/dataset_db84c508-daf2-43b9-a9fa-70e2c5359a5e.dat --log2stderr2024-09-20 18:37:18,278 INFO Input Reads: 12032024-09-20 18:37:18,278 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:37:18,278 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:37:18 2024 --  0.87  0.22  0.00  0.00 -- 8c0d2c13-e085-439c-8983-121e19f3e3a6
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #3)" name="2" time="36.26841950416565">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/2/b/f/dataset_2bfc7359-598f-4bbe-bec3-acf46a130017.dat --log2stderr# job started at Fri Sep 20 18:41:15 2024 on gxy-z862n-cnrw6 -- 687930b8-54c6-4030-970c-4946f5ca8d23# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/2/b/f/dataset_2bfc7359-598f-4bbe-bec3-acf46a130017.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:41:15,756 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/2/b/f/dataset_2bfc7359-598f-4bbe-bec3-acf46a130017.dat --log2stderr2024-09-20 18:41:15,785 INFO Input Reads: 12032024-09-20 18:41:15,785 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:41:15,785 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:41:15 2024 --  0.88  0.24  0.00  0.00 -- 687930b8-54c6-4030-970c-4946f5ca8d23
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #3)" name="2" time="37.508744955062866">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/1/6/5/dataset_16507f1e-ba9c-451a-9ab6-c89edd4c5ec1.dat --log2stderr# job started at Fri Sep 20 18:45:32 2024 on gxy-pp75j-b7gbc -- 8b7f4eb6-45fa-448c-8937-21925e553619# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/1/6/5/dataset_16507f1e-ba9c-451a-9ab6-c89edd4c5ec1.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : False2024-09-20 18:45:32,909 INFO command: count  --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/1/6/5/dataset_16507f1e-ba9c-451a-9ab6-c89edd4c5ec1.dat --log2stderr2024-09-20 18:45:32,938 INFO Input Reads: 12032024-09-20 18:45:32,938 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:45:32,938 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:45:32 2024 --  0.88  0.23  0.00  0.00 -- 8b7f4eb6-45fa-448c-8937-21925e553619
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #4)" name="3" time="37.01186561584473">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/4/3/2/dataset_432d7284-c3e4-4f11-a31d-26e6f50ea5d6.dat --log2stderr# job started at Fri Sep 20 18:37:55 2024 on gxy-hb9vf-tfrx5 -- b223554b-ba19-42f0-8a4a-392a1bf00e36# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/4/3/2/dataset_432d7284-c3e4-4f11-a31d-26e6f50ea5d6.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:37:55,390 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/4/3/2/dataset_432d7284-c3e4-4f11-a31d-26e6f50ea5d6.dat --log2stderr2024-09-20 18:37:55,419 INFO Input Reads: 12032024-09-20 18:37:55,419 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:37:55,419 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:37:55 2024 --  0.87  0.23  0.00  0.00 -- b223554b-ba19-42f0-8a4a-392a1bf00e36
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #4)" name="3" time="27.575150728225708">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "advanced|random_seed": "123456789",  "bc|extract_umi_method": "umis",  "input": {   "id": "dcd636cee03ab257",   "src": "hda"  },  "sc|gene_tag": "XF",  "sc|per_cell": true,  "sc|skip_tags_regex": "^[__|Unassigned]",  "umi|method": "directional",  "wide_format_cell_counts": true }, "job": {  "command_line": "ln -sf \u0027/galaxy/server/database/objects/6/b/6/dataset_6b6152a6-c3d6-47e9-9758-31f98f49d1d2.dat\u0027 \u0027input.bam\u0027 \u0026\u0026 ln -sf \u0027/galaxy/server/database/objects/_metadata_files/7/4/e/metadata_74ec7b1e-650e-4007-975c-c742258122f6.dat\u0027 \u0027input.bam.bai\u0027 \u0026\u0026   umi_tools count \u0027--wide-format-cell-counts\u0027  --extract-umi-method umis   --method directional --edit-distance-threshold 1  --soft-clip-threshold 4    --gene-tag \u0027XF\u0027 --skip-tags-regex \u0027^[__Unassigned]\u0027  --per-cell   --mapping-quality 0 --unmapped-reads discard   --subset 1.0      --random-seed=\u0027123456789\u0027  -I \u0027input.bam\u0027 -S \u0027/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat\u0027  --log2stderr",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T18:41:49.604851",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-gmr6z",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "dcd636cee03ab257",  "inputs": {   "input": {    "id": "dcd636cee03ab257",    "src": "hda",    "uuid": "6b6152a6-c3d6-47e9-9758-31f98f49d1d2"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_counts": {    "id": "4f3493187115e48d",    "src": "hda",    "uuid": "8cb2f07e-fe8a-46d9-997b-332c07dd3ae2"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced": "{\"random_seed\": \"123456789\"}",   "bc": "{\"__current_case__\": 2, \"extract_umi_method\": \"umis\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cond_extra": "{\"__current_case__\": 0, \"prepender\": \"none\"}",   "dbkey": "\"?\"",   "log": "false",   "sambam": "{\"chimeric_pairs\": null, \"chrom\": \"\", \"ignore_tlen\": false, \"ignore_umi\": false, \"mapping_quality\": \"0\", \"paired\": false, \"subset\": \"1.0\", \"unmapped_reads\": \"discard\", \"unpaired_reads\": null}",   "sc": "{\"assigned_status_tag\": null, \"gene_tag\": \"XF\", \"gene_transcript_map\": null, \"per_cell\": true, \"per_contig\": false, \"skip_tags_regex\": \"^[__|Unassigned]\"}",   "umi": "{\"edit_distance_threshold\": \"1\", \"method\": \"directional\", \"read_length\": false, \"soft_clip_threshold\": \"4\", \"spliced_is_unique\": false}",   "wide_format_cell_counts": "true"  },  "state": "error",  "stderr": "# UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n# job started at Fri Sep 20 18:41:52 2024 on gxy-gmr6z-htvwc -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XF\n# gene_transcript_map                     : None\n# get_umi_method                          : umis\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : directional\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 123456789\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^[__Unassigned]\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:41:52,280 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n2024-09-20 18:41:52,308 INFO Input Reads: 1203\n2024-09-20 18:41:52,309 INFO Read skipped - assigned tag matches skip_regex: 120\n2024-09-20 18:41:52,309 INFO Number of (post deduplication) reads counted: 145\n# job finished in 0 seconds at Fri Sep 20 18:41:52 2024 --  0.87  0.25  0.00  0.00 -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2",  "tool_stderr": "# UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n# job started at Fri Sep 20 18:41:52 2024 on gxy-gmr6z-htvwc -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XF\n# gene_transcript_map                     : None\n# get_umi_method                          : umis\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : directional\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 123456789\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^[__Unassigned]\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:41:52,280 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n2024-09-20 18:41:52,308 INFO Input Reads: 1203\n2024-09-20 18:41:52,309 INFO Read skipped - assigned tag matches skip_regex: 120\n2024-09-20 18:41:52,309 INFO Number of (post deduplication) reads counted: 145\n# job finished in 0 seconds at Fri Sep 20 18:41:52 2024 --  0.87  0.25  0.00  0.00 -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n",  "tool_stdout": "",  "update_time": "2024-09-20T18:41:55.991641",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2, exit_code: None, stderr: # UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n# job started at Fri Sep 20 18:41:52 2024 on gxy-gmr6z-htvwc -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XF\n# gene_transcript_map                     : None\n# get_umi_method                          : umis\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : directional\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 123456789\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^[__Unassigned]\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:41:52,280 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n2024-09-20 18:41:52,308 INFO Input Reads: 1203\n2024-09-20 18:41:52,309 INFO Read skipped - assigned tag matches skip_regex: 120\n2024-09-20 18:41:52,309 INFO Number of (post deduplication) reads counted: 145\n# job finished in 0 seconds at Fri Sep 20 18:41:52 2024 --  0.87  0.25  0.00  0.00 -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2, exit_code: None, stderr: # UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n# job started at Fri Sep 20 18:41:52 2024 on gxy-gmr6z-htvwc -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XF\n# gene_transcript_map                     : None\n# get_umi_method                          : umis\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : directional\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 123456789\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^[__Unassigned]\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:41:52,280 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr\n2024-09-20 18:41:52,308 INFO Input Reads: 1203\n2024-09-20 18:41:52,309 INFO Read skipped - assigned tag matches skip_regex: 120\n2024-09-20 18:41:52,309 INFO Number of (post deduplication) reads counted: 145\n# job finished in 0 seconds at Fri Sep 20 18:41:52 2024 --  0.87  0.25  0.00  0.00 -- 5104e47d-21e6-47fe-9832-a1e6da304f15\n." ], "status": "failure", "test_index": 3, "time_seconds": 27.575150728225708, "tool_id": "umi_tools_count", "tool_version": "1.1.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr# job started at Fri Sep 20 18:41:52 2024 on gxy-gmr6z-htvwc -- 5104e47d-21e6-47fe-9832-a1e6da304f15# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:41:52,280 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/8/c/b/dataset_8cb2f07e-fe8a-46d9-997b-332c07dd3ae2.dat --log2stderr2024-09-20 18:41:52,308 INFO Input Reads: 12032024-09-20 18:41:52,309 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:41:52,309 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:41:52 2024 --  0.87  0.25  0.00  0.00 -- 5104e47d-21e6-47fe-9832-a1e6da304f15
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #4)" name="3" time="38.23677349090576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/9/4/8/dataset_9487c1ba-07ae-4cbe-9a30-d188b2660aac.dat --log2stderr# job started at Fri Sep 20 18:46:10 2024 on gxy-w5wtm-hnzwz -- ec24a124-856d-4167-88f8-86aa8584682a# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XF# gene_transcript_map                     : None# get_umi_method                          : umis# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : directional# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 123456789# read_length                             : False# short_help                              : None# skip_regex                              : ^[__Unassigned]# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/9/4/8/dataset_9487c1ba-07ae-4cbe-9a30-d188b2660aac.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:46:10,691 INFO command: count --wide-format-cell-counts --extract-umi-method umis --method directional --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XF --skip-tags-regex ^[__Unassigned] --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=123456789 -I input.bam -S /galaxy/server/database/objects/9/4/8/dataset_9487c1ba-07ae-4cbe-9a30-d188b2660aac.dat --log2stderr2024-09-20 18:46:10,720 INFO Input Reads: 12032024-09-20 18:46:10,720 INFO Read skipped - assigned tag matches skip_regex: 1202024-09-20 18:46:10,720 INFO Number of (post deduplication) reads counted: 145# job finished in 0 seconds at Fri Sep 20 18:46:10 2024 --  0.86  0.24  0.00  0.00 -- ec24a124-856d-4167-88f8-86aa8584682a
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #5)" name="4" time="38.535815477371216">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/6/3/a/dataset_63a0a54f-e0f7-4977-86ab-275d9a9c5873.dat --log2stderr# job started at Fri Sep 20 18:38:32 2024 on gxy-dnzzn-xrkm6 -- caa0e098-75c0-4e14-803d-dad9605763de# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/6/3/a/dataset_63a0a54f-e0f7-4977-86ab-275d9a9c5873.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:38:32,889 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/6/3/a/dataset_63a0a54f-e0f7-4977-86ab-275d9a9c5873.dat --log2stderr2024-09-20 18:38:32,903 INFO Input Reads: 392024-09-20 18:38:32,903 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:38:32 2024 --  0.82  0.22  0.00  0.00 -- caa0e098-75c0-4e14-803d-dad9605763de
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #5)" name="4" time="37.26031470298767">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/c/3/b/dataset_c3bb9bc0-9722-4601-a1fa-325c53b33b49.dat --log2stderr# job started at Fri Sep 20 18:42:20 2024 on gxy-ssgpr-nhgnr -- b5043539-e387-4ddc-a9f7-1698dd2bbada# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/c/3/b/dataset_c3bb9bc0-9722-4601-a1fa-325c53b33b49.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:42:20,902 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/c/3/b/dataset_c3bb9bc0-9722-4601-a1fa-325c53b33b49.dat --log2stderr2024-09-20 18:42:20,916 INFO Input Reads: 392024-09-20 18:42:20,916 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:42:20 2024 --  0.87  0.25  0.00  0.00 -- b5043539-e387-4ddc-a9f7-1698dd2bbada
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #5)" name="4" time="37.10670590400696">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/0/d/5/dataset_0d5650fa-3bf4-4abc-bc6a-faec5aa3d8dd.dat --log2stderr# job started at Fri Sep 20 18:46:48 2024 on gxy-pdntl-lwzm9 -- 1b15e6ef-4c44-4486-8d89-7ff7146225c3# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/0/d/5/dataset_0d5650fa-3bf4-4abc-bc6a-faec5aa3d8dd.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:46:48,519 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/0/d/5/dataset_0d5650fa-3bf4-4abc-bc6a-faec5aa3d8dd.dat --log2stderr2024-09-20 18:46:48,532 INFO Input Reads: 392024-09-20 18:46:48,532 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:46:48 2024 --  0.88  0.23  0.00  0.00 -- 1b15e6ef-4c44-4486-8d89-7ff7146225c3
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #6)" name="5" time="12.11051630973816">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 12.11051630973816, "tool_id": "umi_tools_count", "tool_version": "1.1.2+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #6)" name="5" time="38.35005307197571">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/6/a/6/dataset_6a6f0211-6355-4042-8f60-4cafbe7a0da9.dat --log2stderr# job started at Fri Sep 20 18:42:58 2024 on gxy-wc47n-69xt2 -- ad4d2f40-fa82-4ea2-8abf-f21ce1f79653# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/6/a/6/dataset_6a6f0211-6355-4042-8f60-4cafbe7a0da9.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:42:58,682 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/6/a/6/dataset_6a6f0211-6355-4042-8f60-4cafbe7a0da9.dat --log2stderr2024-09-20 18:42:58,697 INFO Input Reads: 392024-09-20 18:42:58,697 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:42:58 2024 --  0.90  0.21  0.00  0.00 -- ad4d2f40-fa82-4ea2-8abf-f21ce1f79653
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #6)" name="5" time="26.51866388320923">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "advanced|random_seed": "0",  "cond_extra|custom_label": "test",  "cond_extra|prepender": "string",  "input": {   "id": "64dd103aa90e69f6",   "src": "hda"  },  "sc|gene_tag": "XT",  "sc|per_cell": true,  "umi|method": "unique" }, "job": {  "command_line": "ln -sf \u0027/galaxy/server/database/objects/2/3/f/dataset_23f55be4-4fb1-4bd5-aee3-b73524ea40fe.dat\u0027 \u0027input.bam\u0027 \u0026\u0026 ln -sf \u0027/galaxy/server/database/objects/_metadata_files/e/6/8/metadata_e68ee132-b0ee-406b-816f-8aef787a827b.dat\u0027 \u0027input.bam.bai\u0027 \u0026\u0026   umi_tools count \u0027--wide-format-cell-counts\u0027  --extract-umi-method read_id --umi-separator \u0027_\u0027   --method unique --edit-distance-threshold 1  --soft-clip-threshold 4    --gene-tag \u0027XT\u0027  --per-cell   --mapping-quality 0 --unmapped-reads discard   --subset 1.0      --random-seed=\u00270\u0027  -I \u0027input.bam\u0027 -S \u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027  --log2stderr  \u0026\u0026 sed -i -r \u00271s|\\b([ACGT]+)\\b|\u0027\"test\"\u0027_\\1|g\u0027 \u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-20T18:47:21.723242",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-prtj2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "95908cc8fe31a0e2",  "id": "64dd103aa90e69f6",  "inputs": {   "input": {    "id": "64dd103aa90e69f6",    "src": "hda",    "uuid": "23f55be4-4fb1-4bd5-aee3-b73524ea40fe"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_counts": {    "id": "46f40073fc1125f9",    "src": "hda",    "uuid": "d4ca365b-ecc7-4c0a-bb95-5736e187eb9c"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced": "{\"random_seed\": \"0\"}",   "bc": "{\"__current_case__\": 0, \"extract_umi_method\": \"read_id\", \"umi_separator\": \"_\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cond_extra": "{\"__current_case__\": 2, \"custom_label\": \"test\", \"prepender\": \"string\"}",   "dbkey": "\"?\"",   "log": "false",   "sambam": "{\"chimeric_pairs\": null, \"chrom\": \"\", \"ignore_tlen\": false, \"ignore_umi\": false, \"mapping_quality\": \"0\", \"paired\": false, \"subset\": \"1.0\", \"unmapped_reads\": \"discard\", \"unpaired_reads\": null}",   "sc": "{\"assigned_status_tag\": null, \"gene_tag\": \"XT\", \"gene_transcript_map\": null, \"per_cell\": true, \"per_contig\": false, \"skip_tags_regex\": \"\"}",   "umi": "{\"edit_distance_threshold\": \"1\", \"method\": \"unique\", \"read_length\": false, \"soft_clip_threshold\": \"4\", \"spliced_is_unique\": false}",   "wide_format_cell_counts": "true"  },  "state": "error",  "stderr": "# UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n# job started at Fri Sep 20 18:47:24 2024 on gxy-prtj2-cvpjm -- 6181a830-7b40-4ff3-9687-3973a28127fc\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XT\n# gene_transcript_map                     : None\n# get_umi_method                          : read_id\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : unique\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 0\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^(__|Unassigned)\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:47:24,201 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n2024-09-20 18:47:24,214 INFO Input Reads: 39\n2024-09-20 18:47:24,214 INFO Number of (post deduplication) reads counted: 12\n# job finished in 0 seconds at Fri Sep 20 18:47:24 2024 --  0.86  0.21  0.00  0.00 -- 6181a830-7b40-4ff3-9687-3973a28127fc\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2",  "tool_stderr": "# UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n# job started at Fri Sep 20 18:47:24 2024 on gxy-prtj2-cvpjm -- 6181a830-7b40-4ff3-9687-3973a28127fc\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XT\n# gene_transcript_map                     : None\n# get_umi_method                          : read_id\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : unique\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 0\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^(__|Unassigned)\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:47:24,201 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n2024-09-20 18:47:24,214 INFO Input Reads: 39\n2024-09-20 18:47:24,214 INFO Number of (post deduplication) reads counted: 12\n# job finished in 0 seconds at Fri Sep 20 18:47:24 2024 --  0.86  0.21  0.00  0.00 -- 6181a830-7b40-4ff3-9687-3973a28127fc\n",  "tool_stdout": "",  "update_time": "2024-09-20T18:47:27.067114",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2, exit_code: None, stderr: # UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n# job started at Fri Sep 20 18:47:24 2024 on gxy-prtj2-cvpjm -- 6181a830-7b40-4ff3-9687-3973a28127fc\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XT\n# gene_transcript_map                     : None\n# get_umi_method                          : read_id\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : unique\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 0\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^(__|Unassigned)\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:47:24,201 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n2024-09-20 18:47:24,214 INFO Input Reads: 39\n2024-09-20 18:47:24,214 INFO Number of (post deduplication) reads counted: 12\n# job finished in 0 seconds at Fri Sep 20 18:47:24 2024 --  0.86  0.21  0.00  0.00 -- 6181a830-7b40-4ff3-9687-3973a28127fc\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.2+galaxy2, exit_code: None, stderr: # UMI-tools version: 1.1.2\n# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n# job started at Fri Sep 20 18:47:24 2024 on gxy-prtj2-cvpjm -- 6181a830-7b40-4ff3-9687-3973a28127fc\n# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64\n# assigned_tag                            : None\n# cell_tag                                : None\n# cell_tag_delim                          : None\n# cell_tag_split                          : -\n# chimeric_pairs                          : use\n# chrom                                   : None\n# compresslevel                           : 6\n# filter_umi                              : None\n# gene_tag                                : XT\n# gene_transcript_map                     : None\n# get_umi_method                          : read_id\n# ignore_tlen                             : False\n# ignore_umi                              : False\n# in_sam                                  : False\n# log2stderr                              : True\n# loglevel                                : 1\n# mapping_quality                         : 0\n# method                                  : unique\n# no_sort_output                          : False\n# out_sam                                 : False\n# output_unmapped                         : False\n# paired                                  : False\n# per_cell                                : True\n# per_contig                              : False\n# per_gene                                : False\n# random_seed                             : 0\n# read_length                             : False\n# short_help                              : None\n# skip_regex                              : ^(__|Unassigned)\n# soft_clip_threshold                     : 4.0\n# spliced                                 : False\n# stderr                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdin                                   : \u003c_io.TextIOWrapper name=\u0027input.bam\u0027 mode=\u0027r\u0027 encoding=\u0027UTF-8\u0027\u003e\n# stdlog                                  : \u003c_io.TextIOWrapper name=\u0027\u003cstderr\u003e\u0027 mode=\u0027w\u0027 encoding=\u0027utf-8\u0027\u003e\n# stdout                                  : \u003c_io.TextIOWrapper name=\u0027/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat\u0027 mode=\u0027w\u0027 encoding=\u0027UTF-8\u0027\u003e\n# subset                                  : 1.0\n# threshold                               : 1\n# timeit_file                             : None\n# timeit_header                           : None\n# timeit_name                             : all\n# tmpdir                                  : None\n# umi_sep                                 : _\n# umi_tag                                 : RX\n# umi_tag_delim                           : None\n# umi_tag_split                           : None\n# umi_whitelist                           : None\n# umi_whitelist_paired                    : None\n# unmapped_reads                          : discard\n# unpaired_reads                          : use\n# wide_format_cell_counts                 : True\n2024-09-20 18:47:24,201 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr\n2024-09-20 18:47:24,214 INFO Input Reads: 39\n2024-09-20 18:47:24,214 INFO Number of (post deduplication) reads counted: 12\n# job finished in 0 seconds at Fri Sep 20 18:47:24 2024 --  0.86  0.21  0.00  0.00 -- 6181a830-7b40-4ff3-9687-3973a28127fc\n." ], "status": "failure", "test_index": 5, "time_seconds": 26.51866388320923, "tool_id": "umi_tools_count", "tool_version": "1.1.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr# job started at Fri Sep 20 18:47:24 2024 on gxy-prtj2-cvpjm -- 6181a830-7b40-4ff3-9687-3973a28127fc# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:47:24,201 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/d/4/c/dataset_d4ca365b-ecc7-4c0a-bb95-5736e187eb9c.dat --log2stderr2024-09-20 18:47:24,214 INFO Input Reads: 392024-09-20 18:47:24,214 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:47:24 2024 --  0.86  0.21  0.00  0.00 -- 6181a830-7b40-4ff3-9687-3973a28127fc
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #7)" name="6" time="36.24911952018738">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/2/2/2/dataset_222c86bd-ffd2-4b2a-92bf-5e26e53f252f.dat --log2stderr# job started at Fri Sep 20 18:39:22 2024 on gxy-clslv-2lh5d -- e03734b6-d2aa-40cc-820c-c48ce89efc14# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/2/2/2/dataset_222c86bd-ffd2-4b2a-92bf-5e26e53f252f.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:39:22,627 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/2/2/2/dataset_222c86bd-ffd2-4b2a-92bf-5e26e53f252f.dat --log2stderr2024-09-20 18:39:22,641 INFO Input Reads: 392024-09-20 18:39:22,641 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:39:22 2024 --  0.84  0.24  0.00  0.00 -- e03734b6-d2aa-40cc-820c-c48ce89efc14
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #7)" name="6" time="36.59941911697388">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/1/4/7/dataset_1471a35e-00a7-41b5-b648-9906ea4ff750.dat --log2stderr# job started at Fri Sep 20 18:43:36 2024 on gxy-kwjgc-vpc2c -- 1fd05a69-18ae-47be-99c1-879266270621# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/1/4/7/dataset_1471a35e-00a7-41b5-b648-9906ea4ff750.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:43:36,468 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/1/4/7/dataset_1471a35e-00a7-41b5-b648-9906ea4ff750.dat --log2stderr2024-09-20 18:43:36,482 INFO Input Reads: 392024-09-20 18:43:36,482 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:43:36 2024 --  0.87  0.22  0.00  0.00 -- 1fd05a69-18ae-47be-99c1-879266270621
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="umi_tools_count (Test #7)" name="6" time="37.32044768333435">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            # UMI-tools version: 1.1.2# output generated by count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/3/a/2/dataset_3a241aeb-9540-4fbc-894c-23362351c2a4.dat --log2stderr# job started at Fri Sep 20 18:47:51 2024 on gxy-v5zsl-cwxzm -- ff2215b1-080f-4956-a870-1464e6125acd# pid: 25, system: Linux 6.1.100+ #1 SMP PREEMPT_DYNAMIC Sat Aug 10 16:12:02 UTC 2024 x86_64# assigned_tag                            : None# cell_tag                                : None# cell_tag_delim                          : None# cell_tag_split                          : -# chimeric_pairs                          : use# chrom                                   : None# compresslevel                           : 6# filter_umi                              : None# gene_tag                                : XT# gene_transcript_map                     : None# get_umi_method                          : read_id# ignore_tlen                             : False# ignore_umi                              : False# in_sam                                  : False# log2stderr                              : True# loglevel                                : 1# mapping_quality                         : 0# method                                  : unique# no_sort_output                          : False# out_sam                                 : False# output_unmapped                         : False# paired                                  : False# per_cell                                : True# per_contig                              : False# per_gene                                : False# random_seed                             : 0# read_length                             : False# short_help                              : None# skip_regex                              : ^(__|Unassigned)# soft_clip_threshold                     : 4.0# spliced                                 : False# stderr                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdin                                   : <_io.TextIOWrapper name='input.bam' mode='r' encoding='UTF-8'># stdlog                                  : <_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'># stdout                                  : <_io.TextIOWrapper name='/galaxy/server/database/objects/3/a/2/dataset_3a241aeb-9540-4fbc-894c-23362351c2a4.dat' mode='w' encoding='UTF-8'># subset                                  : 1.0# threshold                               : 1# timeit_file                             : None# timeit_header                           : None# timeit_name                             : all# tmpdir                                  : None# umi_sep                                 : _# umi_tag                                 : RX# umi_tag_delim                           : None# umi_tag_split                           : None# umi_whitelist                           : None# umi_whitelist_paired                    : None# unmapped_reads                          : discard# unpaired_reads                          : use# wide_format_cell_counts                 : True2024-09-20 18:47:51,893 INFO command: count --wide-format-cell-counts --extract-umi-method read_id --umi-separator _ --method unique --edit-distance-threshold 1 --soft-clip-threshold 4 --gene-tag XT --per-cell --mapping-quality 0 --unmapped-reads discard --subset 1.0 --random-seed=0 -I input.bam -S /galaxy/server/database/objects/3/a/2/dataset_3a241aeb-9540-4fbc-894c-23362351c2a4.dat --log2stderr2024-09-20 18:47:51,907 INFO Input Reads: 392024-09-20 18:47:51,907 INFO Number of (post deduplication) reads counted: 12# job finished in 0 seconds at Fri Sep 20 18:47:51 2024 --  0.89  0.22  0.00  0.00 -- ff2215b1-080f-4956-a870-1464e6125acd
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfallelicprimitives (Test #1)" name="0" time="41.42585372924805">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfprimers (Test #1)" name="0" time="12.567149639129639">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.567149639129639, "tool_id": "vcfprimers", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
</testsuite>