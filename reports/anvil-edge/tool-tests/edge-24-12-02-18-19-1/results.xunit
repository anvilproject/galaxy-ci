<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="93"
           errors="13"
           failures="12"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="43.33894968032837">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="38.25879144668579">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #11)" name="10" time="12.755574464797974">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 12.755574464797974, "tool_id": "bcftools_filter", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="37.250394105911255">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="37.325319051742554">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="37.670586347579956">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="37.030231952667236">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="27.112872838974">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "44ccab112e191849",   "src": "hda"  },  "output_type": "v",  "sec_filter|conditional_soft_filter|selector": "enabled",  "sec_filter|conditional_soft_filter|soft_filter": "XX",  "sec_restrict|exclude": "INFO/DP=19" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/7/c/4/dataset_7c4b15a8-bf68-4e42-af14-8e922992cc1e.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools filter  --soft-filter \u0027XX\u0027                   --exclude \u0027INFO/DP=19\u0027    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/2/c/8/dataset_2c8bfe18-2a5c-46be-8fcf-4dbec6e58915.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T19:33:20.688332",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-pc5ml",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "a4740480dd3bb36c",  "inputs": {   "input_file": {    "id": "44ccab112e191849",    "src": "hda",    "uuid": "7c4b15a8-bf68-4e42-af14-8e922992cc1e"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "a1cec3b2e130626a",    "src": "hda",    "uuid": "2c8bfe18-2a5c-46be-8fcf-4dbec6e58915"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"conditional_soft_filter\": {\"__current_case__\": 1, \"masks\": {\"__current_case__\": 0, \"masks_src\": \"__none__\"}, \"masks_overlap\": null, \"selector\": \"enabled\", \"soft_filter\": \"XX\"}, \"mode\": null, \"select_set_GTs\": null}",   "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-02T19:33:25.659704",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 6, "time_seconds": 27.112872838974, "tool_id": "bcftools_filter", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="36.397040128707886">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="37.34325051307678">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #10)" name="9" time="37.63934659957886">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="35.78950548171997">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input|input_bam": {   "id": "9615cb7297b3058a",   "src": "hda"  },  "input|input_number": "single",  "output_type": "v",  "reference_source|ref_file": {   "id": "606103bb01e80623",   "src": "hda"  },  "reference_source|reference_source_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/1/f/dataset_01f3907c-2bac-40f6-b609-41ab872e08c5.dat\u0027 mpileup_1.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/e/3/3/metadata_e33e8832-dedf-45c9-9d5a-2ffdfe40a077.dat\u0027 mpileup_1.bam.bai \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/f/6/3/dataset_f635d7a1-c895-41da-ba94-65bcfb8bd594.dat\u0027 ref.fa \u0026\u0026 samtools faidx ref.fa \u0026\u0026           bcftools mpileup  --fasta-ref \u0027ref.fa\u0027      -d \"250\"                  --threads ${GALAXY_SLOTS:-4}   --output-type \u0027v\u0027   mpileup_1.bam \u003e \u0027/galaxy/server/database/objects/a/2/5/dataset_a25e2078-7440-48e0-b0cd-1b539117d70e.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T19:25:28.810934",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7bvmm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "fc098767cdba5cb9",  "inputs": {   "input|input_bam": {    "id": "9615cb7297b3058a",    "src": "hda",    "uuid": "01f3907c-2bac-40f6-b609-41ab872e08c5"   },   "reference_source|ref_file": {    "id": "606103bb01e80623",    "src": "hda",    "uuid": "f635d7a1-c895-41da-ba94-65bcfb8bd594"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "e0bfa36b97e26d9a",    "src": "hda",    "uuid": "a25e2078-7440-48e0-b0cd-1b539117d70e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 243, \"src\": \"hda\"}]}, \"input_number\": \"single\"}",   "output_type": "\"v\"",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 244, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}",   "sec_indel": "{\"ambig_reads\": null, \"indel_bias\": \"\", \"indel_size\": \"\", \"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}",   "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}",   "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}",   "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}"  },  "state": "error",  "stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.15.1+galaxy4",  "tool_stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n",  "tool_stdout": "",  "update_time": "2024-12-02T19:25:41.169945",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.15.1+galaxy4, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.15.1+galaxy4, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n." ], "status": "failure", "test_index": 0, "time_seconds": 35.78950548171997, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="38.567747831344604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="29.051854133605957">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 29.051854133605957, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="48.500479221343994">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="50.535178661346436">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #7)" name="6" time="38.315295457839966">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="65.27467775344849">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="13.0682373046875">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 13.0682373046875, "tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.5.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.09779143333435059">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09779143333435059, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="44.23872971534729">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="37.02125668525696">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="37.515602588653564">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="37.76599144935608">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="37.16902136802673">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="12.692280292510986">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 12.692280292510986, "tool_id": "fastq_filter", "tool_version": "1.1.5+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="37.99590587615967">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="36.42184090614319">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="12.698452234268188">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 12.698452234268188, "tool_id": "fastq_filter", "tool_version": "1.1.5+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="46.923311710357666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="37.3038272857666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="37.328221797943115">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #4)" name="3" time="35.82936644554138">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #5)" name="4" time="36.91670775413513">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="67.28070306777954">
        
            
            <system-out><![CDATA[
            gnuplot 5.4 patchlevel 8
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #2)" name="1" time="38.41670322418213">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '5c3a0g6c30c2g2t0c0c2c2c11c20c2a11c23g10g77' -> '5C3A0G6C30C2G2T0C0C2C2C11C20C2A11C23G10G4'[bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '7c0a0g6c2t4c2a23t7c8g8t8c2c8c2c5a11c5c26c17c2c23g8c2c5t2t2a5t2g11t1c19c5^cccag2^ca7c6t5^g0c6c0c2^a4c4c1a0t0g0a4^c1g4c7c4a3t11g5c2g14c5t2g20g5c2c28a27t0g4g5105' -> '7C0A0G6C2T4C2A23T7C8G8T8C2C8C2C5A11C5C26C17C2C23G8C2C5T2T2A5T2G11T1C19C5^CCCAG2^CA7C6T5^G0C6C0C2^A4C4C1A0T0G0A4^C1G4C7C4A3T11G5C2G14C5T2G20G5C2C28A27T0G4G26'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #3)" name="2" time="40.03188157081604">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="71.46786594390869">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="12.6807861328125">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.6807861328125, "tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="58.974706411361694">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/e/d/3/dataset_ed3420f0-f89f-44c3-b21b-d2f6a5de5ba6.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/d/e/b/dataset_debc086b-fce5-4294-b84b-a7ccf09b1f45.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/9/2/9/dataset_929bdb1e-51b8-4669-8ba9-9db1bee2ee82.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-12-02T19:20:47.688209",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5hc2f",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "3c84f8c7aaf057a9",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "22.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "22 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1733167277.0000000",    "title": "Job End Time",    "value": "2024-12-02 19:21:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1733167255.0000000",    "title": "Job Start Time",    "value": "2024-12-02 19:20:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "b30cd62530f840e9",    "src": "hda",    "uuid": "929bdb1e-51b8-4669-8ba9-9db1bee2ee82"   },   "design_tsv": {    "id": "93c66fd730358cd5",    "src": "hda",    "uuid": "35909f3a-8b66-456f-82c8-d7cf7dac7e30"   },   "genes_tsv": {    "id": "7d9812171b556ca5",    "src": "hda",    "uuid": "debc086b-fce5-4294-b84b-a7ccf09b1f45"   },   "matrix_mtx": {    "id": "1ffe946a0ef05678",    "src": "hda",    "uuid": "ed3420f0-f89f-44c3-b21b-d2f6a5de5ba6"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-12-02 19:20:55--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  186K\n    50K .......... .......... .......... .......... ..........  225K\n   100K .......... .......... .......... .......... ..........  367K\n   150K .......... .......... .......... .......... ..........  557K\n   200K .......... .......... .......... .......... ..........  376K\n   250K .......... .......... .......... .......... ..........  557K\n   300K .......... .......... .......... .......... ..........  560K\n   350K .......... .......... .......... .......... ..........  558K\n   400K .......... .......... .......... .......... .......... 1.02M\n   450K .......... .......... .......... .......... ..........  556K\n   500K .......... .......... .......... .......... ..........  560K\n   550K .......... .......... .......... .......... .......... 1.17M\n   600K .......... .......... .......... .......... .......... 1.01M\n   650K .......... .......... .......... .......... .......... 1.12M\n   700K .......... .......... .......... .......... .......... 1.05M\n   750K .......... .......... .......... .......... ..........  560K\n   800K .......... .......... .......... .......... .......... 1.15M\n   850K .......... .......... .......... .......... .......... 1.03M\n   900K .......... .......... .......... .......... .......... 1.07M\n   950K .......... .......... .......... .......... .......... 1.11M\n  1000K .......... .......... .......... .......... .......... 1.07M\n  1050K .......... .......... .......... .......... .......... 1.10M\n  1100K .......... .......... .......... .......... .......... 1.11M\n  1150K .......... .......... .......... .......... .......... 1.06M\n  1200K .......... .......... .......... .......... .......... 1.16M\n  1250K .......... .......... .......... .......... .......... 1.02M\n  1300K .......... .......... .......... .......... .......... 1.18M\n  1350K .......... .......... .......... .......... .......... 1.02M\n  1400K .......... .......... .......... .......... ..........  101M\n  1450K .......... .......... .......... .......... .......... 1.10M\n  1500K .......... .......... .......... .......... .......... 1.08M\n  1550K .......... .......... .......... .......... .......... 1.17M\n  1600K .......... .......... .......... .......... .......... 18.0M\n  1650K .......... .......... .......... .......... .......... 1.08M\n  1700K .......... .......... .......... .......... .......... 1.17M\n  1750K .......... .......... .......... .......... .......... 11.3M\n  1800K .......... .......... .......... .......... .......... 1.13M\n  1850K .......... .......... .......... .......... .......... 1.17M\n  1900K .......... .......... .......... .......... .......... 22.1M\n  1950K .......... .......... .......... .......... .......... 1.08M\n  2000K .......... .......... .......... .......... .......... 86.0M\n  2050K .......... .......... .......... .......... .......... 1.15M\n  2100K .......... .......... .......... .......... .......... 13.7M\n  2150K .......... .......... .......... .......... .......... 1.13M\n  2200K .......... .......... .......... .......... ..........  116M\n  2250K .......... .......... .......... .......... .......... 1.11M\n  2300K .......... .......... .......... .......... .......... 18.8M\n  2350K .......... .......... .......... .......... .......... 1.14M\n  2400K .......... .......... .......... .......... .......... 98.4M\n  2450K .......... .......... .......... .......... .......... 1.14M\n  2500K .......... .......... .......... .......... .......... 18.1M\n  2550K .......... .......... .......... .......... .......... 1.12M\n  2600K .......... .......... .......... .......... ..........  107M\n  2650K .......... .......... .......... .......... .......... 1.15M\n  2700K .......... .......... .......... .......... .......... 36.7M\n  2750K .......... .......... .......... .......... .......... 12.1M\n  2800K .......... .......... .......... .......... .......... 1.17M\n  2850K .......... .......... .......... .......... ..........  116M\n  2900K .......... .......... .......... .......... .......... 1.13M\n  2950K .......... .......... .......... .......... .......... 40.2M\n  3000K .......... .......... .......... .......... .......... 12.6M\n  3050K .......... .......... .......... .......... .......... 1.14M\n  3100K .......... .......... .......... .......... .......... 97.2M\n  3150K .......... .......... .......... .......... .......... 1.18M\n  3200K .......... .......... .......... .......... .......... 55.7M\n  3250K .......... .......... .......... .......... .......... 15.2M\n  3300K .......... .......... .......... .......... .......... 1.12M\n  3350K .......... .......... .......... .......... ..........  136M\n  3400K .......... .......... .......... .......... .......... 8.89M\n  3450K .......... .......... .......... .......... .......... 1.32M\n  3500K .......... .......... .......... .......... .......... 29.2M\n  3550K .......... .......... .......... .......... .......... 14.8M\n  3600K .......... .......... .......... .......... .......... 1.16M\n  3650K .......... .......... .......... .......... ..........  134M\n  3700K .......... .......... .......... .......... .......... 1.17M\n  3750K .......... .......... .......... .......... .......... 60.0M\n  3800K .......... .......... .......... .......... .......... 34.4M\n  3850K .......... .......... .......... .......... .......... 12.0M\n  3900K .......... .......... .......... .......... .......... 1.18M\n  3950K .......... .......... .......... .......... ..........  137M\n  4000K .......... .......... .......... .......... .......... 1.18M\n  4050K .......... .......... .......... .......... .......... 44.9M\n  4100K .......... .......... .......... .......... .......... 36.3M\n  4150K .......... .......... .......... .......... .......... 12.5M\n  4200K .......... .......... .......... .......... .......... 1.18M\n  4250K .......... .......... .......... .......... ..........  106M\n  4300K .......... .......... .......... .......... .......... 8.28M\n  4350K .......... .......... .......... .......... .......... 1.34M\n  4400K .......... .......... .......... .......... .......... 29.7M\n  4450K .......... .......... .......... .......... .......... 12.7M\n  4500K .......... .......... .......... .......... .......... 1.18M\n  4550K .......... .......... .......... .......... ..........  105M\n  4600K .......... .......... .......... .......... .......... 7.83M\n  4650K .......... .......... .......... .......... .......... 1.36M\n  4700K .......... .......... .......... .......... ..........  132M\n  4750K .......... .......... .......... .......... .......... 15.9M\n  4800K .......... .......... .......... .......... .......... 19.2M\n  4850K .......... .......... .......... .......... .......... 1.17M\n  4900K .......... .......... .......... .......... ..........  123M\n  4950K .......... .......... .......... .......... .......... 8.10M\n  5000K .......... .......... .......... .......... .......... 1.38M\n  5050K .......... .......... .......... .......... .......... 76.6M\n  5100K .......... .......... .......... .......... .......... 15.0M\n  5150K .......... .......... .......... .......... .......... 22.8M\n  5200K .......... .......... .......... .......... .......... 1.16M\n  5250K .......... .......... .......... .......... .......... 97.4M\n  5300K .......... .......... .......... .......... .......... 8.85M\n  5350K .......... .......... .......... .......... .......... 1.38M\n  5400K .......... .......... .......... .......... .......... 79.0M\n  5450K .......... .......... .......... .......... .......... 14.1M\n  5500K .......... .......... .......... .......... .......... 27.7M\n  5550K .......... .......... .......... .......... .......... 25.6M\n  5600K .......... .......... .......... .......... .......... 1.19M\n  5650K .......... .......... .......... .......... ..........  120M\n  5700K .......... .......... .......... .......... .......... 1.21M\n  5750K .......... .......... .......... .......... ..........  128M\n  5800K .......... .......... .......... .......... ..........  130M\n  5850K .......... .......... .......... .......... .......... 8.32M\n  5900K .......... .......... .......... .......... .......... 50.0M\n  5950K .......... .......... .......... .......... .......... 1.18M\n  6000K .......... .......... .......... .......... .......... 98.0M\n  6050K .......... .......... .......... .......... ..........  102M\n  6100K .......... .......... .......... .......... .......... 1.23M\n  6150K .......... .......... .......... .......... .......... 96.0M\n  6200K .......... .......... .......... .......... .......... 96.0M\n  6250K .......... .......... .......... .......... .......... 9.00M\n  6300K .......... .......... .......... .......... .......... 31.6M\n  6350K .......... .......... .......... .......... .......... 1.19M\n  6400K .......... .......... .......... .......... .......... 95.1M\n  6450K .......... .......... .......... .......... .......... 16.4M\n  6500K .......... .......... .......... .......... .......... 1.30M\n  6550K .......... .......... .......... .......... ..........  123M\n  6600K .......... .......... .......... .......... ..........  121M\n  6650K .......... .......... .......... .......... .......... 9.25M\n  6700K .......... .......... .......... .......... .......... 31.7M\n  6750K .......... .......... .......... .......... .......... 61.5M\n  6800K .......... .......... .......... .......... .......... 1.20M\n  6850K .......... .......... .......... .......... ..........  106M\n  6900K .......... .......... .......... .......... .......... 9.41M\n  6950K .......... .......... .......... .......... .......... 1.39M\n  7000K .......... .......... .......... .......... .......... 93.7M\n  7050K .......... .......... .......... .......... ..........  109M\n  7100K .......... .......... .......... .......... .......... 8.92M\n  7150K .......... .......... .......... .......... .......... 40.0M\n  7200K .......... .......... .......... .......... .......... 1.20M\n  7250K .......... .......... .......... .......... .......... 87.6M\n  7300K .......... .......... .......... .......... ..........  108M\n  7350K .......... .......... .......... .......... .......... 7.62M\n  7400K .......... .......... .......... .......... .......... 1.44M\n  7450K .......... .......... .......... .......... .......... 88.6M\n  7500K .......... .......... .......... .......... .......... 8.37M\n  7550K .......... .......... .......... .......... .......... 80.1M\n  7600K .......... .......... .......... .......... .......... 68.8M\n  7650K .......... .......... .......... .......... .......... 1.18M\n  7700K .......... .......... .......... .......... ..........  114M\n  7750K .......... .......... .......... .......... ..........  114M\n  7800K .......... .......... .......... .......... .......... 7.17M\n  7850K .......... .......... .......... .......... .......... 1.48M\n  7900K .......... .......... .......... .......... ..........  150M\n  7950K .......... .......... .......... .......... ..........  126M\n  8000K .......... .......... .......... .......... .......... 7.32M\n  8050K .......... .......... .......... .......... ..........  128M\n  8100K .......... .......... .......... .......... ..........  135M\n  8150K .......... .......... .......... .......... .......... 1.18M\n  8200K .......... .......... .......... .......... ..........  127M\n  8250K .......... .......... .......... .......... .......... 8.01M\n  8300K .......... .......... .......... .......... .......... 85.6M\n  8350K .......... .......... .......... .......... .......... 1.48M\n  8400K .......... .......... .......... .......... ..........  123M\n  8450K .......... .......... .......... .......... ..........  144M\n  8500K .......... .......... .......... .......... .......... 7.33M\n  8550K .......... .......... .......... .......... ..........  123M\n  8600K .......... .......... .......... .......... ..........  136M\n  8650K .......... .......... .......... .......... .......... 1.18M\n  8700K .......... .......... .......... .......... ..........  143M\n  8750K .......... .......... .......... .......... .......... 7.67M\n  8800K .......... .......... .......... .......... .......... 52.7M\n  8850K .......... .......... .......... .......... .......... 1.50M\n  8900K .......... .......... .......... .......... ..........  108M\n  8950K .......... .......... .......... .......... .......... 7.81M\n  9000K .......... .......... .......... .......... ..........  107M\n  9050K .......... .......... .......... .......... .......... 93.7M\n  9100K .......... .......... .......... .......... ..........  131M\n  9150K .......... .......... .......... .......... .......... 1.19M\n  9200K .......... .......... .......... .......... .......... 75.6M\n  9250K .......... .......... .......... .......... ..........  119M\n  9300K .......... .......... .......... .......... .......... 7.72M\n  9350K .......... .......... .......... .......... .......... 1.47M\n  9400K .......... .......... .......... .......... ..........  102M\n  9450K .......... .......... .......... .......... ..........  101M\n  9500K .......... .......... .......... .......... .......... 8.30M\n  9550K .......... .......... .......... .......... ..........  115M\n  9600K .......... .......... .......... .......... ..........  114M\n  9650K .......... .......... .......... .......... ..........  107M\n  9700K .......... .......... .......... .......... .......... 1.19M\n  9750K .......... .......... .......... .......... .......... 64.4M\n  9800K .......... .......... .......... .......... .......... 7.76M\n  9850K .......... .......... .......... .......... ..........  106M\n  9900K .......... .......... .......... .......... .......... 1.49M\n  9950K .......... .......... .......... .......... ..........  129M\n 10000K .......... .......... .......... .......... .......... 96.5M\n 10050K .......... .......... .......... .......... .......... 7.87M\n 10100K .......... .......... .......... .......... .......... 97.1M\n 10150K .......... .......... .......... .......... .......... 87.5M\n 10200K .......... .......... .......... .......... .......... 1.19M\n 10250K .......... .......... .......... .......... ..........  103M\n 10300K .......... .......... .......... .......... .......... 50.4M\n 10350K .......... .......... .......... .......... .......... 7.30M\n 10400K .......... .......... .......... .......... ..........  111M\n 10450K .......... .......... .......... .......... .......... 1.53M\n 10500K .......... .......... .......... .......... ..........  107M\n 10550K .......... .......... .......... .......... ..........  109M\n 10600K .......... .......... .......... .......... .......... 7.71M\n 10650K .......... .......... .......... .......... .......... 98.4M\n 10700K .......... .......... .......... .......... .......... 90.4M\n 10750K .......... .......... .......... .......... .......... 96.2M\n 10800K .......... .......... .......... .......... .......... 1.19M\n 10850K .......... .......... .......... .......... .......... 93.6M\n 10900K .......... .......... .......... .......... .......... 37.3M\n 10950K .......... .......... .......... .......... .......... 7.51M\n 11000K .......... .......... .......... .......... .......... 1.57M\n 11050K .......... .......... .......... .......... ..........  107M\n 11100K .......... .......... .......... .......... ..........  126M\n 11150K .......... .......... .......... .......... .......... 99.9M\n 11200K .......... .......... .......... .......... .......... 7.81M\n 11250K .......... .......... .......... .......... ..........  118M\n 11300K .......... .......... .......... .......... .......... 89.6M\n 11350K .......... .......... .......... .......... .......... 1.19M\n 11400K .......... .......... .......... .......... .......... 54.4M\n 11450K .......... .......... .......... .......... .......... 22.4M\n 11500K .......... .......... .......... .......... .......... 98.8M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.95M\n 50150K .......... .......... .......... .......... .......... 5.13M\n 50200K .......... .......... .......... .......... .......... 4.91M\n 50250K .......... .......... .......... .......... .......... 11.0M\n 50300K .......... .......... .......... .......... .......... 5.11M\n 50350K .......... .......... .......... .......... .......... 4.96M\n 50400K .......... .......... .......... .......... .......... 5.19M\n 50450K .......... .......... .......... .......... .......... 9.02M\n 50500K .......... .......... .......... .......... .......... 5.36M\n 50550K .......... .......... .......... .......... .......... 3.14M\n 50600K .......... .......... .......... .......... .......... 7.92M\n 50650K .......... .......... .......... .......... .......... 7.57M\n 50700K .......... .......... .......... .......... .......... 5.70M\n 50750K .......... .......... .......... .......... .......... 6.47M\n 50800K .......... .......... .......... .......... .......... 4.98M\n 50850K .......... .......... .......... .......... .......... 10.1M\n 50900K .......... .......... .......... .......... .......... 5.22M\n 50950K .......... .......... .......... .......... .......... 4.86M\n 51000K .......... .......... .......... .......... .......... 4.73M\n 51050K .......... .......... .......... .......... .......... 6.80M\n 51100K .......... .......... .......... .......... .......... 7.18M\n 51150K .......... .......... .......... .......... .......... 5.02M\n 51200K .......... .......... .......... .......... .......... 5.69M\n 51250K .......... .......... .......... .......... .......... 4.86M\n 51300K .......... .......... .......... .......... .......... 10.8M\n 51350K .......... .......... .......... .......... .......... 5.15M\n 51400K .......... .......... .......... .......... .......... 5.12M\n 51450K .......... .......... .......... .......... .......... 5.07M\n 51500K .......... .......... .......... .......... .......... 6.64M\n 51550K .......... .......... .......... .......... .......... 6.99M\n 51600K .......... .......... .......... .......... .......... 5.11M\n 51650K .......... .......... .......... .......... .......... 5.53M\n 51700K .......... .......... .......... .......... .......... 5.17M\n 51750K .......... .......... .......... .......... .......... 9.05M\n 51800K .......... .......... .......... .......... .......... 5.40M\n 51850K .......... .......... .......... .......... .......... 5.18M\n 51900K .......... .......... .......... .......... .......... 5.35M\n 51950K .......... .......... .......... .......... .......... 9.37M\n 52000K .......... .......... .......... .......... .......... 5.09M\n 52050K .......... .......... .......... .......... .......... 5.36M\n 52100K .......... .......... .......... .......... .......... 5.19M\n 52150K .......... .......... .......... .......... .......... 9.90M\n 52200K .......... .......... .......... .......... .......... 5.14M\n 52250K .......... .......... .......... .......... .......... 4.07M\n 52300K .......... .......... .......... .......... .......... 6.63M\n 52350K .......... .......... .......... .......... .......... 11.6M\n 52400K .......... .......... .......... .......... .......... 4.97M\n 52450K .......... .......... .......... .......... .......... 4.70M\n 52500K .......... .......... .......... .......... .......... 3.94M\n 52550K .......... .......... .......... .......... .......... 14.0M\n 52600K .......... .......... .......... .......... .......... 6.40M\n 52650K .......... .......... .......... .......... .......... 5.44M\n 52700K .......... .......... .......... .......... .......... 4.74M\n 52750K .......... .......... .......... .......... .......... 12.5M\n 52800K .......... .......... .......... .......... .......... 5.17M\n 52850K .......... .......... .......... .......... .......... 4.89M\n 52900K .......... .......... .......... .......... .......... 1.92M\n 52950K .......... .......... .......... .......... .......... 3.16M\n 53000K .......... .......... .......... .......... .......... 1.92M\n 53050K .......... .......... .......... .......... .......... 2.45M\n 53100K .......... .......... .......... .......... .......... 2.80M\n 53150K .......... .......... .......... .......... .......... 5.08M\n 53200K .......... .......... .......... .......... .......... 3.30M\n 53250K .......... .......... .......... .......... .......... 3.10M\n 53300K .......... .......... .......... .......... .......... 3.54M\n 53350K .......... .......... .......... .......... .......... 9.23M\n 53400K .......... .......... .......... .......... .......... 3.90M\n 53450K .......... .......... .......... .......... .......... 4.04M\n 53500K .......... .......... .......... .......... .......... 4.33M\n 53550K .......... .......... .......... .......... .......... 8.75M\n 53600K .......... .......... .......... .......... .......... 4.27M\n 53650K .......... .......... .......... .......... .......... 4.97M\n 53700K .......... .......... .......... .......... .......... 5.11M\n 53750K .......... .......... .......... .......... .......... 7.60M\n 53800K .......... .......... .......... .......... .......... 5.52M\n 53850K .......... .......... .......... .......... .......... 5.07M\n 53900K .......... .......... .......... .......... .......... 5.89M\n 53950K .......... .......... .......... .......... .......... 4.67M\n 54000K .......... .......... .......... .......... .......... 13.4M\n 54050K .......... .......... .......... .......... .......... 5.14M\n 54100K .......... .......... .......... .......... .......... 5.13M\n 54150K .......... .......... .......... .......... .......... 4.99M\n 54200K .......... .......... .......... .......... .......... 12.6M\n 54250K .......... .......... .......... .......... .......... 5.04M\n 54300K .......... .......... .......... .......... .......... 4.62M\n 54350K .......... .......... .......... .......... .......... 6.02M\n 54400K .......... .......... .......... .......... .......... 10.7M\n 54450K .......... .......... .......... .......... .......... 4.90M\n 54500K .......... .......... .......... .......... .......... 5.24M\n 54550K .......... .......... .......... .......... .......... 5.12M\n 54600K .......... .......... .......... .......... .......... 9.14M\n 54650K .......... .......... .......... .......... .......... 4.97M\n 54700K .......... .......... .......... .......... .......... 4.92M\n 54750K .......... .......... .......... .......... .......... 5.94M\n 54800K .......... .......... .......... .......... .......... 10.1M\n 54850K .......... .......... .......... .......... .......... 5.00M\n 54900K .......... .......... .......... .......... .......... 4.93M\n 54950K .......... .......... .......... .......... .......... 5.02M\n 55000K .......... .......... .......... .......... .......... 11.1M\n 55050K .......... .......... .......... .......... .......... 5.40M\n 55100K .......... .......... .......... .......... .......... 5.18M\n 55150K .......... .......... .......... .......... .......... 5.20M\n 55200K .......... .......... .......... .......... .......... 5.21M\n 55250K .......... .......... .......... .......... .......... 4.90M\n 55300K .......... .......... .......... .......... .......... 8.91M\n 55350K .......... .......... .......... .......... .......... 4.96M\n 55400K .......... .......... .......... .......... .......... 5.73M\n 55450K .......... .......... .......... .......... .......... 7.98M\n 55500K .......... .......... .......... .......... .......... 5.63M\n 55550K .......... .......... .......... .......... .......... 4.71M\n 55600K .......... .......... .......... .......... .......... 4.85M\n 55650K .......... .......... .......... .......... .......... 9.58M\n 55700K .......... .......... .......... .......... .......... 5.06M\n 55750K .......... .......... .......... .......... .......... 5.34M\n 55800K .......... .......... .......... .......... .......... 5.23M\n 55850K .......... .......... .......... .......... .......... 10.5M\n 55900K .......... .......... .......... .......... .......... 4.98M\n 55950K .......... .......... .......... .......... .......... 5.08M\n 56000K .......... .......... .......... .......... .......... 5.16M\n 56050K .......... .......... .......... .......... .......... 9.96M\n 56100K .......... .......... .......... .......... .......... 5.19M\n 56150K .......... .......... .......... .......... .......... 4.31M\n 56200K .......... .......... .......... .......... .......... 5.55M\n 56250K .......... .......... .......... .......... .......... 11.4M\n 56300K .......... .......... .......... .......... .......... 5.23M\n 56350K .......... .......... .......... .......... .......... 5.20M\n 56400K .......... .......... .......... .......... .......... 4.45M\n 56450K .......... .......... .......... .......... .......... 12.1M\n 56500K .......... .......... .......... .......... .......... 5.65M\n 56550K .......... .......... .......... .......... .......... 4.49M\n 56600K .......... .......... .......... .......... .......... 5.09M\n 56650K .......... .......... .......... .......... .......... 13.4M\n 56700K .......... .......... .......... .......... .......... 5.21M\n 56750K .......... .......... .......... .......... .......... 5.17M\n 56800K .......... .......... .......... .......... .......... 3.10M\n 56850K .......... .......... .......... .......... .......... 12.7M\n 56900K .......... .......... .......... .......... .......... 11.1M\n 56950K .......... .......... .......... .......... .......... 5.09M\n 57000K .......... .......... .......... .......... .......... 5.11M\n 57050K .......... .......... .......... .......... .......... 5.41M\n 57100K .......... .......... .......... .......... .......... 10.2M\n 57150K .......... .......... .......... .......... .......... 5.02M\n 57200K .......... .......... .......... .......... .......... 4.75M\n 57250K .......... .......... .......... .......... .......... 12.8M\n 57300K .......... .......... .......... .......... .......... 4.31M\n 57350K .......... .......... .......... .......... .......... 6.16M\n 57400K .......... .......... .......... .......... .......... 5.28M\n 57450K .......... .......... .......... .......... .......... 9.92M\n 57500K .......... .......... .......... .......... .......... 5.15M\n 57550K .......... .......... .......... .......... .......... 5.37M\n 57600K .......... .......... .......... .......... .......... 4.84M\n 57650K .......... .......... .......... .......... .......... 10.5M\n 57700K .......... .......... .......... .......... .......... 5.20M\n 57750K .......... .......... .......... .......... .......... 5.23M\n 57800K .......... .......... .......... .......... .......... 5.05M\n 57850K .......... .......... .......... .......... .......... 9.65M\n 57900K .......... .......... .......... .......... .......... 5.31M\n 57950K .......... .......... .......... .......... .......... 5.33M\n 58000K .......... .......... .......... .......... .......... 4.53M\n 58050K .......... .......... .......... .......... .......... 11.6M\n 58100K .......... .......... .......... .......... .......... 5.15M\n 58150K .......... .......... .......... .......... .......... 5.22M\n 58200K .......... .......... .......... .......... .......... 5.09M\n 58250K .......... .......... .......... .......... .......... 10.0M\n 58300K .......... .......... .......... .......... .......... 5.12M\n 58350K .......... .......... .......... .......... .......... 5.01M\n 58400K .......... .......... .......... .......... .......... 1.50M\n 58450K .......... .......... .......... .......... .......... 3.50M\n 58500K .......... .......... .......... .......... .......... 2.13M\n 58550K .......... .......... .......... .......... .......... 2.52M\n 58600K .......... .......... .......... .......... .......... 2.70M\n 58650K .......... .......... .......... .......... .......... 5.76M\n 58700K .......... .......... .......... .......... .......... 3.28M\n 58750K .......... .......... .......... .......... .......... 2.86M\n 58800K .......... .......... .......... .......... .......... 4.23M\n 58850K .......... .......... .......... .......... .......... 7.29M\n 58900K .......... .......... .......... .......... .......... 4.54M\n 58950K .......... .......... .......... .......... .......... 1.97M\n 59000K .......... .......... .......... .......... .......... 1.74M\n 59050K .......... .......... .......... .......... .......... 2.15M\n 59100K .......... .......... .......... .......... .......... 4.90M\n 59150K .......... .......... .......... .......... .......... 2.84M\n 59200K .......... .......... .......... .......... .......... 3.05M\n 59250K .......... .......... .......... .......... .......... 3.03M\n 59300K .......... .......... .......... .......... .......... 3.50M\n 59350K .......... .......... .......... .......... .......... 7.15M\n 59400K .......... .......... .......... .......... .......... 3.74M\n 59450K .......... .......... .......... .......... .......... 4.05M\n 59500K .......... .......... .......... .......... .......... 4.37M\n 59550K .......... .......... .......... .......... .......... 7.59M\n 59600K .......... .......... .......... .......... .......... 5.14M\n 59650K .......... .......... .......... .......... .......... 4.32M\n 59700K .......... .......... .......... .......... .......... 5.46M\n 59750K .......... .......... .......... .......... .......... 7.45M\n 59800K .......... .......... .......... .......... .......... 6.14M\n 59850K .......... .......... .......... .......... .......... 4.89M\n 59900K .......... .......... .......... .......... .......... 4.94M\n 59950K .......... .......... .......... .......... .......... 10.8M\n 60000K .......... .......... .......... .......... .......... 5.19M\n 60050K .......... .......... .......... .......... .......... 4.71M\n 60100K .......... .......... .......... .......... .......... 5.17M\n 60150K .......... .......... .......... .......... .......... 10.5M\n 60200K .......... .......... .......... .......... .......... 5.10M\n 60250K .......... .......... .......... .......... .......... 5.08M\n 60300K .......... .......... .......... .......... .......... 5.09M\n 60350K .......... .......... .......... .......... .......... 9.84M\n 60400K .......... .......... .......... .......... .......... 5.29M\n 60450K .......... .......... .......... .......... .......... 5.19M\n 60500K .......... .......... .......... .......... .......... 5.27M\n 60550K .......... .......... .......... .......... .......... 10.7M\n 60600K .......... .......... .......... .......... ..........  387K\n 60650K .......... .........                                   21.1M=14s\n\n2024-12-02 19:21:10 (4.13 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-12-02 19:21:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  559K 3s\n   100K .......... .......... .......... .......... .......... 18%  380K 2s\n   150K .......... .......... .......... .......... .......... 24% 1.02M 2s\n   200K .......... .......... .......... .......... .......... 30%  559K 1s\n   250K .......... .......... .......... .......... .......... 36%  560K 1s\n   300K .......... .......... .......... .......... .......... 42% 1.11M 1s\n   350K .......... .......... .......... .......... .......... 48% 1.07M 1s\n   400K .......... .......... .......... .......... .......... 54%  563K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.5M 1s\n   500K .......... .......... .......... .......... .......... 66%  581K 0s\n   550K .......... .......... .......... .......... .......... 72% 12.8M 0s\n   600K .......... .......... .......... .......... .......... 78%  582K 0s\n   650K .......... .......... .......... .......... .......... 84% 12.5M 0s\n   700K .......... .......... .......... .......... .......... 90%  586K 0s\n   750K .......... .......... .......... .......... .......... 96% 13.6M 0s\n   800K .......... .......... .......                         100%  670K=1.2s\n\n2024-12-02 19:21:17 (686 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-12-02 19:20:55--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  186K\n    50K .......... .......... .......... .......... ..........  225K\n   100K .......... .......... .......... .......... ..........  367K\n   150K .......... .......... .......... .......... ..........  557K\n   200K .......... .......... .......... .......... ..........  376K\n   250K .......... .......... .......... .......... ..........  557K\n   300K .......... .......... .......... .......... ..........  560K\n   350K .......... .......... .......... .......... ..........  558K\n   400K .......... .......... .......... .......... .......... 1.02M\n   450K .......... .......... .......... .......... ..........  556K\n   500K .......... .......... .......... .......... ..........  560K\n   550K .......... .......... .......... .......... .......... 1.17M\n   600K .......... .......... .......... .......... .......... 1.01M\n   650K .......... .......... .......... .......... .......... 1.12M\n   700K .......... .......... .......... .......... .......... 1.05M\n   750K .......... .......... .......... .......... ..........  560K\n   800K .......... .......... .......... .......... .......... 1.15M\n   850K .......... .......... .......... .......... .......... 1.03M\n   900K .......... .......... .......... .......... .......... 1.07M\n   950K .......... .......... .......... .......... .......... 1.11M\n  1000K .......... .......... .......... .......... .......... 1.07M\n  1050K .......... .......... .......... .......... .......... 1.10M\n  1100K .......... .......... .......... .......... .......... 1.11M\n  1150K .......... .......... .......... .......... .......... 1.06M\n  1200K .......... .......... .......... .......... .......... 1.16M\n  1250K .......... .......... .......... .......... .......... 1.02M\n  1300K .......... .......... .......... .......... .......... 1.18M\n  1350K .......... .......... .......... .......... .......... 1.02M\n  1400K .......... .......... .......... .......... ..........  101M\n  1450K .......... .......... .......... .......... .......... 1.10M\n  1500K .......... .......... .......... .......... .......... 1.08M\n  1550K .......... .......... .......... .......... .......... 1.17M\n  1600K .......... .......... .......... .......... .......... 18.0M\n  1650K .......... .......... .......... .......... .......... 1.08M\n  1700K .......... .......... .......... .......... .......... 1.17M\n  1750K .......... .......... .......... .......... .......... 11.3M\n  1800K .......... .......... .......... .......... .......... 1.13M\n  1850K .......... .......... .......... .......... .......... 1.17M\n  1900K .......... .......... .......... .......... .......... 22.1M\n  1950K .......... .......... .......... .......... .......... 1.08M\n  2000K .......... .......... .......... .......... .......... 86.0M\n  2050K .......... .......... .......... .......... .......... 1.15M\n  2100K .......... .......... .......... .......... .......... 13.7M\n  2150K .......... .......... .......... .......... .......... 1.13M\n  2200K .......... .......... .......... .......... ..........  116M\n  2250K .......... .......... .......... .......... .......... 1.11M\n  2300K .......... .......... .......... .......... .......... 18.8M\n  2350K .......... .......... .......... .......... .......... 1.14M\n  2400K .......... .......... .......... .......... .......... 98.4M\n  2450K .......... .......... .......... .......... .......... 1.14M\n  2500K .......... .......... .......... .......... .......... 18.1M\n  2550K .......... .......... .......... .......... .......... 1.12M\n  2600K .......... .......... .......... .......... ..........  107M\n  2650K .......... .......... .......... .......... .......... 1.15M\n  2700K .......... .......... .......... .......... .......... 36.7M\n  2750K .......... .......... .......... .......... .......... 12.1M\n  2800K .......... .......... .......... .......... .......... 1.17M\n  2850K .......... .......... .......... .......... ..........  116M\n  2900K .......... .......... .......... .......... .......... 1.13M\n  2950K .......... .......... .......... .......... .......... 40.2M\n  3000K .......... .......... .......... .......... .......... 12.6M\n  3050K .......... .......... .......... .......... .......... 1.14M\n  3100K .......... .......... .......... .......... .......... 97.2M\n  3150K .......... .......... .......... .......... .......... 1.18M\n  3200K .......... .......... .......... .......... .......... 55.7M\n  3250K .......... .......... .......... .......... .......... 15.2M\n  3300K .......... .......... .......... .......... .......... 1.12M\n  3350K .......... .......... .......... .......... ..........  136M\n  3400K .......... .......... .......... .......... .......... 8.89M\n  3450K .......... .......... .......... .......... .......... 1.32M\n  3500K .......... .......... .......... .......... .......... 29.2M\n  3550K .......... .......... .......... .......... .......... 14.8M\n  3600K .......... .......... .......... .......... .......... 1.16M\n  3650K .......... .......... .......... .......... ..........  134M\n  3700K .......... .......... .......... .......... .......... 1.17M\n  3750K .......... .......... .......... .......... .......... 60.0M\n  3800K .......... .......... .......... .......... .......... 34.4M\n  3850K .......... .......... .......... .......... .......... 12.0M\n  3900K .......... .......... .......... .......... .......... 1.18M\n  3950K .......... .......... .......... .......... ..........  137M\n  4000K .......... .......... .......... .......... .......... 1.18M\n  4050K .......... .......... .......... .......... .......... 44.9M\n  4100K .......... .......... .......... .......... .......... 36.3M\n  4150K .......... .......... .......... .......... .......... 12.5M\n  4200K .......... .......... .......... .......... .......... 1.18M\n  4250K .......... .......... .......... .......... ..........  106M\n  4300K .......... .......... .......... .......... .......... 8.28M\n  4350K .......... .......... .......... .......... .......... 1.34M\n  4400K .......... .......... .......... .......... .......... 29.7M\n  4450K .......... .......... .......... .......... .......... 12.7M\n  4500K .......... .......... .......... .......... .......... 1.18M\n  4550K .......... .......... .......... .......... ..........  105M\n  4600K .......... .......... .......... .......... .......... 7.83M\n  4650K .......... .......... .......... .......... .......... 1.36M\n  4700K .......... .......... .......... .......... ..........  132M\n  4750K .......... .......... .......... .......... .......... 15.9M\n  4800K .......... .......... .......... .......... .......... 19.2M\n  4850K .......... .......... .......... .......... .......... 1.17M\n  4900K .......... .......... .......... .......... ..........  123M\n  4950K .......... .......... .......... .......... .......... 8.10M\n  5000K .......... .......... .......... .......... .......... 1.38M\n  5050K .......... .......... .......... .......... .......... 76.6M\n  5100K .......... .......... .......... .......... .......... 15.0M\n  5150K .......... .......... .......... .......... .......... 22.8M\n  5200K .......... .......... .......... .......... .......... 1.16M\n  5250K .......... .......... .......... .......... .......... 97.4M\n  5300K .......... .......... .......... .......... .......... 8.85M\n  5350K .......... .......... .......... .......... .......... 1.38M\n  5400K .......... .......... .......... .......... .......... 79.0M\n  5450K .......... .......... .......... .......... .......... 14.1M\n  5500K .......... .......... .......... .......... .......... 27.7M\n  5550K .......... .......... .......... .......... .......... 25.6M\n  5600K .......... .......... .......... .......... .......... 1.19M\n  5650K .......... .......... .......... .......... ..........  120M\n  5700K .......... .......... .......... .......... .......... 1.21M\n  5750K .......... .......... .......... .......... ..........  128M\n  5800K .......... .......... .......... .......... ..........  130M\n  5850K .......... .......... .......... .......... .......... 8.32M\n  5900K .......... .......... .......... .......... .......... 50.0M\n  5950K .......... .......... .......... .......... .......... 1.18M\n  6000K .......... .......... .......... .......... .......... 98.0M\n  6050K .......... .......... .......... .......... ..........  102M\n  6100K .......... .......... .......... .......... .......... 1.23M\n  6150K .......... .......... .......... .......... .......... 96.0M\n  6200K .......... .......... .......... .......... .......... 96.0M\n  6250K .......... .......... .......... .......... .......... 9.00M\n  6300K .......... .......... .......... .......... .......... 31.6M\n  6350K .......... .......... .......... .......... .......... 1.19M\n  6400K .......... .......... .......... .......... .......... 95.1M\n  6450K .......... .......... .......... .......... .......... 16.4M\n  6500K .......... .......... .......... .......... .......... 1.30M\n  6550K .......... .......... .......... .......... ..........  123M\n  6600K .......... .......... .......... .......... ..........  121M\n  6650K .......... .......... .......... .......... .......... 9.25M\n  6700K .......... .......... .......... .......... .......... 31.7M\n  6750K .......... .......... .......... .......... .......... 61.5M\n  6800K .......... .......... .......... .......... .......... 1.20M\n  6850K .......... .......... .......... .......... ..........  106M\n  6900K .......... .......... .......... .......... .......... 9.41M\n  6950K .......... .......... .......... .......... .......... 1.39M\n  7000K .......... .......... .......... .......... .......... 93.7M\n  7050K .......... .......... .......... .......... ..........  109M\n  7100K .......... .......... .......... .......... .......... 8.92M\n  7150K .......... .......... .......... .......... .......... 40.0M\n  7200K .......... .......... .......... .......... .......... 1.20M\n  7250K .......... .......... .......... .......... .......... 87.6M\n  7300K .......... .......... .......... .......... ..........  108M\n  7350K .......... .......... .......... .......... .......... 7.62M\n  7400K .......... .......... .......... .......... .......... 1.44M\n  7450K .......... .......... .......... .......... .......... 88.6M\n  7500K .......... .......... .......... .......... .......... 8.37M\n  7550K .......... .......... .......... .......... .......... 80.1M\n  7600K .......... .......... .......... .......... .......... 68.8M\n  7650K .......... .......... .......... .......... .......... 1.18M\n  7700K .......... .......... .......... .......... ..........  114M\n  7750K .......... .......... .......... .......... ..........  114M\n  7800K .......... .......... .......... .......... .......... 7.17M\n  7850K .......... .......... .......... .......... .......... 1.48M\n  7900K .......... .......... .......... .......... ..........  150M\n  7950K .......... .......... .......... .......... ..........  126M\n  8000K .......... .......... .......... .......... .......... 7.32M\n  8050K .......... .......... .......... .......... ..........  128M\n  8100K .......... .......... .......... .......... ..........  135M\n  8150K .......... .......... .......... .......... .......... 1.18M\n  8200K .......... .......... .......... .......... ..........  127M\n  8250K .......... .......... .......... .......... .......... 8.01M\n  8300K .......... .......... .......... .......... .......... 85.6M\n  8350K .......... .......... .......... .......... .......... 1.48M\n  8400K .......... .......... .......... .......... ..........  123M\n  8450K .......... .......... .......... .......... ..........  144M\n  8500K .......... .......... .......... .......... .......... 7.33M\n  8550K .......... .......... .......... .......... ..........  123M\n  8600K .......... .......... .......... .......... ..........  136M\n  8650K .......... .......... .......... .......... .......... 1.18M\n  8700K .......... .......... .......... .......... ..........  143M\n  8750K .......... .......... .......... .......... .......... 7.67M\n  8800K .......... .......... .......... .......... .......... 52.7M\n  8850K .......... .......... .......... .......... .......... 1.50M\n  8900K .......... .......... .......... .......... ..........  108M\n  8950K .......... .......... .......... .......... .......... 7.81M\n  9000K .......... .......... .......... .......... ..........  107M\n  9050K .......... .......... .......... .......... .......... 93.7M\n  9100K .......... .......... .......... .......... ..........  131M\n  9150K .......... .......... .......... .......... .......... 1.19M\n  9200K .......... .......... .......... .......... .......... 75.6M\n  9250K .......... .......... .......... .......... ..........  119M\n  9300K .......... .......... .......... .......... .......... 7.72M\n  9350K .......... .......... .......... .......... .......... 1.47M\n  9400K .......... .......... .......... .......... ..........  102M\n  9450K .......... .......... .......... .......... ..........  101M\n  9500K .......... .......... .......... .......... .......... 8.30M\n  9550K .......... .......... .......... .......... ..........  115M\n  9600K .......... .......... .......... .......... ..........  114M\n  9650K .......... .......... .......... .......... ..........  107M\n  9700K .......... .......... .......... .......... .......... 1.19M\n  9750K .......... .......... .......... .......... .......... 64.4M\n  9800K .......... .......... .......... .......... .......... 7.76M\n  9850K .......... .......... .......... .......... ..........  106M\n  9900K .......... .......... .......... .......... .......... 1.49M\n  9950K .......... .......... .......... .......... ..........  129M\n 10000K .......... .......... .......... .......... .......... 96.5M\n 10050K .......... .......... .......... .......... .......... 7.87M\n 10100K .......... .......... .......... .......... .......... 97.1M\n 10150K .......... .......... .......... .......... .......... 87.5M\n 10200K .......... .......... .......... .......... .......... 1.19M\n 10250K .......... .......... .......... .......... ..........  103M\n 10300K .......... .......... .......... .......... .......... 50.4M\n 10350K .......... .......... .......... .......... .......... 7.30M\n 10400K .......... .......... .......... .......... ..........  111M\n 10450K .......... .......... .......... .......... .......... 1.53M\n 10500K .......... .......... .......... .......... ..........  107M\n 10550K .......... .......... .......... .......... ..........  109M\n 10600K .......... .......... .......... .......... .......... 7.71M\n 10650K .......... .......... .......... .......... .......... 98.4M\n 10700K .......... .......... .......... .......... .......... 90.4M\n 10750K .......... .......... .......... .......... .......... 96.2M\n 10800K .......... .......... .......... .......... .......... 1.19M\n 10850K .......... .......... .......... .......... .......... 93.6M\n 10900K .......... .......... .......... .......... .......... 37.3M\n 10950K .......... .......... .......... .......... .......... 7.51M\n 11000K .......... .......... .......... .......... .......... 1.57M\n 11050K .......... .......... .......... .......... ..........  107M\n 11100K .......... .......... .......... .......... ..........  126M\n 11150K .......... .......... .......... .......... .......... 99.9M\n 11200K .......... .......... .......... .......... .......... 7.81M\n 11250K .......... .......... .......... .......... ..........  118M\n 11300K .......... .......... .......... .......... .......... 89.6M\n 11350K .......... .......... .......... .......... .......... 1.19M\n 11400K .......... .......... .......... .......... .......... 54.4M\n 11450K .......... .......... .......... .......... .......... 22.4M\n 11500K .......... .......... .......... .......... .......... 98.8M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.95M\n 50150K .......... .......... .......... .......... .......... 5.13M\n 50200K .......... .......... .......... .......... .......... 4.91M\n 50250K .......... .......... .......... .......... .......... 11.0M\n 50300K .......... .......... .......... .......... .......... 5.11M\n 50350K .......... .......... .......... .......... .......... 4.96M\n 50400K .......... .......... .......... .......... .......... 5.19M\n 50450K .......... .......... .......... .......... .......... 9.02M\n 50500K .......... .......... .......... .......... .......... 5.36M\n 50550K .......... .......... .......... .......... .......... 3.14M\n 50600K .......... .......... .......... .......... .......... 7.92M\n 50650K .......... .......... .......... .......... .......... 7.57M\n 50700K .......... .......... .......... .......... .......... 5.70M\n 50750K .......... .......... .......... .......... .......... 6.47M\n 50800K .......... .......... .......... .......... .......... 4.98M\n 50850K .......... .......... .......... .......... .......... 10.1M\n 50900K .......... .......... .......... .......... .......... 5.22M\n 50950K .......... .......... .......... .......... .......... 4.86M\n 51000K .......... .......... .......... .......... .......... 4.73M\n 51050K .......... .......... .......... .......... .......... 6.80M\n 51100K .......... .......... .......... .......... .......... 7.18M\n 51150K .......... .......... .......... .......... .......... 5.02M\n 51200K .......... .......... .......... .......... .......... 5.69M\n 51250K .......... .......... .......... .......... .......... 4.86M\n 51300K .......... .......... .......... .......... .......... 10.8M\n 51350K .......... .......... .......... .......... .......... 5.15M\n 51400K .......... .......... .......... .......... .......... 5.12M\n 51450K .......... .......... .......... .......... .......... 5.07M\n 51500K .......... .......... .......... .......... .......... 6.64M\n 51550K .......... .......... .......... .......... .......... 6.99M\n 51600K .......... .......... .......... .......... .......... 5.11M\n 51650K .......... .......... .......... .......... .......... 5.53M\n 51700K .......... .......... .......... .......... .......... 5.17M\n 51750K .......... .......... .......... .......... .......... 9.05M\n 51800K .......... .......... .......... .......... .......... 5.40M\n 51850K .......... .......... .......... .......... .......... 5.18M\n 51900K .......... .......... .......... .......... .......... 5.35M\n 51950K .......... .......... .......... .......... .......... 9.37M\n 52000K .......... .......... .......... .......... .......... 5.09M\n 52050K .......... .......... .......... .......... .......... 5.36M\n 52100K .......... .......... .......... .......... .......... 5.19M\n 52150K .......... .......... .......... .......... .......... 9.90M\n 52200K .......... .......... .......... .......... .......... 5.14M\n 52250K .......... .......... .......... .......... .......... 4.07M\n 52300K .......... .......... .......... .......... .......... 6.63M\n 52350K .......... .......... .......... .......... .......... 11.6M\n 52400K .......... .......... .......... .......... .......... 4.97M\n 52450K .......... .......... .......... .......... .......... 4.70M\n 52500K .......... .......... .......... .......... .......... 3.94M\n 52550K .......... .......... .......... .......... .......... 14.0M\n 52600K .......... .......... .......... .......... .......... 6.40M\n 52650K .......... .......... .......... .......... .......... 5.44M\n 52700K .......... .......... .......... .......... .......... 4.74M\n 52750K .......... .......... .......... .......... .......... 12.5M\n 52800K .......... .......... .......... .......... .......... 5.17M\n 52850K .......... .......... .......... .......... .......... 4.89M\n 52900K .......... .......... .......... .......... .......... 1.92M\n 52950K .......... .......... .......... .......... .......... 3.16M\n 53000K .......... .......... .......... .......... .......... 1.92M\n 53050K .......... .......... .......... .......... .......... 2.45M\n 53100K .......... .......... .......... .......... .......... 2.80M\n 53150K .......... .......... .......... .......... .......... 5.08M\n 53200K .......... .......... .......... .......... .......... 3.30M\n 53250K .......... .......... .......... .......... .......... 3.10M\n 53300K .......... .......... .......... .......... .......... 3.54M\n 53350K .......... .......... .......... .......... .......... 9.23M\n 53400K .......... .......... .......... .......... .......... 3.90M\n 53450K .......... .......... .......... .......... .......... 4.04M\n 53500K .......... .......... .......... .......... .......... 4.33M\n 53550K .......... .......... .......... .......... .......... 8.75M\n 53600K .......... .......... .......... .......... .......... 4.27M\n 53650K .......... .......... .......... .......... .......... 4.97M\n 53700K .......... .......... .......... .......... .......... 5.11M\n 53750K .......... .......... .......... .......... .......... 7.60M\n 53800K .......... .......... .......... .......... .......... 5.52M\n 53850K .......... .......... .......... .......... .......... 5.07M\n 53900K .......... .......... .......... .......... .......... 5.89M\n 53950K .......... .......... .......... .......... .......... 4.67M\n 54000K .......... .......... .......... .......... .......... 13.4M\n 54050K .......... .......... .......... .......... .......... 5.14M\n 54100K .......... .......... .......... .......... .......... 5.13M\n 54150K .......... .......... .......... .......... .......... 4.99M\n 54200K .......... .......... .......... .......... .......... 12.6M\n 54250K .......... .......... .......... .......... .......... 5.04M\n 54300K .......... .......... .......... .......... .......... 4.62M\n 54350K .......... .......... .......... .......... .......... 6.02M\n 54400K .......... .......... .......... .......... .......... 10.7M\n 54450K .......... .......... .......... .......... .......... 4.90M\n 54500K .......... .......... .......... .......... .......... 5.24M\n 54550K .......... .......... .......... .......... .......... 5.12M\n 54600K .......... .......... .......... .......... .......... 9.14M\n 54650K .......... .......... .......... .......... .......... 4.97M\n 54700K .......... .......... .......... .......... .......... 4.92M\n 54750K .......... .......... .......... .......... .......... 5.94M\n 54800K .......... .......... .......... .......... .......... 10.1M\n 54850K .......... .......... .......... .......... .......... 5.00M\n 54900K .......... .......... .......... .......... .......... 4.93M\n 54950K .......... .......... .......... .......... .......... 5.02M\n 55000K .......... .......... .......... .......... .......... 11.1M\n 55050K .......... .......... .......... .......... .......... 5.40M\n 55100K .......... .......... .......... .......... .......... 5.18M\n 55150K .......... .......... .......... .......... .......... 5.20M\n 55200K .......... .......... .......... .......... .......... 5.21M\n 55250K .......... .......... .......... .......... .......... 4.90M\n 55300K .......... .......... .......... .......... .......... 8.91M\n 55350K .......... .......... .......... .......... .......... 4.96M\n 55400K .......... .......... .......... .......... .......... 5.73M\n 55450K .......... .......... .......... .......... .......... 7.98M\n 55500K .......... .......... .......... .......... .......... 5.63M\n 55550K .......... .......... .......... .......... .......... 4.71M\n 55600K .......... .......... .......... .......... .......... 4.85M\n 55650K .......... .......... .......... .......... .......... 9.58M\n 55700K .......... .......... .......... .......... .......... 5.06M\n 55750K .......... .......... .......... .......... .......... 5.34M\n 55800K .......... .......... .......... .......... .......... 5.23M\n 55850K .......... .......... .......... .......... .......... 10.5M\n 55900K .......... .......... .......... .......... .......... 4.98M\n 55950K .......... .......... .......... .......... .......... 5.08M\n 56000K .......... .......... .......... .......... .......... 5.16M\n 56050K .......... .......... .......... .......... .......... 9.96M\n 56100K .......... .......... .......... .......... .......... 5.19M\n 56150K .......... .......... .......... .......... .......... 4.31M\n 56200K .......... .......... .......... .......... .......... 5.55M\n 56250K .......... .......... .......... .......... .......... 11.4M\n 56300K .......... .......... .......... .......... .......... 5.23M\n 56350K .......... .......... .......... .......... .......... 5.20M\n 56400K .......... .......... .......... .......... .......... 4.45M\n 56450K .......... .......... .......... .......... .......... 12.1M\n 56500K .......... .......... .......... .......... .......... 5.65M\n 56550K .......... .......... .......... .......... .......... 4.49M\n 56600K .......... .......... .......... .......... .......... 5.09M\n 56650K .......... .......... .......... .......... .......... 13.4M\n 56700K .......... .......... .......... .......... .......... 5.21M\n 56750K .......... .......... .......... .......... .......... 5.17M\n 56800K .......... .......... .......... .......... .......... 3.10M\n 56850K .......... .......... .......... .......... .......... 12.7M\n 56900K .......... .......... .......... .......... .......... 11.1M\n 56950K .......... .......... .......... .......... .......... 5.09M\n 57000K .......... .......... .......... .......... .......... 5.11M\n 57050K .......... .......... .......... .......... .......... 5.41M\n 57100K .......... .......... .......... .......... .......... 10.2M\n 57150K .......... .......... .......... .......... .......... 5.02M\n 57200K .......... .......... .......... .......... .......... 4.75M\n 57250K .......... .......... .......... .......... .......... 12.8M\n 57300K .......... .......... .......... .......... .......... 4.31M\n 57350K .......... .......... .......... .......... .......... 6.16M\n 57400K .......... .......... .......... .......... .......... 5.28M\n 57450K .......... .......... .......... .......... .......... 9.92M\n 57500K .......... .......... .......... .......... .......... 5.15M\n 57550K .......... .......... .......... .......... .......... 5.37M\n 57600K .......... .......... .......... .......... .......... 4.84M\n 57650K .......... .......... .......... .......... .......... 10.5M\n 57700K .......... .......... .......... .......... .......... 5.20M\n 57750K .......... .......... .......... .......... .......... 5.23M\n 57800K .......... .......... .......... .......... .......... 5.05M\n 57850K .......... .......... .......... .......... .......... 9.65M\n 57900K .......... .......... .......... .......... .......... 5.31M\n 57950K .......... .......... .......... .......... .......... 5.33M\n 58000K .......... .......... .......... .......... .......... 4.53M\n 58050K .......... .......... .......... .......... .......... 11.6M\n 58100K .......... .......... .......... .......... .......... 5.15M\n 58150K .......... .......... .......... .......... .......... 5.22M\n 58200K .......... .......... .......... .......... .......... 5.09M\n 58250K .......... .......... .......... .......... .......... 10.0M\n 58300K .......... .......... .......... .......... .......... 5.12M\n 58350K .......... .......... .......... .......... .......... 5.01M\n 58400K .......... .......... .......... .......... .......... 1.50M\n 58450K .......... .......... .......... .......... .......... 3.50M\n 58500K .......... .......... .......... .......... .......... 2.13M\n 58550K .......... .......... .......... .......... .......... 2.52M\n 58600K .......... .......... .......... .......... .......... 2.70M\n 58650K .......... .......... .......... .......... .......... 5.76M\n 58700K .......... .......... .......... .......... .......... 3.28M\n 58750K .......... .......... .......... .......... .......... 2.86M\n 58800K .......... .......... .......... .......... .......... 4.23M\n 58850K .......... .......... .......... .......... .......... 7.29M\n 58900K .......... .......... .......... .......... .......... 4.54M\n 58950K .......... .......... .......... .......... .......... 1.97M\n 59000K .......... .......... .......... .......... .......... 1.74M\n 59050K .......... .......... .......... .......... .......... 2.15M\n 59100K .......... .......... .......... .......... .......... 4.90M\n 59150K .......... .......... .......... .......... .......... 2.84M\n 59200K .......... .......... .......... .......... .......... 3.05M\n 59250K .......... .......... .......... .......... .......... 3.03M\n 59300K .......... .......... .......... .......... .......... 3.50M\n 59350K .......... .......... .......... .......... .......... 7.15M\n 59400K .......... .......... .......... .......... .......... 3.74M\n 59450K .......... .......... .......... .......... .......... 4.05M\n 59500K .......... .......... .......... .......... .......... 4.37M\n 59550K .......... .......... .......... .......... .......... 7.59M\n 59600K .......... .......... .......... .......... .......... 5.14M\n 59650K .......... .......... .......... .......... .......... 4.32M\n 59700K .......... .......... .......... .......... .......... 5.46M\n 59750K .......... .......... .......... .......... .......... 7.45M\n 59800K .......... .......... .......... .......... .......... 6.14M\n 59850K .......... .......... .......... .......... .......... 4.89M\n 59900K .......... .......... .......... .......... .......... 4.94M\n 59950K .......... .......... .......... .......... .......... 10.8M\n 60000K .......... .......... .......... .......... .......... 5.19M\n 60050K .......... .......... .......... .......... .......... 4.71M\n 60100K .......... .......... .......... .......... .......... 5.17M\n 60150K .......... .......... .......... .......... .......... 10.5M\n 60200K .......... .......... .......... .......... .......... 5.10M\n 60250K .......... .......... .......... .......... .......... 5.08M\n 60300K .......... .......... .......... .......... .......... 5.09M\n 60350K .......... .......... .......... .......... .......... 9.84M\n 60400K .......... .......... .......... .......... .......... 5.29M\n 60450K .......... .......... .......... .......... .......... 5.19M\n 60500K .......... .......... .......... .......... .......... 5.27M\n 60550K .......... .......... .......... .......... .......... 10.7M\n 60600K .......... .......... .......... .......... ..........  387K\n 60650K .......... .........                                   21.1M=14s\n\n2024-12-02 19:21:10 (4.13 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-12-02 19:21:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  559K 3s\n   100K .......... .......... .......... .......... .......... 18%  380K 2s\n   150K .......... .......... .......... .......... .......... 24% 1.02M 2s\n   200K .......... .......... .......... .......... .......... 30%  559K 1s\n   250K .......... .......... .......... .......... .......... 36%  560K 1s\n   300K .......... .......... .......... .......... .......... 42% 1.11M 1s\n   350K .......... .......... .......... .......... .......... 48% 1.07M 1s\n   400K .......... .......... .......... .......... .......... 54%  563K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.5M 1s\n   500K .......... .......... .......... .......... .......... 66%  581K 0s\n   550K .......... .......... .......... .......... .......... 72% 12.8M 0s\n   600K .......... .......... .......... .......... .......... 78%  582K 0s\n   650K .......... .......... .......... .......... .......... 84% 12.5M 0s\n   700K .......... .......... .......... .......... .......... 90%  586K 0s\n   750K .......... .......... .......... .......... .......... 96% 13.6M 0s\n   800K .......... .......... .......                         100%  670K=1.2s\n\n2024-12-02 19:21:17 (686 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "update_time": "2024-12-02T19:21:34.263235",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 58.974706411361694, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-12-02 19:20:55--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  186K    50K .......... .......... .......... .......... ..........  225K   100K .......... .......... .......... .......... ..........  367K   150K .......... .......... .......... .......... ..........  557K   200K .......... .......... .......... .......... ..........  376K   250K .......... .......... .......... .......... ..........  557K   300K .......... .......... .......... .......... ..........  560K   350K .......... .......... .......... .......... ..........  558K   400K .......... .......... .......... .......... .......... 1.02M   450K .......... .......... .......... .......... ..........  556K   500K .......... .......... .......... .......... ..........  560K   550K .......... .......... .......... .......... .......... 1.17M   600K .......... .......... .......... .......... .......... 1.01M   650K .......... .......... .......... .......... .......... 1.12M   700K .......... .......... .......... .......... .......... 1.05M   750K .......... .......... .......... .......... ..........  560K   800K .......... .......... .......... .......... .......... 1.15M   850K .......... .......... .......... .......... .......... 1.03M   900K .......... .......... .......... .......... .......... 1.07M   950K .......... .......... .......... .......... .......... 1.11M  1000K .......... .......... .......... .......... .......... 1.07M  1050K .......... .......... .......... .......... .......... 1.10M  1100K .......... .......... .......... .......... .......... 1.11M  1150K .......... .......... .......... .......... .......... 1.06M  1200K .......... .......... .......... .......... .......... 1.16M  1250K .......... .......... .......... .......... .......... 1.02M  1300K .......... .......... .......... .......... .......... 1.18M  1350K .......... .......... .......... .......... .......... 1.02M  1400K .......... .......... .......... .......... ..........  101M  1450K .......... .......... .......... .......... .......... 1.10M  1500K .......... .......... .......... .......... .......... 1.08M  1550K .......... .......... .......... .......... .......... 1.17M  1600K .......... .......... .......... .......... .......... 18.0M  1650K .......... .......... .......... .......... .......... 1.08M  1700K .......... .......... .......... .......... .......... 1.17M  1750K .......... .......... .......... .......... .......... 11.3M  1800K .......... .......... .......... .......... .......... 1.13M  1850K .......... .......... .......... .......... .......... 1.17M  1900K .......... .......... .......... .......... .......... 22.1M  1950K .......... .......... .......... .......... .......... 1.08M  2000K .......... .......... .......... .......... .......... 86.0M  2050K .......... .......... .......... .......... .......... 1.15M  2100K .......... .......... .......... .......... .......... 13.7M  2150K .......... .......... .......... .......... .......... 1.13M  2200K .......... .......... .......... .......... ..........  116M  2250K .......... .......... .......... .......... .......... 1.11M  2300K .......... .......... .......... .......... .......... 18.8M  2350K .......... .......... .......... .......... .......... 1.14M  2400K .......... .......... .......... .......... .......... 98.4M  2450K .......... .......... .......... .......... .......... 1.14M  2500K .......... .......... .......... .......... .......... 18.1M  2550K .......... .......... .......... .......... .......... 1.12M  2600K .......... .......... .......... .......... ..........  107M  2650K .......... .......... .......... .......... .......... 1.15M  2700K .......... .......... .......... .......... .......... 36.7M  2750K .......... .......... .......... .......... .......... 12.1M  2800K .......... .......... .......... .......... .......... 1.17M  2850K .......... .......... .......... .......... ..........  116M  2900K .......... .......... .......... .......... .......... 1.13M  2950K .......... .......... .......... .......... .......... 40.2M  3000K .......... .......... .......... .......... .......... 12.6M  3050K .......... .......... .......... .......... .......... 1.14M  3100K .......... .......... .......... .......... .......... 97.2M  3150K .......... .......... .......... .......... .......... 1.18M  3200K .......... .......... .......... .......... .......... 55.7M  3250K .......... .......... .......... .......... .......... 15.2M  3300K .......... .......... .......... .......... .......... 1.12M  3350K .......... .......... .......... .......... ..........  136M  3400K .......... .......... .......... .......... .......... 8.89M  3450K .......... .......... .......... .......... .......... 1.32M  3500K .......... .......... .......... .......... .......... 29.2M  3550K .......... .......... .......... .......... .......... 14.8M  3600K .......... .......... .......... .......... .......... 1.16M  3650K .......... .......... .......... .......... ..........  134M  3700K .......... .......... .......... .......... .......... 1.17M  3750K .......... .......... .......... .......... .......... 60.0M  3800K .......... .......... .......... .......... .......... 34.4M  3850K .......... .......... .......... .......... .......... 12.0M  3900K .......... .......... .......... .......... .......... 1.18M  3950K .......... .......... .......... .......... ..........  137M  4000K .......... .......... .......... .......... .......... 1.18M  4050K .......... .......... .......... .......... .......... 44.9M  4100K .......... .......... .......... .......... .......... 36.3M  4150K .......... .......... .......... .......... .......... 12.5M  4200K .......... .......... .......... .......... .......... 1.18M  4250K .......... .......... .......... .......... ..........  106M  4300K .......... .......... .......... .......... .......... 8.28M  4350K .......... .......... .......... .......... .......... 1.34M  4400K .......... .......... .......... .......... .......... 29.7M  4450K .......... .......... .......... .......... .......... 12.7M  4500K .......... .......... .......... .......... .......... 1.18M  4550K .......... .......... .......... .......... ..........  105M  4600K .......... .......... .......... .......... .......... 7.83M  4650K .......... .......... .......... .......... .......... 1.36M  4700K .......... .......... .......... .......... ..........  132M  4750K .......... .......... .......... .......... .......... 15.9M  4800K .......... .......... .......... .......... .......... 19.2M  4850K .......... .......... .......... .......... .......... 1.17M  4900K .......... .......... .......... .......... ..........  123M  4950K .......... .......... .......... .......... .......... 8.10M  5000K .......... .......... .......... .......... .......... 1.38M  5050K .......... .......... .......... .......... .......... 76.6M  5100K .......... .......... .......... .......... .......... 15.0M  5150K .......... .......... .......... .......... .......... 22.8M  5200K .......... .......... .......... .......... .......... 1.16M  5250K .......... .......... .......... .......... .......... 97.4M  5300K .......... .......... .......... .......... .......... 8.85M  5350K .......... .......... .......... .......... .......... 1.38M  5400K .......... .......... .......... .......... .......... 79.0M  5450K .......... .......... .......... .......... .......... 14.1M  5500K .......... .......... .......... .......... .......... 27.7M  5550K .......... .......... .......... .......... .......... 25.6M  5600K .......... .......... .......... .......... .......... 1.19M  5650K .......... .......... .......... .......... ..........  120M  5700K .......... .......... .......... .......... .......... 1.21M  5750K .......... .......... .......... .......... ..........  128M  5800K .......... .......... .......... .......... ..........  130M  5850K .......... .......... .......... .......... .......... 8.32M  5900K .......... .......... .......... .......... .......... 50.0M  5950K .......... .......... .......... .......... .......... 1.18M  6000K .......... .......... .......... .......... .......... 98.0M  6050K .......... .......... .......... .......... ..........  102M  6100K .......... .......... .......... .......... .......... 1.23M  6150K .......... .......... .......... .......... .......... 96.0M  6200K .......... .......... .......... .......... .......... 96.0M  6250K .......... .......... .......... .......... .......... 9.00M  6300K .......... .......... .......... .......... .......... 31.6M  6350K .......... .......... .......... .......... .......... 1.19M  6400K .......... .......... .......... .......... .......... 95.1M  6450K .......... .......... .......... .......... .......... 16.4M  6500K .......... .......... .......... .......... .......... 1.30M  6550K .......... .......... .......... .......... ..........  123M  6600K .......... .......... .......... .......... ..........  121M  6650K .......... .......... .......... .......... .......... 9.25M  6700K .......... .......... .......... .......... .......... 31.7M  6750K .......... .......... .......... .......... .......... 61.5M  6800K .......... .......... .......... .......... .......... 1.20M  6850K .......... .......... .......... .......... ..........  106M  6900K .......... .......... .......... .......... .......... 9.41M  6950K .......... .......... .......... .......... .......... 1.39M  7000K .......... .......... .......... .......... .......... 93.7M  7050K .......... .......... .......... .......... ..........  109M  7100K .......... .......... .......... .......... .......... 8.92M  7150K .......... .......... .......... .......... .......... 40.0M  7200K .......... .......... .......... .......... .......... 1.20M  7250K .......... .......... .......... .......... .......... 87.6M  7300K .......... .......... .......... .......... ..........  108M  7350K .......... .......... .......... .......... .......... 7.62M  7400K .......... .......... .......... .......... .......... 1.44M  7450K .......... .......... .......... .......... .......... 88.6M  7500K .......... .......... .......... .......... .......... 8.37M  7550K .......... .......... .......... .......... .......... 80.1M  7600K .......... .......... .......... .......... .......... 68.8M  7650K .......... .......... .......... .......... .......... 1.18M  7700K .......... .......... .......... .......... ..........  114M  7750K .......... .......... .......... .......... ..........  114M  7800K .......... .......... .......... .......... .......... 7.17M  7850K .......... .......... .......... .......... .......... 1.48M  7900K .......... .......... .......... .......... ..........  150M  7950K .......... .......... .......... .......... ..........  126M  8000K .......... .......... .......... .......... .......... 7.32M  8050K .......... .......... .......... .......... ..........  128M  8100K .......... .......... .......... .......... ..........  135M  8150K .......... .......... .......... .......... .......... 1.18M  8200K .......... .......... .......... .......... ..........  127M  8250K .......... .......... .......... .......... .......... 8.01M  8300K .......... .......... .......... .......... .......... 85.6M  8350K .......... .......... .......... .......... .......... 1.48M  8400K .......... .......... .......... .......... ..........  123M  8450K .......... .......... .......... .......... ..........  144M  8500K .......... .......... .......... .......... .......... 7.33M  8550K .......... .......... .......... .......... ..........  123M  8600K .......... .......... .......... .......... ..........  136M  8650K .......... .......... .......... .......... .......... 1.18M  8700K .......... .......... .......... .......... ..........  143M  8750K .......... .......... .......... .......... .......... 7.67M  8800K .......... .......... .......... .......... .......... 52.7M  8850K .......... .......... .......... .......... .......... 1.50M  8900K .......... .......... .......... .......... ..........  108M  8950K .......... .......... .......... .......... .......... 7.81M  9000K .......... .......... .......... .......... ..........  107M  9050K .......... .......... .......... .......... .......... 93.7M  9100K .......... .......... .......... .......... ..........  131M  9150K .......... .......... .......... .......... .......... 1.19M  9200K .......... .......... .......... .......... .......... 75.6M  9250K .......... .......... .......... .......... ..........  119M  9300K .......... .......... .......... .......... .......... 7.72M  9350K .......... .......... .......... .......... .......... 1.47M  9400K .......... .......... .......... .......... ..........  102M  9450K .......... .......... .......... .......... ..........  101M  9500K .......... .......... .......... .......... .......... 8.30M  9550K .......... .......... .......... .......... ..........  115M  9600K .......... .......... .......... .......... ..........  114M  9650K .......... .......... .......... .......... ..........  107M  9700K .......... .......... .......... .......... .......... 1.19M  9750K .......... .......... .......... .......... .......... 64.4M  9800K .......... .......... .......... .......... .......... 7.76M  9850K .......... .......... .......... .......... ..........  106M  9900K .......... .......... .......... .......... .......... 1.49M  9950K .......... .......... .......... .......... ..........  129M 10000K .......... .......... .......... .......... .......... 96.5M 10050K .......... .......... .......... .......... .......... 7.87M 10100K .......... .......... .......... .......... .......... 97.1M 10150K .......... .......... .......... .......... .......... 87.5M 10200K .......... .......... .......... .......... .......... 1.19M 10250K .......... .......... .......... .......... ..........  103M 10300K .......... .......... .......... .......... .......... 50.4M 10350K .......... .......... .......... .......... .......... 7.30M 10400K .......... .......... .......... .......... ..........  111M 10450K .......... .......... .......... .......... .......... 1.53M 10500K .......... .......... .......... .......... ..........  107M 10550K .......... .......... .......... .......... ..........  109M 10600K .......... .......... .......... .......... .......... 7.71M 10650K .......... .......... .......... .......... .......... 98.4M 10700K .......... .......... .......... .......... .......... 90.4M 10750K .......... .......... .......... .......... .......... 96.2M 10800K .......... .......... .......... .......... .......... 1.19M 10850K .......... .......... .......... .......... .......... 93.6M 10900K .......... .......... .......... .......... .......... 37.3M 10950K .......... .......... .......... .......... .......... 7.51M 11000K .......... .......... .......... .......... .......... 1.57M 11050K .......... .......... .......... .......... ..........  107M 11100K .......... .......... .......... .......... ..........  126M 11150K .......... .......... .......... .......... .......... 99.9M 11200K .......... .......... .......... .......... .......... 7.81M 11250K .......... .......... .......... .......... ..........  118M 11300K .......... .......... .......... .......... .......... 89.6M 11350K .......... .......... .......... .......... .......... 1.19M 11400K .......... .......... .......... .......... .......... 54.4M 11450K .......... .......... .......... .......... .......... 22.4M 11500K .......... .......... .......... .......... .......... 98.8M 11550K .......... .......... .......... .......... .................. 4.95M 50150K .......... .......... .......... .......... .......... 5.13M 50200K .......... .......... .......... .......... .......... 4.91M 50250K .......... .......... .......... .......... .......... 11.0M 50300K .......... .......... .......... .......... .......... 5.11M 50350K .......... .......... .......... .......... .......... 4.96M 50400K .......... .......... .......... .......... .......... 5.19M 50450K .......... .......... .......... .......... .......... 9.02M 50500K .......... .......... .......... .......... .......... 5.36M 50550K .......... .......... .......... .......... .......... 3.14M 50600K .......... .......... .......... .......... .......... 7.92M 50650K .......... .......... .......... .......... .......... 7.57M 50700K .......... .......... .......... .......... .......... 5.70M 50750K .......... .......... .......... .......... .......... 6.47M 50800K .......... .......... .......... .......... .......... 4.98M 50850K .......... .......... .......... .......... .......... 10.1M 50900K .......... .......... .......... .......... .......... 5.22M 50950K .......... .......... .......... .......... .......... 4.86M 51000K .......... .......... .......... .......... .......... 4.73M 51050K .......... .......... .......... .......... .......... 6.80M 51100K .......... .......... .......... .......... .......... 7.18M 51150K .......... .......... .......... .......... .......... 5.02M 51200K .......... .......... .......... .......... .......... 5.69M 51250K .......... .......... .......... .......... .......... 4.86M 51300K .......... .......... .......... .......... .......... 10.8M 51350K .......... .......... .......... .......... .......... 5.15M 51400K .......... .......... .......... .......... .......... 5.12M 51450K .......... .......... .......... .......... .......... 5.07M 51500K .......... .......... .......... .......... .......... 6.64M 51550K .......... .......... .......... .......... .......... 6.99M 51600K .......... .......... .......... .......... .......... 5.11M 51650K .......... .......... .......... .......... .......... 5.53M 51700K .......... .......... .......... .......... .......... 5.17M 51750K .......... .......... .......... .......... .......... 9.05M 51800K .......... .......... .......... .......... .......... 5.40M 51850K .......... .......... .......... .......... .......... 5.18M 51900K .......... .......... .......... .......... .......... 5.35M 51950K .......... .......... .......... .......... .......... 9.37M 52000K .......... .......... .......... .......... .......... 5.09M 52050K .......... .......... .......... .......... .......... 5.36M 52100K .......... .......... .......... .......... .......... 5.19M 52150K .......... .......... .......... .......... .......... 9.90M 52200K .......... .......... .......... .......... .......... 5.14M 52250K .......... .......... .......... .......... .......... 4.07M 52300K .......... .......... .......... .......... .......... 6.63M 52350K .......... .......... .......... .......... .......... 11.6M 52400K .......... .......... .......... .......... .......... 4.97M 52450K .......... .......... .......... .......... .......... 4.70M 52500K .......... .......... .......... .......... .......... 3.94M 52550K .......... .......... .......... .......... .......... 14.0M 52600K .......... .......... .......... .......... .......... 6.40M 52650K .......... .......... .......... .......... .......... 5.44M 52700K .......... .......... .......... .......... .......... 4.74M 52750K .......... .......... .......... .......... .......... 12.5M 52800K .......... .......... .......... .......... .......... 5.17M 52850K .......... .......... .......... .......... .......... 4.89M 52900K .......... .......... .......... .......... .......... 1.92M 52950K .......... .......... .......... .......... .......... 3.16M 53000K .......... .......... .......... .......... .......... 1.92M 53050K .......... .......... .......... .......... .......... 2.45M 53100K .......... .......... .......... .......... .......... 2.80M 53150K .......... .......... .......... .......... .......... 5.08M 53200K .......... .......... .......... .......... .......... 3.30M 53250K .......... .......... .......... .......... .......... 3.10M 53300K .......... .......... .......... .......... .......... 3.54M 53350K .......... .......... .......... .......... .......... 9.23M 53400K .......... .......... .......... .......... .......... 3.90M 53450K .......... .......... .......... .......... .......... 4.04M 53500K .......... .......... .......... .......... .......... 4.33M 53550K .......... .......... .......... .......... .......... 8.75M 53600K .......... .......... .......... .......... .......... 4.27M 53650K .......... .......... .......... .......... .......... 4.97M 53700K .......... .......... .......... .......... .......... 5.11M 53750K .......... .......... .......... .......... .......... 7.60M 53800K .......... .......... .......... .......... .......... 5.52M 53850K .......... .......... .......... .......... .......... 5.07M 53900K .......... .......... .......... .......... .......... 5.89M 53950K .......... .......... .......... .......... .......... 4.67M 54000K .......... .......... .......... .......... .......... 13.4M 54050K .......... .......... .......... .......... .......... 5.14M 54100K .......... .......... .......... .......... .......... 5.13M 54150K .......... .......... .......... .......... .......... 4.99M 54200K .......... .......... .......... .......... .......... 12.6M 54250K .......... .......... .......... .......... .......... 5.04M 54300K .......... .......... .......... .......... .......... 4.62M 54350K .......... .......... .......... .......... .......... 6.02M 54400K .......... .......... .......... .......... .......... 10.7M 54450K .......... .......... .......... .......... .......... 4.90M 54500K .......... .......... .......... .......... .......... 5.24M 54550K .......... .......... .......... .......... .......... 5.12M 54600K .......... .......... .......... .......... .......... 9.14M 54650K .......... .......... .......... .......... .......... 4.97M 54700K .......... .......... .......... .......... .......... 4.92M 54750K .......... .......... .......... .......... .......... 5.94M 54800K .......... .......... .......... .......... .......... 10.1M 54850K .......... .......... .......... .......... .......... 5.00M 54900K .......... .......... .......... .......... .......... 4.93M 54950K .......... .......... .......... .......... .......... 5.02M 55000K .......... .......... .......... .......... .......... 11.1M 55050K .......... .......... .......... .......... .......... 5.40M 55100K .......... .......... .......... .......... .......... 5.18M 55150K .......... .......... .......... .......... .......... 5.20M 55200K .......... .......... .......... .......... .......... 5.21M 55250K .......... .......... .......... .......... .......... 4.90M 55300K .......... .......... .......... .......... .......... 8.91M 55350K .......... .......... .......... .......... .......... 4.96M 55400K .......... .......... .......... .......... .......... 5.73M 55450K .......... .......... .......... .......... .......... 7.98M 55500K .......... .......... .......... .......... .......... 5.63M 55550K .......... .......... .......... .......... .......... 4.71M 55600K .......... .......... .......... .......... .......... 4.85M 55650K .......... .......... .......... .......... .......... 9.58M 55700K .......... .......... .......... .......... .......... 5.06M 55750K .......... .......... .......... .......... .......... 5.34M 55800K .......... .......... .......... .......... .......... 5.23M 55850K .......... .......... .......... .......... .......... 10.5M 55900K .......... .......... .......... .......... .......... 4.98M 55950K .......... .......... .......... .......... .......... 5.08M 56000K .......... .......... .......... .......... .......... 5.16M 56050K .......... .......... .......... .......... .......... 9.96M 56100K .......... .......... .......... .......... .......... 5.19M 56150K .......... .......... .......... .......... .......... 4.31M 56200K .......... .......... .......... .......... .......... 5.55M 56250K .......... .......... .......... .......... .......... 11.4M 56300K .......... .......... .......... .......... .......... 5.23M 56350K .......... .......... .......... .......... .......... 5.20M 56400K .......... .......... .......... .......... .......... 4.45M 56450K .......... .......... .......... .......... .......... 12.1M 56500K .......... .......... .......... .......... .......... 5.65M 56550K .......... .......... .......... .......... .......... 4.49M 56600K .......... .......... .......... .......... .......... 5.09M 56650K .......... .......... .......... .......... .......... 13.4M 56700K .......... .......... .......... .......... .......... 5.21M 56750K .......... .......... .......... .......... .......... 5.17M 56800K .......... .......... .......... .......... .......... 3.10M 56850K .......... .......... .......... .......... .......... 12.7M 56900K .......... .......... .......... .......... .......... 11.1M 56950K .......... .......... .......... .......... .......... 5.09M 57000K .......... .......... .......... .......... .......... 5.11M 57050K .......... .......... .......... .......... .......... 5.41M 57100K .......... .......... .......... .......... .......... 10.2M 57150K .......... .......... .......... .......... .......... 5.02M 57200K .......... .......... .......... .......... .......... 4.75M 57250K .......... .......... .......... .......... .......... 12.8M 57300K .......... .......... .......... .......... .......... 4.31M 57350K .......... .......... .......... .......... .......... 6.16M 57400K .......... .......... .......... .......... .......... 5.28M 57450K .......... .......... .......... .......... .......... 9.92M 57500K .......... .......... .......... .......... .......... 5.15M 57550K .......... .......... .......... .......... .......... 5.37M 57600K .......... .......... .......... .......... .......... 4.84M 57650K .......... .......... .......... .......... .......... 10.5M 57700K .......... .......... .......... .......... .......... 5.20M 57750K .......... .......... .......... .......... .......... 5.23M 57800K .......... .......... .......... .......... .......... 5.05M 57850K .......... .......... .......... .......... .......... 9.65M 57900K .......... .......... .......... .......... .......... 5.31M 57950K .......... .......... .......... .......... .......... 5.33M 58000K .......... .......... .......... .......... .......... 4.53M 58050K .......... .......... .......... .......... .......... 11.6M 58100K .......... .......... .......... .......... .......... 5.15M 58150K .......... .......... .......... .......... .......... 5.22M 58200K .......... .......... .......... .......... .......... 5.09M 58250K .......... .......... .......... .......... .......... 10.0M 58300K .......... .......... .......... .......... .......... 5.12M 58350K .......... .......... .......... .......... .......... 5.01M 58400K .......... .......... .......... .......... .......... 1.50M 58450K .......... .......... .......... .......... .......... 3.50M 58500K .......... .......... .......... .......... .......... 2.13M 58550K .......... .......... .......... .......... .......... 2.52M 58600K .......... .......... .......... .......... .......... 2.70M 58650K .......... .......... .......... .......... .......... 5.76M 58700K .......... .......... .......... .......... .......... 3.28M 58750K .......... .......... .......... .......... .......... 2.86M 58800K .......... .......... .......... .......... .......... 4.23M 58850K .......... .......... .......... .......... .......... 7.29M 58900K .......... .......... .......... .......... .......... 4.54M 58950K .......... .......... .......... .......... .......... 1.97M 59000K .......... .......... .......... .......... .......... 1.74M 59050K .......... .......... .......... .......... .......... 2.15M 59100K .......... .......... .......... .......... .......... 4.90M 59150K .......... .......... .......... .......... .......... 2.84M 59200K .......... .......... .......... .......... .......... 3.05M 59250K .......... .......... .......... .......... .......... 3.03M 59300K .......... .......... .......... .......... .......... 3.50M 59350K .......... .......... .......... .......... .......... 7.15M 59400K .......... .......... .......... .......... .......... 3.74M 59450K .......... .......... .......... .......... .......... 4.05M 59500K .......... .......... .......... .......... .......... 4.37M 59550K .......... .......... .......... .......... .......... 7.59M 59600K .......... .......... .......... .......... .......... 5.14M 59650K .......... .......... .......... .......... .......... 4.32M 59700K .......... .......... .......... .......... .......... 5.46M 59750K .......... .......... .......... .......... .......... 7.45M 59800K .......... .......... .......... .......... .......... 6.14M 59850K .......... .......... .......... .......... .......... 4.89M 59900K .......... .......... .......... .......... .......... 4.94M 59950K .......... .......... .......... .......... .......... 10.8M 60000K .......... .......... .......... .......... .......... 5.19M 60050K .......... .......... .......... .......... .......... 4.71M 60100K .......... .......... .......... .......... .......... 5.17M 60150K .......... .......... .......... .......... .......... 10.5M 60200K .......... .......... .......... .......... .......... 5.10M 60250K .......... .......... .......... .......... .......... 5.08M 60300K .......... .......... .......... .......... .......... 5.09M 60350K .......... .......... .......... .......... .......... 9.84M 60400K .......... .......... .......... .......... .......... 5.29M 60450K .......... .......... .......... .......... .......... 5.19M 60500K .......... .......... .......... .......... .......... 5.27M 60550K .......... .......... .......... .......... .......... 10.7M 60600K .......... .......... .......... .......... ..........  387K 60650K .......... .........                                   21.1M=14s2024-12-02 19:21:10 (4.13 MB/s) - 'exp_quant.zip' saved [62125370]--2024-12-02 19:21:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.192.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.192.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  187K 4s    50K .......... .......... .......... .......... .......... 12%  559K 3s   100K .......... .......... .......... .......... .......... 18%  380K 2s   150K .......... .......... .......... .......... .......... 24% 1.02M 2s   200K .......... .......... .......... .......... .......... 30%  559K 1s   250K .......... .......... .......... .......... .......... 36%  560K 1s   300K .......... .......... .......... .......... .......... 42% 1.11M 1s   350K .......... .......... .......... .......... .......... 48% 1.07M 1s   400K .......... .......... .......... .......... .......... 54%  563K 1s   450K .......... .......... .......... .......... .......... 60% 14.5M 1s   500K .......... .......... .......... .......... .......... 66%  581K 0s   550K .......... .......... .......... .......... .......... 72% 12.8M 0s   600K .......... .......... .......... .......... .......... 78%  582K 0s   650K .......... .......... .......... .......... .......... 84% 12.5M 0s   700K .......... .......... .......... .......... .......... 90%  586K 0s   750K .......... .......... .......... .......... .......... 96% 13.6M 0s   800K .......... .......... .......                         100%  670K=1.2s2024-12-02 19:21:17 (686 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="59.467713356018066">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-12-02 19:08:13.760] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-12-02 19:08:13.760] [jLog] [info] building indexout : ./index[2024-12-02 19:08:13.761] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-12-02 19:08:13.769] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-12-02 19:08:13.769] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-12-02 19:08:13.783] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-12-02 19:08:13.785] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-12-02 19:08:13.851] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-12-02 19:08:13.851] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 791.56 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 659.19 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-12-02 19:08:13.853] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-12-02 19:08:13.853] [puff::index::jointLog] [info] contig count for validation: 23[2024-12-02 19:08:13.853] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-12-02 19:08:13.853] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-12-02 19:08:13.854] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-12-02 19:08:13.854] [puff::index::jointLog] [info] bits per offset entry 6[2024-12-02 19:08:13.854] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-12-02 19:08:13.866] [puff::index::jointLog] [info] # segments = 23[2024-12-02 19:08:13.866] [puff::index::jointLog] [info] total length = 19592[2024-12-02 19:08:13.866] [puff::index::jointLog] [info] Reading the reference files ...[2024-12-02 19:08:13.878] [puff::index::jointLog] [info] positional integer width = 15[2024-12-02 19:08:13.878] [puff::index::jointLog] [info] seqSize = 19592[2024-12-02 19:08:13.878] [puff::index::jointLog] [info] rankSize = 19592[2024-12-02 19:08:13.878] [puff::index::jointLog] [info] edgeVecSize = 0[2024-12-02 19:08:13.878] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-12-02 19:08:13.967] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-12-02 19:08:13.967] [puff::index::jointLog] [info] chunk size = 9796[2024-12-02 19:08:13.967] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-12-02 19:08:13.967] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-12-02 19:08:13.968] [puff::index::jointLog] [info] finished populating pos vector[2024-12-02 19:08:13.968] [puff::index::jointLog] [info] writing index components[2024-12-02 19:08:13.982] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-12-02 19:08:13.989] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:08:14.691] [jointLog] [info] setting maxHashResizeThreads to 6[2024-12-02 19:08:14.691] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:08:14.691] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-12-02 19:08:14.691] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-12-02 19:08:14.691] [jointLog] [info] parsing read library format[2024-12-02 19:08:14.691] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 817.53 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.3655 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 539.9 us----------------------------------------------------------------------------------| Loading mphf table | Time = 861.08 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 878.24 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 823.14 us-----------------------------------------[2024-12-02 19:08:14.822] [jointLog] [info] Loading pufferfish index[2024-12-02 19:08:14.823] [jointLog] [info] Loading dense pufferfish index.size = 18902-----------------------------------------| Loading positions | Time = 1.4528 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 882.34 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 589.13 us-----------------------------------------[2024-12-02 19:08:14.834] [jointLog] [info] done[2024-12-02 19:08:14.834] [jointLog] [info] Index contained 15 targets[2024-12-02 19:08:14.834] [jointLog] [info] Number of decoys : 0[2024-12-02 19:08:14.903] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-12-02 19:08:14.903] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-12-02 19:08:14.905] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-12-02 19:08:14.905] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-12-02 19:08:14.905] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-12-02 19:08:14.905] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-12-02 19:08:14.905] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:08:14.905] [jointLog] [info] Mapping rate = 100%[2024-12-02 19:08:14.905] [jointLog] [info] finished quantifyLibrary()[2024-12-02 19:08:14.910] [jointLog] [info] Starting optimizer[2024-12-02 19:08:14.911] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:08:14.911] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-12-02 19:08:14.911] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:08:14.912] [jointLog] [info] Finished optimizer[2024-12-02 19:08:14.912] [jointLog] [info] writing output [2024-12-02 19:08:14.917] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="40.283448934555054">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-12-02 19:08:57.996] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-12-02 19:08:57.996] [jLog] [info] building indexout : ./index[2024-12-02 19:08:57.997] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-12-02 19:08:58.006] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-12-02 19:08:58.006] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-12-02 19:08:58.020] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-12-02 19:08:58.022] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-12-02 19:08:58.087] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-12-02 19:08:58.087] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 811.69 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 824.64 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-12-02 19:08:58.089] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-12-02 19:08:58.089] [puff::index::jointLog] [info] contig count for validation: 23[2024-12-02 19:08:58.089] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-12-02 19:08:58.089] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-12-02 19:08:58.090] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-12-02 19:08:58.090] [puff::index::jointLog] [info] bits per offset entry 6[2024-12-02 19:08:58.090] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-12-02 19:08:58.100] [puff::index::jointLog] [info] # segments = 23[2024-12-02 19:08:58.100] [puff::index::jointLog] [info] total length = 19592[2024-12-02 19:08:58.100] [puff::index::jointLog] [info] Reading the reference files ...[2024-12-02 19:08:58.110] [puff::index::jointLog] [info] positional integer width = 15[2024-12-02 19:08:58.110] [puff::index::jointLog] [info] seqSize = 19592[2024-12-02 19:08:58.110] [puff::index::jointLog] [info] rankSize = 19592[2024-12-02 19:08:58.110] [puff::index::jointLog] [info] edgeVecSize = 0[2024-12-02 19:08:58.110] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-12-02 19:08:58.197] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-12-02 19:08:58.198] [puff::index::jointLog] [info] chunk size = 9796[2024-12-02 19:08:58.198] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-12-02 19:08:58.198] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-12-02 19:08:58.199] [puff::index::jointLog] [info] finished populating pos vector[2024-12-02 19:08:58.199] [puff::index::jointLog] [info] writing index components[2024-12-02 19:08:58.213] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-12-02 19:08:58.218] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:08:58.311] [jointLog] [info] setting maxHashResizeThreads to 6[2024-12-02 19:08:58.311] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:08:58.311] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-12-02 19:08:58.311] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-12-02 19:08:58.311] [jointLog] [info] parsing read library format[2024-12-02 19:08:58.311] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 492.62 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 968.16 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 532.96 us----------------------------------------------------------------------------------| Loading mphf table | Time = 918.03 us-----------------------------------------[2024-12-02 19:08:58.427] [jointLog] [info] Loading pufferfish index[2024-12-02 19:08:58.427] [jointLog] [info] Loading dense pufferfish index.size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 885.17 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 718.73 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2874 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 559.71 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 605.33 us-----------------------------------------[2024-12-02 19:08:58.436] [jointLog] [info] done[2024-12-02 19:08:58.436] [jointLog] [info] Index contained 15 targets[2024-12-02 19:08:58.436] [jointLog] [info] Number of decoys : 0[2024-12-02 19:08:58.506] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-12-02 19:08:58.506] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-12-02 19:08:58.508] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-12-02 19:08:58.508] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-12-02 19:08:58.508] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-12-02 19:08:58.508] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-12-02 19:08:58.508] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:08:58.508] [jointLog] [info] Mapping rate = 100%[2024-12-02 19:08:58.508] [jointLog] [info] finished quantifyLibrary()[2024-12-02 19:08:58.512] [jointLog] [info] Starting optimizer[2024-12-02 19:08:58.513] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:08:58.513] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-12-02 19:08:58.514] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:08:58.514] [jointLog] [info] Finished optimizer[2024-12-02 19:08:58.514] [jointLog] [info] writing output [2024-12-02 19:08:58.519] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="37.03633904457092">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-12-02 19:09:36.531] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-12-02 19:09:36.531] [jLog] [info] building indexout : ./index[2024-12-02 19:09:36.532] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-12-02 19:09:36.540] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-12-02 19:09:36.540] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-12-02 19:09:36.554] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-12-02 19:09:36.556] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-12-02 19:09:36.618] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-12-02 19:09:36.618] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 997.42 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 641.86 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-12-02 19:09:36.620] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-12-02 19:09:36.620] [puff::index::jointLog] [info] contig count for validation: 23[2024-12-02 19:09:36.621] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-12-02 19:09:36.621] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-12-02 19:09:36.621] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-12-02 19:09:36.621] [puff::index::jointLog] [info] bits per offset entry 6[2024-12-02 19:09:36.621] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-12-02 19:09:36.631] [puff::index::jointLog] [info] # segments = 23[2024-12-02 19:09:36.631] [puff::index::jointLog] [info] total length = 19592[2024-12-02 19:09:36.631] [puff::index::jointLog] [info] Reading the reference files ...[2024-12-02 19:09:36.640] [puff::index::jointLog] [info] positional integer width = 15[2024-12-02 19:09:36.640] [puff::index::jointLog] [info] seqSize = 19592[2024-12-02 19:09:36.640] [puff::index::jointLog] [info] rankSize = 19592[2024-12-02 19:09:36.640] [puff::index::jointLog] [info] edgeVecSize = 0[2024-12-02 19:09:36.640] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-12-02 19:09:36.721] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-12-02 19:09:36.722] [puff::index::jointLog] [info] chunk size = 9796[2024-12-02 19:09:36.722] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-12-02 19:09:36.722] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-12-02 19:09:36.723] [puff::index::jointLog] [info] finished populating pos vector[2024-12-02 19:09:36.723] [puff::index::jointLog] [info] writing index components[2024-12-02 19:09:36.736] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-12-02 19:09:36.741] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:09:36.832] [jointLog] [info] setting maxHashResizeThreads to 6[2024-12-02 19:09:36.832] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:09:36.832] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-12-02 19:09:36.832] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-12-02 19:09:36.832] [jointLog] [info] parsing read library format[2024-12-02 19:09:36.832] [jointLog] [info] There is 1 library.[2024-12-02 19:09:36.953] [jointLog] [info] Loading pufferfish index[2024-12-02 19:09:36.953] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading contig table | Time = 588.02 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 879.53 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 305.37 us----------------------------------------------------------------------------------| Loading mphf table | Time = 756.4 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 763.89 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 610.23 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.129 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 746.97 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 384.17 us-----------------------------------------[2024-12-02 19:09:36.961] [jointLog] [info] done[2024-12-02 19:09:36.961] [jointLog] [info] Index contained 15 targets[2024-12-02 19:09:36.961] [jointLog] [info] Number of decoys : 0[2024-12-02 19:09:37.031] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-12-02 19:09:37.031] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-12-02 19:09:37.033] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-12-02 19:09:37.033] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-12-02 19:09:37.033] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-12-02 19:09:37.033] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-12-02 19:09:37.034] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:09:37.034] [jointLog] [info] Mapping rate = 100%[2024-12-02 19:09:37.034] [jointLog] [info] finished quantifyLibrary()[2024-12-02 19:09:37.038] [jointLog] [info] Starting optimizer[2024-12-02 19:09:37.039] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:09:37.039] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-12-02 19:09:37.040] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:09:37.040] [jointLog] [info] Finished optimizer[2024-12-02 19:09:37.040] [jointLog] [info] writing output [2024-12-02 19:09:37.046] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="42.25541400909424">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "692b2a28ca048c36",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "a62490f0fe15e5c6",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-12-02T19:10:14.393085",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-t4qpm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "2de5de34fc4d54da",  "inputs": {   "quant_type|afile": {    "id": "692b2a28ca048c36",    "src": "hda",    "uuid": "a80c9dff-1ec6-4e69-b183-dc1f17baf923"   },   "quant_type|transcript": {    "id": "a62490f0fe15e5c6",    "src": "hda",    "uuid": "7e992954-c784-42b5-adf1-c007e6017fa7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1733166618.0000000",    "title": "Job End Time",    "value": "2024-12-02 19:10:18"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1733166616.0000000",    "title": "Job Start Time",    "value": "2024-12-02 19:10:16"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "7cf100163210e263",    "src": "hda",    "uuid": "296ab791-1ba7-4025-b249-64988787e5cf"   },   "postSample": {    "id": "aac82090c24ca20d",    "src": "hda",    "uuid": "2e475b37-fb49-4a11-bc20-315ac6fb764f"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 186, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 187, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-12-02 19:10:16.769] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-12-02 19:10:16.769] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-12-02 19:10:16.769] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\", fasta = \"/galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat\" . . .done\n[2024-12-02 19:10:17.345] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2024-12-02 19:10:17.585] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-12-02 19:10:17.593] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-12-02 19:10:17.593] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-12-02 19:10:17.594] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-12-02 19:10:17.595] [jointLog] [info] starting optimizer\n[2024-12-02 19:10:17.596] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-12-02 19:10:17.596] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-12-02 19:10:17.597] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-12-02 19:10:17.597] [jointLog] [info] finished optimizer\n[2024-12-02 19:10:17.597] [jointLog] [info] writing output\n[2024-12-02 19:10:17.602] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-12-02 19:10:16.769] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-12-02 19:10:16.769] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-12-02 19:10:16.769] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\", fasta = \"/galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat\" . . .done\n[2024-12-02 19:10:17.345] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2024-12-02 19:10:17.585] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-12-02 19:10:17.593] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-12-02 19:10:17.593] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-12-02 19:10:17.594] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-12-02 19:10:17.595] [jointLog] [info] starting optimizer\n[2024-12-02 19:10:17.596] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-12-02 19:10:17.596] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-12-02 19:10:17.597] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-12-02 19:10:17.597] [jointLog] [info] finished optimizer\n[2024-12-02 19:10:17.597] [jointLog] [info] writing output\n[2024-12-02 19:10:17.602] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "update_time": "2024-12-02T19:10:31.688614",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_e0g079de.sam v. /tmp/history_bam_converted_to_sam__0bjivrw.sam )\n--- local_file\n+++ history_data\n@@ -1,4 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n+@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -14,66 +16,136 @@\n @SQ\tSN:NM_153693\tLN:2072\n @SQ\tSN:NM_173860\tLN:849\n @SQ\tSN:NR_003084\tLN:1640\n-@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n-@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.16.1\tCL:samtools sort -@ 1 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n+1811:NM_174914:0:188\t99\tNM_001168316\t1\t1\t50M\t=\t139\t188\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+3775:NM_174914:0:140\t99\tNM_001168316\t1\t1\t50M\t=\t91\t140\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 8380:NM_174914:0:170\t163\tNM_001168316\t1\t1\t50M\t=\t121\t170\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+567:NM_174914:5:165\t99\tNM_001168316\t6\t1\t50M\t=\t121\t165\tGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGG\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 2546:NM_174914:6:160\t163\tNM_001168316\t7\t1\t50M\t=\t117\t160\tAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+4806:NR_031764:7:194\t99\tNM_001168316\t8\t1\t50M\t=\t152\t194\tGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+2590:NR_031764:8:152\t99\tNM_001168316\t9\t1\t50M\t=\t111\t152\tGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1161:NM_174914:9:183\t99\tNM_001168316\t10\t1\t50M\t=\t143\t183\tTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAAC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1332:NM_174914:10:177\t99\tNM_001168316\t11\t1\t50M\t=\t138\t177\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+6621:NM_174914:10:179\t99\tNM_001168316\t11\t1\t50M\t=\t140\t179\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n+9853:NM_018953:1427:182\t355\tNR_003084\t1456\t1\t50M\t=\t1588\t182\tCAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t419\tNR_003084\t1457\t1\t50M\t=\t1572\t165\tAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3858:NM_018953:1305:183\t339\tNR_003084\t1467\t1\t50M\t=\t1334\t-183\tGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t355\tNR_003084\t1471\t1\t50M\t=\t1574\t153\tCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3225:NM_018953:1324:177\t403\tNR_003084\t1480\t1\t50M\t=\t1353\t-177\tGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9380:NM_018953:1348:155\t403\tNR_003084\t1482\t1\t50M\t=\t1377\t-155\tACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6585:NM_018953:1338:169\t403\tNR_003084\t1486\t1\t50M\t=\t1367\t-169\tCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6863:NM_018953:1319:193\t339\tNR_003084\t1491\t1\t50M\t=\t1348\t-193\tAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9258:NM_018953:1324:191\t403\tNR_003084\t1494\t1\t50M\t=\t1353\t-191\tGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+4115:NM_018953:1339:179\t403\tNR_003084\t1497\t1\t50M\t=\t1368\t-179\tCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t355\tNR_003084\t1498\t1\t50M\t=\t1539\t91\tCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9697:NM_018953:1346:184\t339\tNR_003084\t1509\t1\t50M\t=\t1375\t-184\tTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+434:NM_018953:1346:194\t339\tNR_003084\t1519\t1\t50M\t=\t1375\t-194\tATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9192:NM_018953:1402:146\t403\tNR_003084\t1527\t1\t50M\t=\t1431\t-146\tTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+5171:NM_018953:1389:171\t339\tNR_003084\t1539\t1\t50M\t=\t1418\t-171\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t403\tNR_003084\t1539\t1\t50M\t=\t1498\t-91\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9690:NM_018953:1392:171\t339\tNR_003084\t1542\t1\t50M\t=\t1421\t-171\tTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+1465:NM_018953:1400:169\t339\tNR_003084\t1548\t1\t50M\t=\t1429\t-169\tCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3052:NM_018953:1396:175\t339\tNR_003084\t1550\t1\t50M\t=\t1425\t-175\tTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+381:NM_018953:1382:192\t339\tNR_003084\t1553\t1\t50M\t=\t1411\t-192\tCCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAAACT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t339\tNR_003084\t1572\t1\t50M\t=\t1457\t-165\tTATTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t403\tNR_003084\t1574\t1\t50M\t=\t1471\t-153\tTTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3331:NM_018953:1404:193\t403\tNR_003084\t1576\t1\t50M\t=\t1433\t-193\tTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+2226:NM_018953:1422:177\t403\tNR_003084\t1578\t1\t50M\t=\t1451\t-177\tTTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9853:NM_018953:1427:182\t403\tNR_003084\t1588\t1\t50M\t=\t1456\t-182\tGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAGAGAACAGGAC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 42.25541400909424, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:10:16.769] [jointLog] [info] setting maxHashResizeThreads to 6Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-12-02 19:10:16.769] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:10:16.769] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat", fasta = "/galaxy/server/database/objects/7/e/9/dataset_7e992954-c784-42b5-adf1-c007e6017fa7.dat" . . .done[2024-12-02 19:10:17.345] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-12-02 19:10:17.585] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1Resetting BAMQueue from file(s) [ "/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-12-02 19:10:17.593] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-12-02 19:10:17.593] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-12-02 19:10:17.594] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:10:17.595] [jointLog] [info] starting optimizer[2024-12-02 19:10:17.596] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:10:17.596] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-12-02 19:10:17.597] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:10:17.597] [jointLog] [info] finished optimizer[2024-12-02 19:10:17.597] [jointLog] [info] writing output[2024-12-02 19:10:17.602] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/a/8/0/dataset_a80c9dff-1ec6-4e69-b183-dc1f17baf923.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="37.951014280319214">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-12-02 19:10:56.902] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-12-02 19:10:56.902] [jLog] [info] building indexout : ./index[2024-12-02 19:10:56.903] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-12-02 19:10:56.911] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-12-02 19:10:56.911] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-12-02 19:10:56.923] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-12-02 19:10:56.925] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-12-02 19:10:56.988] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-12-02 19:10:56.988] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 755.48 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 639.25 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-12-02 19:10:56.989] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-12-02 19:10:56.989] [puff::index::jointLog] [info] contig count for validation: 23[2024-12-02 19:10:56.990] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-12-02 19:10:56.990] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-12-02 19:10:56.990] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-12-02 19:10:56.990] [puff::index::jointLog] [info] bits per offset entry 6[2024-12-02 19:10:56.990] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-12-02 19:10:57.000] [puff::index::jointLog] [info] # segments = 23[2024-12-02 19:10:57.000] [puff::index::jointLog] [info] total length = 19592[2024-12-02 19:10:57.000] [puff::index::jointLog] [info] Reading the reference files ...[2024-12-02 19:10:57.011] [puff::index::jointLog] [info] positional integer width = 15[2024-12-02 19:10:57.011] [puff::index::jointLog] [info] seqSize = 19592[2024-12-02 19:10:57.011] [puff::index::jointLog] [info] rankSize = 19592[2024-12-02 19:10:57.011] [puff::index::jointLog] [info] edgeVecSize = 0[2024-12-02 19:10:57.011] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-12-02 19:10:57.086] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-12-02 19:10:57.086] [puff::index::jointLog] [info] chunk size = 9796[2024-12-02 19:10:57.086] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-12-02 19:10:57.086] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-12-02 19:10:57.087] [puff::index::jointLog] [info] finished populating pos vector[2024-12-02 19:10:57.087] [puff::index::jointLog] [info] writing index components[2024-12-02 19:10:57.099] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-12-02 19:10:57.104] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:10:57.201] [jointLog] [info] setting maxHashResizeThreads to 6[2024-12-02 19:10:57.201] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:10:57.201] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-12-02 19:10:57.201] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-12-02 19:10:57.201] [jointLog] [info] parsing read library format[2024-12-02 19:10:57.201] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 566.12 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.1239 ms-----------------------------------------[2024-12-02 19:10:57.319] [jointLog] [info] Loading pufferfish index[2024-12-02 19:10:57.320] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference lengths | Time = 470.12 us----------------------------------------------------------------------------------| Loading mphf table | Time = 580.95 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 686.19 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 748.19 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2882 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 734.58 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 418 us-----------------------------------------[2024-12-02 19:10:57.328] [jointLog] [info] done[2024-12-02 19:10:57.328] [jointLog] [info] Index contained 15 targets[2024-12-02 19:10:57.328] [jointLog] [info] Number of decoys : 0[2024-12-02 19:10:57.397] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-12-02 19:10:57.397] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-12-02 19:10:57.399] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-12-02 19:10:57.399] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-12-02 19:10:57.399] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-12-02 19:10:57.399] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-12-02 19:10:57.400] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:10:57.400] [jointLog] [info] Mapping rate = 100%[2024-12-02 19:10:57.400] [jointLog] [info] finished quantifyLibrary()[2024-12-02 19:10:57.404] [jointLog] [info] Starting optimizer[2024-12-02 19:10:57.404] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:10:57.404] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-12-02 19:10:57.405] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:10:57.406] [jointLog] [info] Finished optimizer[2024-12-02 19:10:57.406] [jointLog] [info] writing output [2024-12-02 19:10:57.411] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="38.32938599586487">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-12-02 19:11:34.529] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-12-02 19:11:34.529] [jLog] [info] building indexout : ./index[2024-12-02 19:11:34.530] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-12-02 19:11:34.536] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-12-02 19:11:34.536] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-12-02 19:11:34.547] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-12-02 19:11:34.549] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-12-02 19:11:34.610] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-12-02 19:11:34.610] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.0224 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 816.46 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-12-02 19:11:34.612] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-12-02 19:11:34.612] [puff::index::jointLog] [info] contig count for validation: 23[2024-12-02 19:11:34.613] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-12-02 19:11:34.613] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-12-02 19:11:34.613] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-12-02 19:11:34.613] [puff::index::jointLog] [info] bits per offset entry 6[2024-12-02 19:11:34.613] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-12-02 19:11:34.624] [puff::index::jointLog] [info] # segments = 23[2024-12-02 19:11:34.624] [puff::index::jointLog] [info] total length = 19592[2024-12-02 19:11:34.624] [puff::index::jointLog] [info] Reading the reference files ...[2024-12-02 19:11:34.633] [puff::index::jointLog] [info] positional integer width = 15[2024-12-02 19:11:34.633] [puff::index::jointLog] [info] seqSize = 19592[2024-12-02 19:11:34.633] [puff::index::jointLog] [info] rankSize = 19592[2024-12-02 19:11:34.633] [puff::index::jointLog] [info] edgeVecSize = 0[2024-12-02 19:11:34.633] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..ng BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-12-02 19:11:34.711] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-12-02 19:11:34.711] [puff::index::jointLog] [info] chunk size = 9796[2024-12-02 19:11:34.711] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-12-02 19:11:34.711] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-12-02 19:11:34.713] [puff::index::jointLog] [info] finished populating pos vector[2024-12-02 19:11:34.713] [puff::index::jointLog] [info] writing index components[2024-12-02 19:11:34.725] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-12-02 19:11:34.730] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-12-02 19:11:34.828] [jointLog] [info] setting maxHashResizeThreads to 6[2024-12-02 19:11:34.828] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-12-02 19:11:34.828] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-12-02 19:11:34.828] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-12-02 19:11:34.828] [jointLog] [info] parsing read library format[2024-12-02 19:11:34.828] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 716 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.3526 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 490.69 us-----------------------------------------[2024-12-02 19:11:34.943] [jointLog] [info] Loading pufferfish index[2024-12-02 19:11:34.944] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading mphf table | Time = 618.07 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 840.63 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 808.77 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.4559 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 715.01 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 497.99 us-----------------------------------------[2024-12-02 19:11:34.954] [jointLog] [info] done[2024-12-02 19:11:34.954] [jointLog] [info] Index contained 15 targets[2024-12-02 19:11:34.954] [jointLog] [info] Number of decoys : 0[2024-12-02 19:11:34.954] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-12-02 19:11:35.024] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-12-02 19:11:35.024] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-12-02 19:11:35.026] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-12-02 19:11:35.026] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-12-02 19:11:35.026] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-12-02 19:11:35.026] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-12-02 19:11:35.026] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-12-02 19:11:35.026] [jointLog] [info] Mapping rate = 100%[2024-12-02 19:11:35.026] [jointLog] [info] finished quantifyLibrary()[2024-12-02 19:11:35.030] [jointLog] [info] Starting optimizer[2024-12-02 19:11:35.031] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-12-02 19:11:35.031] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-12-02 19:11:35.031] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-12-02 19:11:35.036] [jointLog] [info] Computed expected counts (for bias correction)[2024-12-02 19:11:35.037] [jointLog] [info] processed bias for 26.7% of the transcripts[2024-12-02 19:11:35.038] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-12-02 19:11:35.038] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-12-02 19:11:35.038] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-12-02 19:11:35.038] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-12-02 19:11:35.038] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-12-02 19:11:35.039] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-12-02 19:11:35.039] [jointLog] [info] processed bias for 80.0% of the transcripts[2024-12-02 19:11:35.040] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-12-02 19:11:35.041] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-12-02 19:11:35.041] [jointLog] [info] Finished optimizer[2024-12-02 19:11:35.041] [jointLog] [info] writing output [2024-12-02 19:11:35.045] [jointLog] [info] writing equivalence class counts.[2024-12-02 19:11:35.047] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-12-02 19:11:35.047] [jointLog] [info] done.[2024-12-02 19:11:35.050] [jointLog] [info] done writing equivalence class counts.[2024-12-02 19:11:35.050] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="43.23851227760315">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="42.96664071083069">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="38.13589286804199">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="42.891576528549194">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #5)" name="4" time="11.801839828491211">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.801839828491211, "tool_id": "samtools_bedcov", "tool_version": "2.0.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #6)" name="5" time="12.773039817810059">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 12.773039817810059, "tool_id": "samtools_bedcov", "tool_version": "2.0.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #7)" name="6" time="30.399393796920776">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "depth_thresh": "10",  "input_bams": {   "id": "bdc422a3702cf329",   "src": "hda"  },  "input_bed": {   "id": "d9b2b73617dc2b9d",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/f/7/dataset_bf7a13fb-b573-42e4-b6a1-dc887a10766b.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/8/8/6/metadata_886506ed-7dda-4380-b1d9-6cc38abab75a.dat\u0027 \u00270.bai\u0027 \u0026\u0026   samtools bedcov    -g 0   -G 1796 -d 10 \u0027/galaxy/server/database/objects/c/a/d/dataset_cad5d586-2d07-4272-a8cd-9c23494029cf.dat\u0027 \u00270\u0027 \u003e \u0027/galaxy/server/database/objects/1/4/4/dataset_1445abbd-3d04-4bb5-80ab-91a7b41c2c35.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T19:16:37.882878",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-q5jk2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "e3e6d389c5b5eb5a",  "inputs": {   "input_bams": {    "id": "bdc422a3702cf329",    "src": "hda",    "uuid": "bf7a13fb-b573-42e4-b6a1-dc887a10766b"   },   "input_bams1": {    "id": "bdc422a3702cf329",    "src": "hda",    "uuid": "bf7a13fb-b573-42e4-b6a1-dc887a10766b"   },   "input_bed": {    "id": "d9b2b73617dc2b9d",    "src": "hda",    "uuid": "cad5d586-2d07-4272-a8cd-9c23494029cf"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "7c1c1d0621ee6edc",    "src": "hda",    "uuid": "1445abbd-3d04-4bb5-80ab-91a7b41c2c35"   }  },  "params": {   "__input_ext": "\"input\"",   "additional_options": "{\"required_flags\": null, \"skipped_flags\": [\"4\", \"256\", \"512\", \"1024\"]}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "countdel": "false",   "dbkey": "\"?\"",   "depth_thresh": "\"10\"",   "mapq": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-02T19:16:44.702022",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 6, "time_seconds": 30.399393796920776, "tool_id": "samtools_bedcov", "tool_version": "2.0.4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="42.95734095573425">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="28.69324517250061">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "9d6c24fc2e15db17",   "src": "hda"  },  "input_header": {   "id": "86921c5a2d4bb535",   "src": "hda"  },  "no_pg": true }, "job": {  "command_line": "samtools reheader \u0027/galaxy/server/database/objects/0/b/c/dataset_0bc228d7-72df-488d-8a31-33705c131dc9.dat\u0027 \u0027/galaxy/server/database/objects/f/e/e/dataset_feec355e-4969-4878-a54f-66f85e25b82e.dat\u0027 --no-PG \u003e \u0027/galaxy/server/database/objects/d/1/6/dataset_d16d4629-79f4-4c51-ba2f-9fb4ca125c38.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T19:12:56.613231",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-p5lfl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "afe4f7b546562912",  "inputs": {   "input_file": {    "id": "9d6c24fc2e15db17",    "src": "hda",    "uuid": "feec355e-4969-4878-a54f-66f85e25b82e"   },   "input_header": {    "id": "86921c5a2d4bb535",    "src": "hda",    "uuid": "0bc228d7-72df-488d-8a31-33705c131dc9"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "080627ce663355ad",    "src": "hda",    "uuid": "d16d4629-79f4-4c51-ba2f-9fb4ca125c38"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "no_pg": "true"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.3",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-12-02T19:13:01.419612",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 28.69324517250061, "tool_id": "samtools_reheader", "tool_version": "2.0.3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="93.3521134853363">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="47.58311581611633">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="47.572786808013916">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="48.758344411849976">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="101.03382182121277">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/2/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/2/tmp--pe-121/galaxy/server/database/jobs_directory/000/2/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/2/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/2/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/2/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/2/working/output/spades.log/galaxy/server/database/jobs_directory/000/2/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/2/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/2/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/2/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/2/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/2/working/output/corrected/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/2/working/output/corrected/configs/config.info  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.005     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.119  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.224  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.224     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.262     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.263     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.277     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.277     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.292     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.294     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.294     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.294     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.294     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.302     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.302     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.302     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.318     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.332     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.332     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.332     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.341     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.342     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.342     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.351     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.351     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.351     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.351     1M / 35M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/2/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.498   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.502   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.507   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.556     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.556     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.556     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/2/working/output/corrected/corrected.yaml  0:00:00.560     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/2/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/2/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/2/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/2/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/2/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/2/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/2/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/2/working/output/dataset.info) with K=21  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.004     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.025    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.025    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.027    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.027    61M / 61M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.028    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.046     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.056     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.056     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.056     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.056     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.058     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.058     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.058     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.637     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.640     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.847     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer co../before_rr.fasta  0:00:02.194     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph_after_simplification.gfa  0:00:02.197     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:02.197     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.197     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.197     1M / 35M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:02.197     1M / 35M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0  0:00:02.197     1M / 35M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)  0:00:02.330   145M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.521   145M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.657   145M / 156M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 4  0:00:02.657   145M / 156M  INFO    General                 (pair_info_count.cpp       : 222)   608 paired reads (29.6008% of all) aligned to long edges  0:00:02.658     1M / 156M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 338.201, deviation = 219.594, left quantile = 71, right quantile = 658, read length = 100  0:00:02.658     1M / 156M  INFO    General                 (pair_info_count.cpp       : 390)   Filtering data for library #0  0:00:02.664     1M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.665     1M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.665     1M / 156M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0  0:00:02.666     1M / 156M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)  0:00:02.666     1M / 156M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 71, right insert size quantile 658, filtering threshold 2, rounding threshold 0  0:00:02.677    10M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.682    10M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.687     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done  0:00:02.687     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.687     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2  0:00:02.687     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:02.687     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.687     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.687     1M / 156M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index  0:00:02.687     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:02.707     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.707     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 4  0:00:02.707     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 4  0:00:02.707     1M / 156M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index  0:00:02.708     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.708     1M / 156M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving  0:00:02.708     1M / 156M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started  0:00:02.709     1M / 156M  INFO    General                 (coverage_uniformity_analyz:  25)   genomic coverage is 140.62 calculated of length 945  0:00:02.709     1M / 156M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 140.62  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 140.62  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library  0:00:02.709     1M / 156M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.709     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.709     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.709     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.709     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.709     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.709     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.710     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.710     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.710     1M / 156M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.710     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.710     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/2/working/output/K55/before_rr.fasta  0:00:02.715     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.715     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph.fastg  0:00:02.720     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.720     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/2/working/output/K55/final_contigs.fasta  0:00:02.724     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/2/working/output/K55/final_contigs.paths  0:00:02.728     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/2/working/output/K55/scaffolds.fasta  0:00:02.732     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/2/working/output/K55/scaffolds.paths  0:00:02.735     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.743     1M / 156M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.743     1M / 156M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/2/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/2/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/2/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/2/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/2/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/2/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/2/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/2/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/2/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/2/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/2/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/2/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/2/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/2/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/2/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/2/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/2/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/2/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/2/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/2/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/2/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/2/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/2/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/2/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/2/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/2/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/2/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.709     1M / 156M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/2/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/2/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="48.444993019104004">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/5/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/5/tmp--pe-11/galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffauto-k33--isolate--disable-rr--iontorrent--phred-offset33System information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/5/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  IonTorrent data  Isolate mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset: 33  Corrected reads will be compressedAssembly parameters:  k: [33]  Repeat resolution is DISABLED  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned ON and threshold will be auto-detectedOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/5/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/5/working/output/spades.log===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-ionhammer /galaxy/server/database/jobs_directory/000/5/working/output/corrected/configs/ionhammer.cfg  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 294)   Starting IonHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 298)   Loading config from /galaxy/server/database/jobs_directory/000/5/working/output/corrected/configs/ionhammer.cfg  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  : 300)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.004     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.004     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 32 files using 8 threads. This might take a while.  0:00:00.005     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.005     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.005     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 1048576  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  77)   Processing /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.257  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  77)   Processing /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.482  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  91)   Processed 4108 reads  0:00:00.482     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.554     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 2238 kmers in total.  0:00:00.554     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.577     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 2238 kmers, 26664 bytes occupied (95.3137 bits per kmer).  0:00:00.577     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 175)   Collecting K-mer information, this takes a while.  0:00:00.578     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 181)   Processing /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.590     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 181)   Processing /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.603     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 187)   Collection done, postprocessing.  0:00:00.603     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 200)   Merge done. There are 2238 kmers in total. Among them 210 (9.38338%) are singletons.Among them 0 (0%) are skipped during sampling.  0:00:00.627     1M / 34M   INFO    General                 (main.cpp                  : 123)   Clustering Hamming graph.  0:00:00.628     1M / 34M   INFO    General                 (main.cpp                  : 130)   Clustering done. Total clusters: 1426  0:00:00.629     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 318)   Likelihood first: -630.092  0:00:00.629     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 322)   Likelihood second: -21.8471  0:00:00.629     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 323)   First weights: 0.954984  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 318)   Likelihood first: 69.5596  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 322)   Likelihood second: -300.095  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 323)   First weights: 0.64678  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 418)   For kmer length <= 21  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 419)   Median quality -4.9271  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 420)   Sample size 622  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 421)   Genomic dist: -4.91384 0.0414325  0:00:00.630     1M / 34M   INFO    General                 (normal_quality_model.hpp  : 423)   NonGenomic dist: -3.45252 0.899384  0:00:00.630     1M / 34M   INFO    General                 (main.cpp                  : 159)   Subclustering.  0:00:00.634     1M / 34M   INFO    General                 (subcluster.hpp            :  42)   Good kmers: 968  0:00:00.634     1M / 34M   INFO    General                 (subcluster.hpp            :  43)   Perfect kmers: 0  0:00:00.634     1M / 34M   INFO    General                 (subcluster.hpp            :  44)   Reasigned by consensus: 0  0:00:00.634     1M / 34M   INFO    General                 (main.cpp                  : 317)   Correcting reads.  0:00:00.634     1M / 34M   INFO    General                 (main.cpp                  : 339)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz and /galaxy/server/database/jobs_directory/000/5/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.780     1M / 34M   INFO    General                 (read_corrector_new.hpp    : 175)   Skipped reads count: 170  0:00:00.797     1M / 34M   INFO    General                 (main.cpp                  : 420)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/5/working/output/corrected/corrected.yaml===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/5/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/5/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/5/working/output/corrected/ecoli_1K_1.fastq.gz.fastq0_0.cor.fasta', '/galaxy/server/database/jobs_directory/000/5/working/output/corrected/ecoli_1K_2.fastq.gz.fastq0_0.cor.fasta']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K33 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/5/working/output/K33/configs/config.info /galaxy/server/database/jobs_directory/000/5/working/output/K33/configs/isolate_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/5/working/output/K33/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/5/working/output/K33/configs/isolate_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/5/working/output/dataset.info) with K=33  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.020    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.021    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.022    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.022    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.024    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.046     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.060     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.060     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1485  0:00:00.060     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.060     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.061     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.061     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.061     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 419430  0:00:00.649     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.651     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.841     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.  0:00:00.841     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.875     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.875     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.876     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.876     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.876     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 419430  0:00:01.459  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 987 kmers.  0:00:01.460     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.643     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 988 kmers in total.  0:00:01.643     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.680     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 988 kmers, 64056 bytes occupied (518.672 bits per kmer).  0:00:01.680     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.  0:00:01.803     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers  0:00:01.810     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.  0:00:01.821     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)  0:00:01.822     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:01.822     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbra..age edge remover  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.587     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.587     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 7  0:00:05.587     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.588     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 8  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.588     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.588     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.588     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:05.588     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:05.588     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)  0:00:05.592    10M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:05.592    10M / 34M   INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 2 out of 2, length: 1934  0:00:05.592    10M / 34M   INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 29)  0:00:05.592    10M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:05.592    10M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 967 kmers, 1464 bytes occupied (12.1117 bits per kmer).  0:00:05.592    10M / 34M   INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.  0:00:05.600    10M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:05.604    10M / 34M   INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer  0:00:05.604    10M / 34M   INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps  0:00:05.604    10M / 34M   INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 0 gaps after checking 2 candidates  0:00:05.604    10M / 34M   INFO    General                 (gap_closer.cpp            : 456)   Gap closer done  0:00:05.605     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification  0:00:05.605     1M / 34M   INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled  0:00:05.605     1M / 34M   INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled  0:00:05.605     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges  0:00:05.605     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 0 times  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 495)   After simplification:  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 496)     Average coverage = 225.724  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 497)     Total length = 967  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 498)     Median edge length: 967  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 499)     Edges: 2  0:00:05.605     1M / 34M   INFO    General                 (simplification.cpp        : 500)     Vertices: 4  0:00:05.605     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)  0:00:05.606     1M / 34M   INFO    General                 (graph_pack.cpp            :  67)   Index refill  0:00:05.606     1M / 34M   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 29)  0:00:05.606     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:05.606     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 967 kmers, 1464 bytes occupied (12.1117 bits per kmer).  0:00:05.606     1M / 34M   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.  0:00:05.606     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.606     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:05.606     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches  0:00:05.606     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)  0:00:05.606     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected  0:00:05.620     1M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed  0:00:05.621     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed  0:00:05.621     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides  0:00:05.621     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:05.621     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working/output/K33/before_rr.fasta  0:00:05.625     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph_after_simplification.gfa  0:00:05.628     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:05.628     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working/output/K33/before_rr.fasta  0:00:05.632     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph_with_scaffolds.gfa  0:00:05.632     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph.fastg  0:00:05.636     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working/output/K33/final_contigs.fasta  0:00:05.646     1M / 34M   INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:05.646     1M / 34M   INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 5 seconds===== K33 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/5/working/output/K33/before_rr.fasta /galaxy/server/database/jobs_directory/000/5/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/5/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/5/working/output/K33/final_contigs.fasta /galaxy/server/database/jobs_directory/000/5/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/5/working/output/K33/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/5/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/5/working/output/K33/strain_graph.gfa /galaxy/server/database/jobs_directory/000/5/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/5/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/5/working/output/K33/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/5/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/5/working/output/K33/final_contigs.paths /galaxy/server/database/jobs_directory/000/5/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/5/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/5/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/5/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/5/working/output/contigs.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/5/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/5/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/5/working/output/spades.logThank you for using SPAdes!No scaffolds.fasta.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #11)" name="10" time="47.218671560287476">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/28/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/28/tmp--pe-121/galaxy/server/database/jobs_directory/000/28/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--scSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/28/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/28/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: [21, 33, 55]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/28/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/28/working/output/spades.log/galaxy/server/database/jobs_directory/000/28/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/28/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/28/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/28/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/28/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/28/working/output/corrected/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/28/working/output/corrected/configs/config.info  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.003     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.004     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.007     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.007     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.007     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.008  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.134  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.245  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.245     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.277     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.279     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.290     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.290     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.302     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.304     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.304     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.304     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.304     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.313     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.313     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.313     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.330     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.345     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.346     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.346     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.354     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.356     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.356     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.366     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.366     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.366     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.366     1M / 35M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/28/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.506   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.511   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.515   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.571     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.571     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.571     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/28/working/output/corrected/corrected.yaml  0:00:00.575     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/28/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/28/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/28/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/28/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/28/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/28/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/28/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/28/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/28/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/28/working/output/dataset.info) with K=21  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.005     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.024    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.024    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.026    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.026    61M / 61M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.028    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.048     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.060     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.060     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.060     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.060     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.061     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.061     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.061     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.673     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.675     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.859     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting d..      (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:01.988     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:01.988     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches  0:00:01.988     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)  0:00:01.988     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected  0:00:02.004     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed  0:00:02.005     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed  0:00:02.005     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides  0:00:02.005     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.005     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/28/working/output/K55/before_rr.fasta  0:00:02.011     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph_after_simplification.gfa  0:00:02.015     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:02.015     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.015     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.015     1M / 35M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:02.015     1M / 35M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0  0:00:02.015     1M / 35M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)  0:00:02.137   145M / 155M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.330   145M / 155M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.467   145M / 155M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 4  0:00:02.467   145M / 155M  INFO    General                 (pair_info_count.cpp       : 222)   608 paired reads (29.6008% of all) aligned to long edges  0:00:02.468     1M / 155M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 338.201, deviation = 219.594, left quantile = 71, right quantile = 658, read length = 100  0:00:02.468     1M / 155M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0  0:00:02.468     1M / 155M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)  0:00:02.468     1M / 155M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 71, right insert size quantile 658, filtering threshold 0, rounding threshold 0  0:00:02.484    10M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.489    10M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.496     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done  0:00:02.496     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.496     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2  0:00:02.496     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:02.496     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.496     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.496     1M / 156M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index  0:00:02.496     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:02.519     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.519     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 4  0:00:02.519     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 4  0:00:02.519     1M / 156M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index  0:00:02.519     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.519     1M / 156M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving  0:00:02.519     1M / 156M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started  0:00:02.520     1M / 156M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000  0:00:02.520     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.520     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.521     1M / 156M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library  0:00:02.521     1M / 156M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library  0:00:02.521     1M / 156M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.521     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.521     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.521     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.521     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.521     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.521     1M / 156M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.522     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.522     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/28/working/output/K55/before_rr.fasta  0:00:02.528     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.528     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph.fastg  0:00:02.533     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.533     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/28/working/output/K55/final_contigs.fasta  0:00:02.538     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/28/working/output/K55/final_contigs.paths  0:00:02.543     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/28/working/output/K55/scaffolds.fasta  0:00:02.548     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/28/working/output/K55/scaffolds.paths  0:00:02.553     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.562     1M / 156M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.563     1M / 156M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/28/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/28/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/28/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/28/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/28/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/28/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/28/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/28/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/28/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/28/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/28/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/28/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/28/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/28/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/28/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/28/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/28/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/28/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/28/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/28/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/28/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/28/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/28/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/28/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/28/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/28/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/28/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/28/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #12)" name="11" time="54.81635880470276">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/31/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/31/tmp--pe-11/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--sc--carefulSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/31/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: [21, 33, 55]  Repeat resolution is enabled  Mismatch careful mode is turned ON  MismatchCorrector will be used  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/31/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/31/working/output/spades.log/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/31/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/31/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.134  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.250  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.250     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.289     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.290     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.304     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.304     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.317     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.319     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.329     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.329     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.329     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.344     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.359     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.359     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.359     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:05.561     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:05.562     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:05.562     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:05.580     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:05.580     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:05.580     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:05.580     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz and /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:05.724   179M / 179M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:05.729   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:05.733   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:05.795     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:05.795     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:05.795     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/31/working/output/corrected/corrected.yaml  0:00:05.800     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/31/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/31/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/31/working/output/corrected/ecoli_1K_1.fastq.gz.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/31/working/output/corrected/ecoli_1K_2.fastq.gz.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/31/working/output/corrected/ecoli_1K__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/mda_mode.info /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/careful_mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/31/working/output/K21/configs/careful_mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/31/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.001     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.024    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.025    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.027    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.027    61M / 61M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.028    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.050     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.064     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.064     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.064     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.064     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.066     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.066     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.066     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.650     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.653     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.845     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total...       : 312)   Traversed 0 loops  0:00:02.385     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.385     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.385     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.386     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.386     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.386     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.386     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.386     1M / 156M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.386     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.386     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/31/working/output/K55/before_rr.fasta  0:00:02.392     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/31/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.392     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/31/working/output/K55/assembly_graph.fastg  0:00:02.395     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.396     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/31/working/output/K55/final_contigs.fasta  0:00:02.399     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/31/working/output/K55/final_contigs.paths  0:00:02.402     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/31/working/output/K55/scaffolds.fasta  0:00:02.405     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/31/working/output/K55/scaffolds.paths  0:00:02.409     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.414     1M / 156M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.414     1M / 156M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/31/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/31/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/31/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/31/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/31/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/31/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/31/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/31/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/31/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/31/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/31/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/31/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/31/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/31/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Mismatch correction started. ===== Mismatch correction contigs started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/31/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/31/working/output --bin_home /usr/local/bin== Processing of contigs== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/contigs/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta/galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.001     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta  0:00:00.007     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta[main] Real time: 0.039 sec; CPU: 0.007 sec  0:00:00.050     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 0  0:00:00.050     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.051     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/31/tmp/corrector_ecpoi_vq/lib0_is4pyE/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.049 sec; CPU: 0.096 sec  0:00:00.106     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/31/tmp/corrector_ecpoi_vq/lib0_is4pyE/tmp.sam  0:00:00.144     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.268     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.274     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction contigs finished. ===== Mismatch correction scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/31/working/output --bin_home /usr/local/bin== Processing of scaffolds== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/scaffolds/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta/galaxy/server/database/jobs_directory/000/31/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta[main] Real time: 0.034 sec; CPU: 0.007 sec  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 0  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/31/tmp/corrector_rbch8jc5/lib0_Zw8qCb/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/31/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/31/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.047 sec; CPU: 0.097 sec  0:00:00.097     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/31/tmp/corrector_rbch8jc5/lib0_Zw8qCb/tmp.sam  0:00:00.137     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.264     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.270     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction scaffolds finished. ===== Mismatch correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/31/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/31/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/31/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/31/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/31/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/31/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/31/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/31/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #13)" name="12" time="48.8043749332428">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py--only-assembler-o/galaxy/server/database/jobs_directory/000/34/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/34/tmp--pe-11/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--sc--carefulSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/34/working/outputMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [21, 33, 55]  Repeat resolution is enabled  Mismatch careful mode is turned ON  MismatchCorrector will be used  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/34/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/34/working/output/spades.log/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/mda_mode.info /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/careful_mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/34/working/output/K21/configs/careful_mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/34/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.023    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.023    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.025    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.025    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.026    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.048     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.058     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.058     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611  0:00:00.058     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.058     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.060     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.060     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.060     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.687     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.689     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.870     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.  0:00:00.870     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.897     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.897     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.898     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.898     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.898     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:01.503  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.  0:00:01.504     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.693     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.  0:00:01.693     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.735     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).  0:00:01.735     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.  0:00:01.869     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers  0:00:01.877     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.  0:00:01.891     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)  0:00:01.891     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)  0:00:01.891     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping  0:00:01.892     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2  0:00:01.892     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2  0:00:01.892     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper  0:00:01.892     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)  0:00:01.893     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:01.893     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted  0:00:01.893     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:01.894     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create  0:00:01.894     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph  0:00:01.894     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)  0:00:01.894     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.917     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).  0:00:01.918     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.  0:00:01.924     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM  0:00:01.966     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)  0:00:01.966     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 119)   Bucket size: 87  0:00:01.966     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 134)   Proper threshold was not found. Threshold set to 0.1 of average coverage  0:00:01.966     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  39)   Average edge coverage: 273.372  0:00:01.966     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  40)   Graph threshold: 27.3372  0:00:01.966     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 27.3372  0:00:01.966     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0  0:00:01.966     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)  0:00:01.966     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning  0:00:01.966     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times  0:00:01.966     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)  0:00:01.966     1M / 34M   INFO    General                 (simplification.cpp        : 368)   Graph simplification started  0:00:01.966     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:01.966     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:01.966     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.966     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:01.967     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.967     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.967     1M / 34M   INFO   Simplification           (..g tandem repeats  0:00:02.433     1M / 155M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.433     1M / 155M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.433     1M / 155M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.433     1M / 155M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.433     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.434     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.434     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.434     1M / 155M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.434     1M / 155M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.434     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.434     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.434     1M / 155M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.434     1M / 155M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.434     1M / 155M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.434     1M / 155M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.434     1M / 155M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/34/working/output/K55/before_rr.fasta  0:00:02.439     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/34/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.440     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/34/working/output/K55/assembly_graph.fastg  0:00:02.445     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.445     1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/34/working/output/K55/final_contigs.fasta  0:00:02.449     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/34/working/output/K55/final_contigs.paths  0:00:02.454     1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/34/working/output/K55/scaffolds.fasta  0:00:02.460     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/34/working/output/K55/scaffolds.paths  0:00:02.464     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.472     1M / 155M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.473     1M / 155M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/34/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/34/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/34/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/34/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/34/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/34/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/34/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/34/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/34/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/34/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/34/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/34/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/34/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/34/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Mismatch correction started. ===== Mismatch correction contigs started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/34/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/34/working/output --bin_home /usr/local/bin== Processing of contigs== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/contigs/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta/galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta[main] Real time: 0.034 sec; CPU: 0.007 sec  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 0  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/34/tmp/corrector_m4jwew0g/lib0_HTXH7G/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.049 sec; CPU: 0.101 sec  0:00:00.100     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/34/tmp/corrector_m4jwew0g/lib0_HTXH7G/tmp.sam  0:00:00.139     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.266     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.272     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction contigs finished. ===== Mismatch correction scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/34/working/output --bin_home /usr/local/bin== Processing of scaffolds== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/scaffolds/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta/galaxy/server/database/jobs_directory/000/34/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.001     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta[main] Real time: 0.038 sec; CPU: 0.007 sec  0:00:00.048     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 0  0:00:00.048     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.049     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/34/tmp/corrector_yzvhbeu1/lib0_9WmJep/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/34/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/34/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.049 sec; CPU: 0.101 sec  0:00:00.105     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/34/tmp/corrector_yzvhbeu1/lib0_9WmJep/tmp.sam  0:00:00.143     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.271     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.276     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction scaffolds finished. ===== Mismatch correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/34/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/34/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/34/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/34/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/34/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/34/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/34/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #14)" name="13" time="12.13144850730896">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 12.13144850730896, "tool_id": "spades", "tool_version": "3.15.5+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #15)" name="14" time="59.02177166938782">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/39/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/39/tmp--hqmp-11/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz--hqmp-21/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz--hqmp-or1rf--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/39/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: hq-mate-pairs      orientation: rf      left reads: ['/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/39/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/39/working/output/spades.log/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/39/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/39/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.130  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.236  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.237     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.278     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.279     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.294     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.294     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.307     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.309     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.309     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.309     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.309     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.318     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.318     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.318     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.333     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.348     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.348     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.348     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:05.666     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:05.668     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:05.668     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:05.683     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:05.683     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:05.684     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:05.684     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz and /galaxy/server/database/jobs_directory/000/39/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz  0:00:05.832   179M / 179M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:05.836   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:05.839   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:05.897     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:05.898     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:05.898     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/39/working/output/corrected/corrected.yaml  0:00:05.902     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/39/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/39/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/39/working/output/corrected/ecoli_1K_1.fastq.gz.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/39/working/output/corrected/ecoli_1K_2.fastq.gz.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/39/working/output/corrected/ecoli_1K__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/39/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/39/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/39/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.026    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.026    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.028    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.028    61M / 61M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.029    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.051     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.063     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.063     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.063     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.063     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.064     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.064     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.064     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.653     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.655     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.851     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total.  0:00:00.851     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.878     1M / 34M   INFO   K-mer Index Building     (kmer_index_builde..essing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 9  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 10  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 11  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)  0:00:02.049     1M / 34M   INFO    General                 (gap_closer.cpp            : 429)   No paired-end libraries exist, skipping gap closer  0:00:02.049     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification  0:00:02.049     1M / 34M   INFO    General                 (graph_simplification.hpp  : 448)   Disconnection of relatively low covered edges disabled  0:00:02.049     1M / 34M   INFO    General                 (graph_simplification.hpp  : 485)   Complex tip clipping disabled  0:00:02.049     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges  0:00:02.049     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 0 times  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 495)   After simplification:  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 496)     Average coverage = 140.62  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 497)     Total length = 945  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 498)     Median edge length: 945  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 499)     Edges: 2  0:00:02.049     1M / 34M   INFO    General                 (simplification.cpp        : 500)     Vertices: 4  0:00:02.049     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)  0:00:02.049     1M / 34M   INFO    General                 (graph_pack.cpp            :  67)   Index refill  0:00:02.049     1M / 34M   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 11)  0:00:02.050     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:02.050     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 945 kmers, 1456 bytes occupied (12.3259 bits per kmer).  0:00:02.050     1M / 34M   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.  0:00:02.050     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.050     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.050     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches  0:00:02.050     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)  0:00:02.050     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected  0:00:02.062     1M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed  0:00:02.062     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed  0:00:02.062     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides  0:00:02.062     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.062     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/39/working/output/K55/before_rr.fasta  0:00:02.067     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph_after_simplification.gfa  0:00:02.070     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:02.070     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.070     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.070     1M / 34M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:02.070     1M / 34M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0  0:00:02.070     1M / 34M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)  0:00:02.197   145M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.389   145M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.524   145M / 156M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 2  0:00:02.524   145M / 156M  INFO    General                 (pair_info_count.cpp       : 222)   32 paired reads (1.55794% of all) aligned to long edges  0:00:02.524   145M / 156M  WARN    General                 (pair_info_count.cpp       : 226)   Too much reads aligned with negative insert size. Is the library orientation set properly?  0:00:02.525     1M / 156M  WARN    General                 (pair_info_count.cpp       : 358)   Unable to estimate insert size for paired library #0  0:00:02.525     1M / 156M  WARN    General                 (pair_info_count.cpp       : 364)   None of paired reads aligned properly. Please, check orientation of your read pairs.  0:00:02.525     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.525     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.525     1M / 156M  WARN    General                 (repeat_resolving.cpp      :  81)   Insert size was not estimated for any of the paired libraries, repeat resolution module will not run.  0:00:02.525     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.525     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/39/working/output/K55/before_rr.fasta  0:00:02.531     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.531     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph.fastg  0:00:02.534     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/39/working/output/K55/final_contigs.fasta  0:00:02.544     1M / 156M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.545     1M / 156M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/39/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/39/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/39/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/39/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/39/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/39/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/39/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/39/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/39/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/39/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/39/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/39/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/39/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/39/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/39/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/39/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/39/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/39/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/39/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/39/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/39/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/39/working/output/contigs.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/39/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/39/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.524   145M / 156M  WARN    General                 (pair_info_count.cpp       : 226)   Too much reads aligned with negative insert size. Is the library orientation set properly? * 0:00:02.525     1M / 156M  WARN    General                 (pair_info_count.cpp       : 358)   Unable to estimate insert size for paired library #0 * 0:00:02.525     1M / 156M  WARN    General                 (pair_info_count.cpp       : 364)   None of paired reads aligned properly. Please, check orientation of your read pairs. * 0:00:02.525     1M / 156M  WARN    General                 (repeat_resolving.cpp      :  81)   Insert size was not estimated for any of the paired libraries, repeat resolution module will not run.======= Warnings saved to /galaxy/server/database/jobs_directory/000/39/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/39/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #16)" name="15" time="52.85059571266174">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/42/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/42/tmp--hqmp-11/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz--hqmp-21/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz--hqmp-or1fr--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/42/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: hq-mate-pairs      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/42/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/42/working/output/spades.log/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/42/working/output/corrected/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/42/working/output/corrected/configs/config.info  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.003     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz  0:00:00.130  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz  0:00:00.236  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.236     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.273     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.274     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.288     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.288     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.301     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.303     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.303     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.303     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.303     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.313     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.313     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.313     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz  0:00:00.328     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz  0:00:00.343     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.343     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.343     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.351     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.352     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.352     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.366     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.366     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.366     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.366     1M / 35M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/fw0.fastq.gz and /galaxy/server/database/jobs_directory/000/42/working/paired_reads1/rv0.fastq.gz  0:00:00.512   179M / 179M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.517   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.521   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.579     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.580     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.580     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/42/working/output/corrected/corrected.yaml  0:00:00.584     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/42/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/42/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/42/working/output/corrected/fw0.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/42/working/output/corrected/rv0.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/42/working/output/corrected/_unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/42/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/42/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/42/working/output/dataset.info) with K=21  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.005     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.023    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.024    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.026    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.026    61M / 61M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.027    71M / 71M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.049     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.059     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.059     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.059     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.059     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.060     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.060     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.060     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.713     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.714     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.917     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total.  0:00:00.917     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.951     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.951     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.952    ..enders_logic.cpp       : 543)   Using 0 paired-end libraries  0:00:02.748     1M / 154M  INFO    General                 (extenders_logic.cpp       : 544)   Using 0 paired-end scaffolding libraries  0:00:02.748     1M / 154M  INFO    General                 (extenders_logic.cpp       : 545)   Using 1 single read library  0:00:02.748     1M / 154M  INFO    General                 (launcher.cpp              : 329)   Will add extenders for length 1700  0:00:02.748     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1700  0:00:02.748     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  68)   With length cutoff: 1700, median long edge coverage: 3.54777e-11, and maximal unique coverage: 50  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  70)   Unique edges quantity: 0, unique edges length 0, total edges length 1890  0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  72)   Less than half of genome in unique edges!  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 329)   Will add extenders for length 1400  0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1400  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  68)   With length cutoff: 1400, median long edge coverage: 3.54777e-11, and maximal unique coverage: 50  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  70)   Unique edges quantity: 0, unique edges length 0, total edges length 1890  0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  72)   Less than half of genome in unique edges!  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 329)   Will add extenders for length 1100  0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1100  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  68)   With length cutoff: 1100, median long edge coverage: 3.54777e-11, and maximal unique coverage: 50  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  70)   Unique edges quantity: 0, unique edges length 0, total edges length 1890  0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  72)   Less than half of genome in unique edges!  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 329)   Will add extenders for length 800  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  68)   With length cutoff: 800, median long edge coverage: 140.62, and maximal unique coverage: 50  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  70)   Unique edges quantity: 2, unique edges length 1890, total edges length 1890  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 334)   Will add final extenders for length 500  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  68)   With length cutoff: 500, median long edge coverage: 140.62, and maximal unique coverage: 50  0:00:02.749     1M / 154M  INFO   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  70)   Unique edges quantity: 2, unique edges length 1890, total edges length 1890  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 390)   Using 1 mate-pair library  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 206)   Creating Scaffolding 2015 extender for lib #0  0:00:02.749     1M / 154M  INFO    General                 (extenders_logic.cpp       : 210)   Paired unclustered indices not empty, using them  0:00:02.749     1M / 154M  INFO   ExtensionChooser2015     (extension_chooser2015.hpp :  50)   ExtensionChooser2015 created  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 7  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.749     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.749     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.749     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.749     1M / 154M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.750     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.750     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.750     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.750     1M / 154M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.750     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.750     1M / 154M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/42/working/output/K55/before_rr.fasta  0:00:02.755     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/42/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.755     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/42/working/output/K55/assembly_graph.fastg  0:00:02.758     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.758     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/42/working/output/K55/final_contigs.fasta  0:00:02.762     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/42/working/output/K55/final_contigs.paths  0:00:02.766     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/42/working/output/K55/scaffolds.fasta  0:00:02.769     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/42/working/output/K55/scaffolds.paths  0:00:02.773     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.780     1M / 154M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.780     1M / 154M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/42/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/42/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/42/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/42/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/42/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/42/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/42/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/42/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/42/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/42/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/42/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/42/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/42/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/42/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/42/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/42/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/42/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/42/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/42/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/42/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/42/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/42/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/42/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/42/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/42/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/42/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/42/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/42/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/42/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.748     1M / 154M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option. * 0:00:02.748     1M / 154M  WARN    General                 (coverage_uniformity_analyz:  74)    No edges longer than length bound(2000) * 0:00:02.748     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 2000 * 0:00:02.748     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  72)   Less than half of genome in unique edges! * 0:00:02.748     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1700 * 0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1400 * 0:00:02.749     1M / 154M  WARN   ScaffoldingUniqueEdgeAna (scaff_supplementary.cpp   :  35)   not enough edges longer than 1100======= Warnings saved to /galaxy/server/database/jobs_directory/000/42/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/42/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #17)" name="16" time="41.54235506057739">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "optional_output": "ss",  "singlePaired|input1": {   "id": "96601e9f34e94bfb",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p reads1 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/3/0/dataset_83082613-5d10-4bed-aacb-8b51bf730da1.dat\u0027 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 \u0026\u0026           export OMP_THREAD_LIMIT=${GALAXY_SLOTS:-4} \u0026\u0026  spades.py  -o \u0027output\u0027  -t ${GALAXY_SLOTS:-4} -m $((${GALAXY_MEMORY_MB:-8192}/1024)) --tmp-dir ${TMPDIR}   --s 1 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027        --cov-cutoff off         \u0026\u0026 test -f \u0027output/scaffolds.fasta\u0027 \u0026\u0026 python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/nml/spades/d5887ace0dd4/spades/write_tsv_script.py\u0027 \u003c \u0027output/scaffolds.fasta\u0027 \u003e \u0027/galaxy/server/database/objects/6/6/5/dataset_6659ae62-a047-4f25-951d-50e03fa0dd32.dat\u0027 || echo \u0027No scaffolds.fasta.\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T18:48:50.808359",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-kf7pt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "e84b9519a178c165",  "inputs": {   "singlePaired|input1": {    "id": "96601e9f34e94bfb",    "src": "hda",    "uuid": "83082613-5d10-4bed-aacb-8b51bf730da1"   },   "singlePaired|input11": {    "id": "96601e9f34e94bfb",    "src": "hda",    "uuid": "83082613-5d10-4bed-aacb-8b51bf730da1"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_ss": {    "id": "c21b12eefc91c829",    "src": "hda",    "uuid": "6659ae62-a047-4f25-951d-50e03fa0dd32"   }  },  "params": {   "__input_ext": "\"input\"",   "additional_reads": "{\"__current_case__\": 1, \"selector\": \"false\"}",   "arf": "{\"nanopore\": null, \"pacbio\": null, \"sanger\": null, \"trusted_contigs\": null, \"untrusted_contigs\": null}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cov_cond": "{\"__current_case__\": 0, \"cov_cutoff\": \"off\"}",   "dbkey": "\"?\"",   "kmer_cond": "{\"__current_case__\": 0, \"kmer_sel\": \"auto\"}",   "mode_sel": null,   "operation_mode": "\"\"",   "optional_output": "\"ss\"",   "phred_offset": "\"auto\"",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 90, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use \u0027--isolate\u0027 option.\n\n\nCommand line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/44/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/44/tmp\t--s\t1\t/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--cov-cutoff\toff\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/44/working/output\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use \u0027--isolate\u0027 option; for single-cell MDA data use \u0027--sc\u0027; for metagenomic data use \u0027--meta\u0027; for RNA-Seq use \u0027--rna\u0027.\n  Reads:\n    Library number: 1, library type: single\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: not specified\n      single reads: [\u0027/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/44/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info\n\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info\n  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.004     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.\n  0:00:00.005     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb\n  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.139  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:00.139     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.173     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.\n  0:00:00.173     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:00.186     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).\n  0:00:00.186     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  0:00:00.198     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:00.199     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  0:00:00.200     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  0:00:00.208     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:00.237     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.\n  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 266)   Correcting single reads: /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.339    90M / 93M   INFO    General                 (hammer_tools.cpp          : 129)   Prepared batch 0 of 4108 reads.\n  0:00:00.343    90M / 93M   INFO    General                 (hammer_tools.cpp          : 134)   Processed batch 0\n  0:00:00.346    90M / 93M   INFO    General                 (hammer_tools.cpp          : 138)   Written batch 0\n  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.\n  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.\n  0:00:00.381     1M / 93M   INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml\n  0:00:00.385     1M / 93M   INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n===== Read error correction finished. \n\n\n===== corrected reads compression started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/44/working/output/corrected --gzip_output\n\n== Compressing corrected reads (with gzip)\n== Files to compress: [\u0027/galaxy/server/database/jobs_directory/000/44/working/output/corrected/ecoli_1K.fastq.gz.fastq.00.0_0.cor.fastq\u0027]\n== Files compression is finished\n== Dataset yaml file is updated\n\n===== corrected reads compression finished. \n\n\n===== Read error correction finished. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info\n\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info\n  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/44/working/output/dataset.info) with K=21\n  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.009    23M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.009     1M / 35M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.027    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written\n  0:00:00.027    21M / 35M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.029    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.051     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526\n  0:00:00.062     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.062     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.063     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.681     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads\n  0:00:00.682     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.871     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total.\n  0:00:00.871     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.906     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.907     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.488  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 984 kmers.\n  0:00:01.488     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.690     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 985 kmers in total.\n  0:00:01.690     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.728     1M / 35M   INFO \n..\n    (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 0 times\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 495)   After simplification:\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 496)     Average coverage = 140.62\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 497)     Total length = 945\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 498)     Median edge length: 945\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 499)     Edges: 2\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 500)     Vertices: 4\n  0:00:02.200     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)\n  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  67)   Index refill\n  0:00:02.201     1M / 35M   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 11)\n  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 945 kmers, 1456 bytes occupied (12.3259 bits per kmer).\n  0:00:02.201     1M / 35M   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.\n  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:02.202     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected\n  0:00:02.215     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed\n  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed\n  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides\n  0:00:02.217     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.217     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta\n  0:00:02.222     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa\n  0:00:02.226     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)\n  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 411)   Mapping single reads of library #0\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.237     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4108 reads processed\n  0:00:02.238     1M / 35M   INFO    General                 (pair_info_count.cpp       : 413)   Total paths obtained from single reads: 2\n  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)\n  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)\n  0:00:02.238     1M / 35M   INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  0:00:02.238     1M / 35M   INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  0:00:02.239     1M / 35M   INFO    General                 (coverage_uniformity_analyz:  25)   genomic coverage is 140.62 calculated of length 945\n  0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 342)   filling path container\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       :  47)   resolvable_repeat_length_bound set to 10000\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 543)   Using 0 paired-end libraries\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 544)   Using 0 paired-end scaffolding libraries\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 545)   Using 1 single read library\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 1\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  0:00:02.240     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.240     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta\n  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa\n  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg\n  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta\n  0:00:02.253     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths\n  0:00:02.258     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta\n  0:00:02.262     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths\n  0:00:02.265     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.272     1M / 35M   INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.272     1M / 35M   INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/44/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/44/working/output/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished WITH WARNINGS!\n\n=== Error correction and assembling warnings:\n * 0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/44/working/output/warnings.log\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.log\n\nThank you for using SPAdes!\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2",  "tool_stderr": "",  "tool_stdout": "\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use \u0027--isolate\u0027 option.\n\n\nCommand line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/44/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/44/tmp\t--s\t1\t/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--cov-cutoff\toff\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/44/working/output\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use \u0027--isolate\u0027 option; for single-cell MDA data use \u0027--sc\u0027; for metagenomic data use \u0027--meta\u0027; for RNA-Seq use \u0027--rna\u0027.\n  Reads:\n    Library number: 1, library type: single\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: not specified\n      single reads: [\u0027/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/44/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info\n\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info\n  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.004     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.\n  0:00:00.005     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb\n  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.139  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:00.139     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.173     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.\n  0:00:00.173     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:00.186     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).\n  0:00:00.186     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  0:00:00.198     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:00.199     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  0:00:00.200     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  0:00:00.208     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:00.237     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964\n  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.\n  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 266)   Correcting single reads: /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.339    90M / 93M   INFO    General                 (hammer_tools.cpp          : 129)   Prepared batch 0 of 4108 reads.\n  0:00:00.343    90M / 93M   INFO    General                 (hammer_tools.cpp          : 134)   Processed batch 0\n  0:00:00.346    90M / 93M   INFO    General                 (hammer_tools.cpp          : 138)   Written batch 0\n  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.\n  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.\n  0:00:00.381     1M / 93M   INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml\n  0:00:00.385     1M / 93M   INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n===== Read error correction finished. \n\n\n===== corrected reads compression started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/44/working/output/corrected --gzip_output\n\n== Compressing corrected reads (with gzip)\n== Files to compress: [\u0027/galaxy/server/database/jobs_directory/000/44/working/output/corrected/ecoli_1K.fastq.gz.fastq.00.0_0.cor.fastq\u0027]\n== Files compression is finished\n== Dataset yaml file is updated\n\n===== corrected reads compression finished. \n\n\n===== Read error correction finished. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info\n\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info\n  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/44/working/output/dataset.info) with K=21\n  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.009    23M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.009     1M / 35M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.027    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written\n  0:00:00.027    21M / 35M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.029    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.051     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526\n  0:00:00.062     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.062     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.063     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.681     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads\n  0:00:00.682     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.871     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total.\n  0:00:00.871     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.906     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.907     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.488  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 984 kmers.\n  0:00:01.488     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.690     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 985 kmers in total.\n  0:00:01.690     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.728     1M / 35M   INFO \n..\n    (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 0 times\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 495)   After simplification:\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 496)     Average coverage = 140.62\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 497)     Total length = 945\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 498)     Median edge length: 945\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 499)     Edges: 2\n  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 500)     Vertices: 4\n  0:00:02.200     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)\n  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  67)   Index refill\n  0:00:02.201     1M / 35M   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 11)\n  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 945 kmers, 1456 bytes occupied (12.3259 bits per kmer).\n  0:00:02.201     1M / 35M   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.\n  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:02.202     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)\n  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected\n  0:00:02.215     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed\n  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed\n  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides\n  0:00:02.217     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.217     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta\n  0:00:02.222     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa\n  0:00:02.226     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)\n  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 411)   Mapping single reads of library #0\n  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.237     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4108 reads processed\n  0:00:02.238     1M / 35M   INFO    General                 (pair_info_count.cpp       : 413)   Total paths obtained from single reads: 2\n  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)\n  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)\n  0:00:02.238     1M / 35M   INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  0:00:02.238     1M / 35M   INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  0:00:02.239     1M / 35M   INFO    General                 (coverage_uniformity_analyz:  25)   genomic coverage is 140.62 calculated of length 945\n  0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 342)   filling path container\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       :  47)   resolvable_repeat_length_bound set to 10000\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 543)   Using 0 paired-end libraries\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 544)   Using 0 paired-end scaffolding libraries\n  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 545)   Using 1 single read library\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 1\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  0:00:02.240     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.240     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta\n  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa\n  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg\n  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta\n  0:00:02.253     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths\n  0:00:02.258     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta\n  0:00:02.262     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths\n  0:00:02.265     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.272     1M / 35M   INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.272     1M / 35M   INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/44/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/44/working/output/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished WITH WARNINGS!\n\n=== Error correction and assembling warnings:\n * 0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/44/working/output/warnings.log\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.log\n\nThank you for using SPAdes!\n",  "update_time": "2024-12-02T18:49:09.948034",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 16, "time_seconds": 41.54235506057739, "tool_id": "spades", "tool_version": "3.15.5+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/44/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/44/tmp--s1/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/44/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: single      left reads: not specified      right reads: not specified      interlaced reads: not specified      single reads: ['/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/44/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.log/galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/44/working/output/corrected/configs/config.info  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 35M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 35M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 35M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.005     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.005     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.139  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.139     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.173     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.173     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.186     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.186     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.198     1M / 35M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.199     1M / 35M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.199     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.200     1M / 35M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.208     1M / 35M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.208     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.237     1M / 35M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.237     1M / 35M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.247     1M / 35M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.248     1M / 35M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.260     1M / 35M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.260     1M / 35M   INFO    General                 (hammer_tools.cpp          : 266)   Correcting single reads: /galaxy/server/database/jobs_directory/000/44/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.339    90M / 93M   INFO    General                 (hammer_tools.cpp          : 129)   Prepared batch 0 of 4108 reads.  0:00:00.343    90M / 93M   INFO    General                 (hammer_tools.cpp          : 134)   Processed batch 0  0:00:00.346    90M / 93M   INFO    General                 (hammer_tools.cpp          : 138)   Written batch 0  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.381     1M / 93M   INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.381     1M / 93M   INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml  0:00:00.385     1M / 93M   INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/44/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/44/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/44/working/output/corrected/ecoli_1K.fastq.gz.fastq.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/44/working/output/K21/configs/config.info  0:00:00.000     1M / 35M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 35M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/44/working/output/dataset.info) with K=21  0:00:00.001     1M / 35M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.001     1M / 35M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.001     1M / 35M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.001     1M / 35M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.001     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     1M / 35M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.009    23M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.009     1M / 35M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.027    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written  0:00:00.027    21M / 35M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.029    31M / 35M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.051     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.062     1M / 35M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1526  0:00:00.062     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.062     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.063     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.063     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.681     1M / 35M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.682     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.871     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 984 kmers in total.  0:00:00.871     1M / 35M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.906     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.907     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.907     1M / 35M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.907     1M / 35M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:01.488  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 984 kmers.  0:00:01.488     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.690     1M / 35M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 985 kmers in total.  0:00:01.690     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.728     1M / 35M   INFO ..    (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges  0:00:02.200     1M / 35M   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 0 times  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 495)   After simplification:  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 496)     Average coverage = 140.62  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 497)     Total length = 945  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 498)     Median edge length: 945  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 499)     Edges: 2  0:00:02.200     1M / 35M   INFO    General                 (simplification.cpp        : 500)     Vertices: 4  0:00:02.200     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  67)   Index refill  0:00:02.201     1M / 35M   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 11)  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:02.201     1M / 35M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 945 kmers, 1456 bytes occupied (12.3259 bits per kmer).  0:00:02.201     1M / 35M   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.  0:00:02.201     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.202     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)  0:00:02.202     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected  0:00:02.215     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed  0:00:02.217     1M / 35M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides  0:00:02.217     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.217     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta  0:00:02.222     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa  0:00:02.226     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.226     1M / 35M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       : 411)   Mapping single reads of library #0  0:00:02.226     1M / 35M   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.237     1M / 35M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4108 reads processed  0:00:02.238     1M / 35M   INFO    General                 (pair_info_count.cpp       : 413)   Total paths obtained from single reads: 2  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.238     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.238     1M / 35M   INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving  0:00:02.238     1M / 35M   INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started  0:00:02.239     1M / 35M   INFO    General                 (coverage_uniformity_analyz:  25)   genomic coverage is 140.62 calculated of length 945  0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 342)   filling path container  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       :  47)   resolvable_repeat_length_bound set to 10000  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 543)   Using 0 paired-end libraries  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 544)   Using 0 paired-end scaffolding libraries  0:00:02.239     1M / 35M   INFO    General                 (extenders_logic.cpp       : 545)   Using 1 single read library  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 1  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.239     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.239     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.239     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.240     1M / 35M   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.240     1M / 35M   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.240     1M / 35M   INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.240     1M / 35M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.240     1M / 35M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.246     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.250     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta  0:00:02.253     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths  0:00:02.258     1M / 35M   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta  0:00:02.262     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths  0:00:02.265     1M / 35M   INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.272     1M / 35M   INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.272     1M / 35M   INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/44/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/44/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/44/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/44/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/44/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/44/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/44/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/44/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/44/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.239     1M / 35M   WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/44/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/44/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="53.869102001190186">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py--only-assembler-o/galaxy/server/database/jobs_directory/000/8/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/8/tmp--pe-11/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/8/working/outputMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/8/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/8/working/output/spades.log/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/8/working/paired_reads1/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/8/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/8/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/8/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.001     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.001     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.001     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.001     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.023    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.023    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.025    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.025    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.026    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.049     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.065     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.065     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611  0:00:00.065     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.065     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.066     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.066     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.066     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.688     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.689     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.890     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.  0:00:00.890     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.929     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.929     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.930     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.930     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.930     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:01.509  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.  0:00:01.510     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.706     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.  0:00:01.706     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.743     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).  0:00:01.743     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.  0:00:01.860     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers  0:00:01.869     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.  0:00:01.885     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)  0:00:01.885     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)  0:00:01.885     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping  0:00:01.886     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2  0:00:01.886     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2  0:00:01.886     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper  0:00:01.886     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)  0:00:01.886     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:01.887     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted  0:00:01.887     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:01.887     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create  0:00:01.888     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph  0:00:01.888     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)  0:00:01.888     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.912     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).  0:00:01.912     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.  0:00:01.918     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM  0:00:01.967     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)  0:00:01.968     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:01.968     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 348  0:00:01.968     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 348. Coverage mad: 62.2692  0:00:01.968     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.017     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.126     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:02.352     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:02.682     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:03.674     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:05.736     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 341.849. Fitted coverage std. dev: 69.2056  0:00:05.737     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999992  0:00:05.737     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 349  0:00:05.737     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 170  0:00:05.737     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 751  0:00:05.737     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 341.849  0:00:05.737     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 170  0:00:05.737     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0  0:00:05.737     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)  0:00:05.737     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning  0:00:05.737     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:05.737     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover  0:00:05.737     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times  0:00:05.737     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial tip clipper  0:00:05.737     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Initial tip clipper triggered 0 times  0:00:05.737     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial ec remover  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Initial ec remover triggered 0 times  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial isolated edge remover  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Initial isolated edge remover triggered 0 times  0:00:05.738     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)  0:00:05.738     1M / 34M   INFO    General                 (simplification.cpp        : 368)   Graph simplification started  0:00:05.738     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.738     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:05.738     1M / 34M   INFO   Simplification           (parallel_processing.hpp ..16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working/output/K55/before_rr.fasta  0:00:02.103     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph_after_simplification.gfa  0:00:02.106     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:02.106     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:02.106     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:02.106     1M / 34M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:02.106     1M / 34M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0  0:00:02.106     1M / 34M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)  0:00:02.224   145M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.412   145M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.547   145M / 156M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 2  0:00:02.547   145M / 156M  INFO    General                 (pair_info_count.cpp       : 222)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:02.548     1M / 156M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:02.548     1M / 156M  INFO    General                 (pair_info_count.cpp       : 390)   Filtering data for library #0  0:00:02.556     1M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.558     1M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.558     1M / 156M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0  0:00:02.559     1M / 156M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)  0:00:02.559     1M / 156M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:02.570    10M / 156M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.574    10M / 156M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.579     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done  0:00:02.579     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.579     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2  0:00:02.579     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:02.579     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.579     1M / 156M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index  0:00:02.579     1M / 156M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.579     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2  0:00:02.579     1M / 156M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2  0:00:02.579     1M / 156M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index  0:00:02.579     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.579     1M / 156M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving  0:00:02.580     1M / 156M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started  0:00:02.580     1M / 156M  INFO    General                 (coverage_uniformity_analyz:  25)   genomic coverage is 140.639 calculated of length 945  0:00:02.580     1M / 156M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 140.639  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 334)   Estimated coverage of library #0 is 140.639  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library  0:00:02.581     1M / 156M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.581     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.581     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.581     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.581     1M / 156M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.581     1M / 156M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.581     1M / 156M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.581     1M / 156M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.581     1M / 156M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working/output/K55/before_rr.fasta  0:00:02.586     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.586     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph.fastg  0:00:02.590     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.590     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working/output/K55/final_contigs.fasta  0:00:02.593     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working/output/K55/final_contigs.paths  0:00:02.596     1M / 156M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working/output/K55/scaffolds.fasta  0:00:02.599     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working/output/K55/scaffolds.paths  0:00:02.603     1M / 156M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.608     1M / 156M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.609     1M / 156M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/8/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/8/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/8/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/8/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/8/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/8/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/8/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/8/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/8/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/8/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/8/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/8/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/8/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/8/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/8/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/8/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/8/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/8/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/8/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/8/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/8/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/8/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/8/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/8/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.580     1M / 156M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/8/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/8/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="63.596763372421265">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/12/tmp--s1/galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-11/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--carefulSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/working/outputMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: single      left reads: not specified      right reads: not specified      interlaced reads: not specified      single reads: ['/galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      merged reads: not specified    Library number: 2, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned ON  MismatchCorrector will be used  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/output/spades.log/galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.137  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.257  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.366  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 8216 reads processed  0:00:00.366     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.399     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.401     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.413     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.413     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.425     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.427     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.427     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.427     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.427     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.436     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.436     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.436     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.463     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz  0:00:00.477     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.490     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.490     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.490     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 12. Among them 12 (100%) are good  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 8. Among them 8 (100%) are good  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 3.5 kmers  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.42857  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1966  0:00:00.498     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.882353,0.117647,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.117647,0.882353))  0:00:00.499     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.499     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.531     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.531     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.531     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.531     1M / 34M   INFO    General                 (hammer_tools.cpp          : 266)   Correcting single reads: /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.610    90M / 93M   INFO    General                 (hammer_tools.cpp          : 129)   Prepared batch 0 of 4108 reads.  0:00:00.614    90M / 93M   INFO    General                 (hammer_tools.cpp          : 134)   Processed batch 0  0:00:00.618    90M / 93M   INFO    General                 (hammer_tools.cpp          : 138)   Written batch 0  0:00:00.652     1M / 93M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz and /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.797   179M / 179M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.802   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.806   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.862     1M / 179M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 8 bases in 8 reads.  0:00:00.862     1M / 179M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 707830.  0:00:00.863     1M / 179M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/output/corrected/corrected.yaml  0:00:00.866     1M / 179M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/12/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/12/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/12/working/output/corrected/ecoli_1K.fastq.gz.fastq.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/12/working/output/corrected/ecoli_1K_1.fastq.gz.fastq.00.1_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/12/working/output/corrected/ecoli_1K_2.fastq.gz.fastq.00.1_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/12/working/output/corrected/ecoli_1K__unpaired.00.1_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/12/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/12/working/output/K21/configs/careful_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/output/K21/configs/careful_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.001     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.001     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.007    23M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.024    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written  0:00:00.024    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.026    3..1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working/output/K55/scaffolds.fasta  0:00:02.681     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working/output/K55/scaffolds.paths  0:00:02.684     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.691     1M / 155M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.691     1M / 155M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/12/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/12/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/12/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/12/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/12/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/12/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/12/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/12/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/12/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/12/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/12/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/12/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/12/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Mismatch correction started. ===== Mismatch correction contigs started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/12/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/12/working/output --bin_home /usr/local/bin== Processing of contigs== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/contigs/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta/galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta[main] Real time: 0.039 sec; CPU: 0.007 sec  0:00:00.049     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0  0:00:00.049     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.050     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/12/tmp/corrector_u0cxzo00/lib0_KQn7jj/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz[main] Real time: 0.047 sec; CPU: 0.101 sec  0:00:00.103     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/12/tmp/corrector_u0cxzo00/lib0_KQn7jj/tmp.sam  0:00:00.140     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1  0:00:00.140     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.140     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/12/tmp/corrector_u0cxzo00/lib1_MQ4ypM/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.046 sec; CPU: 0.102 sec  0:00:00.193     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/12/tmp/corrector_u0cxzo00/lib1_MQ4ypM/tmp.sam  0:00:00.230     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.457     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.464     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction contigs finished. ===== Mismatch correction scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/12/working/output --bin_home /usr/local/bin== Processing of scaffolds== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/scaffolds/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta/galaxy/server/database/jobs_directory/000/12/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta[main] Real time: 0.034 sec; CPU: 0.006 sec  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/12/tmp/corrector_gmkvqobf/lib0_zcWpT5/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/reads1/ecoli_1K.fastq.gz.fastq.gz[main] Real time: 0.048 sec; CPU: 0.098 sec  0:00:00.099     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/12/tmp/corrector_gmkvqobf/lib0_zcWpT5/tmp.sam  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/12/tmp/corrector_gmkvqobf/lib1_tOUmNA/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/12/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/12/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.045 sec; CPU: 0.097 sec  0:00:00.187     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/12/tmp/corrector_gmkvqobf/lib1_tOUmNA/tmp.sam  0:00:00.223     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.458     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.464     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction scaffolds finished. ===== Mismatch correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/12/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/output/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.662     1M / 155M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/12/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="53.01903438568115">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "additional_reads|selector": "true",  "additional_reads|singlePaired|input1": {   "id": "0e6e1607dc391535",   "src": "hda"  },  "additional_reads|singlePaired|input2": {   "id": "4f0a146fe340f819",   "src": "hda"  },  "additional_reads|singlePaired|sPaired": "paired",  "mode_sel": "--careful",  "operation_mode": "--only-assembler",  "singlePaired|input1": {   "id": "8ceafefa8539f4fb",   "src": "hda"  },  "singlePaired|sPaired": "single" }, "job": {  "command_line": "mkdir -p reads1 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/1/5/5/dataset_1552f554-6914-4508-a42a-99067c451e57.dat\u0027 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 \u0026\u0026    mkdir -p paired_reads2 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/9/0/8/dataset_908aa4b0-b9da-4d84-91a8-69ea6f289c94.dat\u0027 \u0027paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\u0027 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/0/0/d/dataset_00daf8c3-6260-405b-809f-127939bf68a8.dat\u0027 \u0027paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\u0027 \u0026\u0026           export OMP_THREAD_LIMIT=${GALAXY_SLOTS:-4} \u0026\u0026  spades.py --only-assembler -o \u0027output\u0027  -t ${GALAXY_SLOTS:-4} -m $((${GALAXY_MEMORY_MB:-8192}/1024)) --tmp-dir ${TMPDIR}   --s 1 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027     --pe-1 1 \u0027paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\u0027 --pe-2 1 \u0027paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\u0027 --pe-or 1 fr        --cov-cutoff off    --careful",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T18:40:24.844418",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6swkl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "d028dfe9d2d7a02b",  "inputs": {   "additional_reads|singlePaired|input1": {    "id": "0e6e1607dc391535",    "src": "hda",    "uuid": "908aa4b0-b9da-4d84-91a8-69ea6f289c94"   },   "additional_reads|singlePaired|input11": {    "id": "0e6e1607dc391535",    "src": "hda",    "uuid": "908aa4b0-b9da-4d84-91a8-69ea6f289c94"   },   "additional_reads|singlePaired|input2": {    "id": "4f0a146fe340f819",    "src": "hda",    "uuid": "00daf8c3-6260-405b-809f-127939bf68a8"   },   "additional_reads|singlePaired|input21": {    "id": "4f0a146fe340f819",    "src": "hda",    "uuid": "00daf8c3-6260-405b-809f-127939bf68a8"   },   "singlePaired|input1": {    "id": "8ceafefa8539f4fb",    "src": "hda",    "uuid": "1552f554-6914-4508-a42a-99067c451e57"   },   "singlePaired|input11": {    "id": "8ceafefa8539f4fb",    "src": "hda",    "uuid": "1552f554-6914-4508-a42a-99067c451e57"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_ag": {    "id": "c8b4a758203b2ef4",    "src": "hda",    "uuid": "d7c6258e-5472-4514-9a93-4920dfa887e1"   },   "out_ags": {    "id": "446aec4913adc196",    "src": "hda",    "uuid": "a3cd5f52-c622-45fb-a217-02ebf17856ab"   },   "out_cn": {    "id": "ad819baa41536696",    "src": "hda",    "uuid": "d8ca789b-cd80-4b19-885e-7adc43caeac6"   },   "out_sc": {    "id": "567569a0fb28033b",    "src": "hda",    "uuid": "f142b181-9af6-405c-967d-8b831dc467fd"   }  },  "params": {   "__input_ext": "\"input\"",   "additional_reads": "{\"__current_case__\": 0, \"library_number\": \"true\", \"selector\": \"true\", \"singlePaired\": {\"__current_case__\": 1, \"input1\": {\"values\": [{\"id\": 31, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 32, \"src\": \"hda\"}]}, \"orientation\": \"fr\", \"sPaired\": \"paired\", \"type_paired\": \"pe\"}}",   "arf": "{\"nanopore\": null, \"pacbio\": null, \"sanger\": null, \"trusted_contigs\": null, \"untrusted_contigs\": null}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cov_cond": "{\"__current_case__\": 0, \"cov_cutoff\": \"off\"}",   "dbkey": "\"?\"",   "kmer_cond": "{\"__current_case__\": 0, \"kmer_sel\": \"auto\"}",   "mode_sel": "\"--careful\"",   "operation_mode": "\"--only-assembler\"",   "optional_output": "[\"ag\", \"ags\", \"cn\", \"sc\"]",   "phred_offset": "\"auto\"",   "singlePaired": "{\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 30, \"src\": \"hda\"}]}, \"sPaired\": \"single\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use \u0027--isolate\u0027 option.\n\n\nCommand line: /usr/local/bin/spades.py\t--only-assembler\t-o\t/galaxy/server/database/jobs_directory/000/16/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/16/tmp\t--s\t1\t/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-1\t1\t/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\t--pe-2\t1\t/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--careful\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/16/working/output\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use \u0027--isolate\u0027 option; for single-cell MDA data use \u0027--sc\u0027; for metagenomic data use \u0027--meta\u0027; for RNA-Seq use \u0027--rna\u0027.\n  Reads:\n    Library number: 1, library type: single\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: not specified\n      single reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      merged reads: not specified\n    Library number: 2, library type: paired-end\n      orientation: fr\n      left reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\u0027]\n      right reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\u0027]\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned ON\n  MismatchCorrector will be used\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/16/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100\n/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info\n  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/16/working/output/dataset.info) with K=21\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.007    23M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.023    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written\n  0:00:00.023    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #1 (takes a while)\n  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.064    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written\n  0:00:00.065    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.066    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.066    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.067    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.087     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611\n  0:00:00.109     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.109     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.111     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb\n  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.685     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 16432 reads\n  0:00:00.688     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.881     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.\n  0:00:00.881     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.912     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.912     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.913     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb\n  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.474  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.\n  0:00:01.475     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.654     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.\n  0:00:01.654     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.689     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).\n  0:00:01.689     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:00:01.809     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:00:01.817     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.831     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:00:01.831     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:00:01.831     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper\n  0:00:01.832     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted\n  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:00:01.833     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.833     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.857     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).\n  0:00:01.858     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:01.868     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:00:01.909     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 697\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 697. Coverage mad: 123.056\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:01.947     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:02.042     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:02.271     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:02.605     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:03.210     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:04.274     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 64\n  0:00:05.489     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 688.205. Fitted coverage std. dev: 134.857\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999997\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 723\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 344\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 748\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 688.205\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 344\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0\n  0:00:05.490     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:00:05.490     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:00:05.490     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:05.490     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:00:05.49\n..\nxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths\n  0:00:02.598     1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta\n  0:00:02.601     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths\n  0:00:02.604     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.610     1M / 155M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.610     1M / 155M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/16/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Mismatch correction started. \n\n\n===== Mismatch correction contigs started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin\n\n== Processing of contigs\n== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info\nRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A\n  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...\n  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n  0:00:00.005     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n[main] Real time: 0.035 sec; CPU: 0.006 sec\n  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0\n  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.046     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n[main] Real time: 0.047 sec; CPU: 0.099 sec\n  0:00:00.099     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam\n  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1\n  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n  0:00:00.139     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n[main] Real time: 0.044 sec; CPU: 0.094 sec\n  0:00:00.189     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam\n  0:00:00.226     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs\n  0:00:00.454     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs\n  0:00:00.459     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds\n\n===== Mismatch correction contigs finished. \n\n\n===== Mismatch correction scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin\n\n== Processing of scaffolds\n== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info\nRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A\n  0:00:00.001     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...\n  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n[main] Real time: 0.034 sec; CPU: 0.006 sec\n  0:00:00.043     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0\n  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n[main] Real time: 0.046 sec; CPU: 0.095 sec\n  0:00:00.096     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam\n  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1\n  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n[main] Real time: 0.045 sec; CPU: 0.099 sec\n  0:00:00.188     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam\n  0:00:00.224     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs\n  0:00:00.452     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs\n  0:00:00.458     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds\n\n===== Mismatch correction scaffolds finished. \n\n\n===== Mismatch correction finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/16/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished WITH WARNINGS!\n\n=== Error correction and assembling warnings:\n * 0:00:02.582     1M / 155M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/16/working/output/warnings.log\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.log\n\nThank you for using SPAdes!\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2",  "tool_stderr": "",  "tool_stdout": "\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use \u0027--isolate\u0027 option.\n\n\nCommand line: /usr/local/bin/spades.py\t--only-assembler\t-o\t/galaxy/server/database/jobs_directory/000/16/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/16/tmp\t--s\t1\t/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-1\t1\t/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\t--pe-2\t1\t/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--careful\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/16/working/output\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use \u0027--isolate\u0027 option; for single-cell MDA data use \u0027--sc\u0027; for metagenomic data use \u0027--meta\u0027; for RNA-Seq use \u0027--rna\u0027.\n  Reads:\n    Library number: 1, library type: single\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: not specified\n      single reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      merged reads: not specified\n    Library number: 2, library type: paired-end\n      orientation: fr\n      left reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz\u0027]\n      right reads: [\u0027/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\u0027]\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned ON\n  MismatchCorrector will be used\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/16/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100\n/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info\n  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/16/working/output/dataset.info) with K=21\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.007    23M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.023    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written\n  0:00:00.023    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #1 (takes a while)\n  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.064    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written\n  0:00:00.065    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.066    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.066    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.067    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.087     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611\n  0:00:00.109     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.109     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.111     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb\n  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.685     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 16432 reads\n  0:00:00.688     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.881     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.\n  0:00:00.881     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.912     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.912     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.913     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb\n  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.474  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.\n  0:00:01.475     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.654     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.\n  0:00:01.654     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.689     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).\n  0:00:01.689     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:00:01.809     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:00:01.817     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.831     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:00:01.831     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:00:01.831     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2\n  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper\n  0:00:01.832     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted\n  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create\n  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:00:01.833     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.833     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.857     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).\n  0:00:01.858     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:01.868     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:00:01.909     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 697\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 697. Coverage mad: 123.056\n  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:01.947     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:02.042     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:02.271     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:02.605     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:03.210     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:04.274     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 64\n  0:00:05.489     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 688.205. Fitted coverage std. dev: 134.857\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999997\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 723\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 344\n  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 748\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 688.205\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 344\n  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0\n  0:00:05.490     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:00:05.490     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:00:05.490     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:05.490     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:00:05.49\n..\nxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths\n  0:00:02.598     1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta\n  0:00:02.601     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths\n  0:00:02.604     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.610     1M / 155M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.610     1M / 155M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/16/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Mismatch correction started. \n\n\n===== Mismatch correction contigs started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin\n\n== Processing of contigs\n== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info\nRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A\n  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...\n  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n  0:00:00.005     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta\n[main] Real time: 0.035 sec; CPU: 0.006 sec\n  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0\n  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.046     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n[main] Real time: 0.047 sec; CPU: 0.099 sec\n  0:00:00.099     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam\n  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1\n  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n  0:00:00.139     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n[main] Real time: 0.044 sec; CPU: 0.094 sec\n  0:00:00.189     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam\n  0:00:00.226     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs\n  0:00:00.454     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs\n  0:00:00.459     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds\n\n===== Mismatch correction contigs finished. \n\n\n===== Mismatch correction scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin\n\n== Processing of scaffolds\n== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info\nRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A\n  0:00:00.001     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...\n  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n[bwa_index] Pack FASTA... 0.00 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 0.00 seconds elapse.\n[bwa_index] Update BWT... 0.00 sec\n[bwa_index] Pack forward-only FASTA... 0.00 sec\n[bwa_index] Construct SA from BWT and Occ... 0.00 sec\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta\n[main] Real time: 0.034 sec; CPU: 0.006 sec\n  0:00:00.043     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0\n  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz\n[main] Real time: 0.046 sec; CPU: 0.095 sec\n  0:00:00.096     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam\n  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1\n  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   \u003e /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam\n[main] Version: 0.7.16a-r1181\n[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz\n[main] Real time: 0.045 sec; CPU: 0.099 sec\n  0:00:00.188     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam\n  0:00:00.224     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs\n  0:00:00.452     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs\n  0:00:00.458     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds\n\n===== Mismatch correction scaffolds finished. \n\n\n===== Mismatch correction finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/16/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished WITH WARNINGS!\n\n=== Error correction and assembling warnings:\n * 0:00:02.582     1M / 155M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/16/working/output/warnings.log\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.log\n\nThank you for using SPAdes!\n",  "update_time": "2024-12-02T18:40:48.217722",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 53.01903438568115, "tool_id": "spades", "tool_version": "3.15.5+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py--only-assembler-o/galaxy/server/database/jobs_directory/000/16/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/16/tmp--s1/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-11/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz--pe-21/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--carefulSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/16/working/outputMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: single      left reads: not specified      right reads: not specified      interlaced reads: not specified      single reads: ['/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      merged reads: not specified    Library number: 2, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned ON  MismatchCorrector will be used  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/16/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.log/galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz: max reads length: 100/galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/output/K21/configs/careful_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/16/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.007    23M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.007     1M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.023    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   4108 reads written  0:00:00.023    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #1 (takes a while)  0:00:00.048     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.064    63M / 63M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.065    41M / 41M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.066    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.066    41M / 41M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.067    51M / 51M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.087     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.109     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611  0:00:00.109     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.109     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.111     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb  0:00:00.111     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.685     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 16432 reads  0:00:00.688     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.881     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.  0:00:00.881     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.912     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.912     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.913     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08331 Gb  0:00:00.913     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:01.474  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.  0:00:01.475     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.654     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.  0:00:01.654     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.689     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).  0:00:01.689     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.  0:00:01.809     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers  0:00:01.817     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.  0:00:01.831     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)  0:00:01.831     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)  0:00:01.831     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2  0:00:01.832     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper  0:00:01.832     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:01.832     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:01.833     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create  0:00:01.833     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph  0:00:01.833     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)  0:00:01.833     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.857     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).  0:00:01.858     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.  0:00:01.868     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM  0:00:01.909     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 697  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 697. Coverage mad: 123.056  0:00:01.910     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:01.947     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.042     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:02.271     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:02.605     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:03.210     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:04.274     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 64  0:00:05.489     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 688.205. Fitted coverage std. dev: 134.857  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.999997  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 723  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 344  0:00:05.490     1M / 34M   INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 748  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  55)   Mean coverage was calculated as 688.205  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 344  0:00:05.490     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0  0:00:05.490     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)  0:00:05.490     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning  0:00:05.490     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:05.490     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover  0:00:05.49..xy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths  0:00:02.598     1M / 155M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta  0:00:02.601     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths  0:00:02.604     1M / 155M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.610     1M / 155M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.610     1M / 155M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/16/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/16/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/16/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Mismatch correction started. ===== Mismatch correction contigs started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta --assembly_type contigs --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin== Processing of contigs== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/contigs/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.000     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta  0:00:00.005     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta[main] Real time: 0.035 sec; CPU: 0.006 sec  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0  0:00:00.045     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.046     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz[main] Real time: 0.047 sec; CPU: 0.099 sec  0:00:00.099     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib0_rX1bcH/tmp.sam  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1  0:00:00.138     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.139     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_contigs.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.044 sec; CPU: 0.094 sec  0:00:00.189     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_h0w4uztj/lib1_JumkoB/tmp.sam  0:00:00.226     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.454     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.459     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction contigs finished. ===== Mismatch correction scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/correction_iteration_script.py --corrected /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --assembled /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta --assembly_type scaffolds --output_dir /galaxy/server/database/jobs_directory/000/16/working/output --bin_home /usr/local/bin== Processing of scaffolds== Running contig polishing tool: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.infoRun: /usr/local/bin/spades-corrector-core /galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/corrector.info /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta/galaxy/server/database/jobs_directory/000/16/working/output/mismatch_corrector/scaffolds/configs/log.properties  0:00:00.000     1M / 30M   INFO    General                 (main.cpp                  :  58)   Starting mismatch corrector, built from N/A, git revision N/A  0:00:00.001     1M / 30M   INFO    General                 (main.cpp                  :  59)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 175)   Splitting assembly...  0:00:00.001     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 176)   Assembly file: /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta  0:00:00.006     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 128)   Running bwa index ...: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta[bwa_index] Pack FASTA... 0.00 sec[bwa_index] Construct BWT for the packed sequence...[bwa_index] 0.00 seconds elapse.[bwa_index] Update BWT... 0.00 sec[bwa_index] Pack forward-only FASTA... 0.00 sec[bwa_index] Construct SA from BWT and Occ... 0.00 sec[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa index /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta[main] Real time: 0.034 sec; CPU: 0.006 sec  0:00:00.043     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing single sublib of number 0  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz  0:00:00.044     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/reads1/ecoli_1K.fastq.gz.fastq.gz[main] Real time: 0.046 sec; CPU: 0.095 sec  0:00:00.096     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib0_gjVLTo/tmp.sam  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 190)   Processing paired sublib of number 1  0:00:00.135     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 191)   /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz  0:00:00.136     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 153)   Running bwa mem ...:/usr/local/bin/spades-bwa mem  -v 1 -t 8  /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz   > /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam[main] Version: 0.7.16a-r1181[main] CMD: /usr/local/bin/spades-bwa mem -v 1 -t 8 /galaxy/server/database/jobs_directory/000/16/working/output/misc/assembled_scaffolds.fasta /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_1.fastq.gz.fastq.gz /galaxy/server/database/jobs_directory/000/16/working/paired_reads2/ecoli_1K_2.fastq.gz.fastq.gz[main] Real time: 0.045 sec; CPU: 0.099 sec  0:00:00.188     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 199)   Adding samfile /galaxy/server/database/jobs_directory/000/16/tmp/corrector_gsvrcgsg/lib1_0S9JTk/tmp.sam  0:00:00.224     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 227)   Processing contigs  0:00:00.452     1M / 30M   INFO   DatasetProcessor         (dataset_processor.cpp     : 247)   Gluing processed contigs  0:00:00.458     1M / 30M   INFO    General                 (main.cpp                  :  72)   Correcting time: 0 hours 0 minutes 0 seconds===== Mismatch correction scaffolds finished. ===== Mismatch correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/16/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/16/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/16/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:02.582     1M / 155M  WARN    General                 (launcher.cpp              : 178)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/16/working/output/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/16/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="39.794644355773926">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py--only-error-correction-o/galaxy/server/database/jobs_directory/000/18/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/18/tmp--pe-121/galaxy/server/database/jobs_directory/000/18/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--carefulSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/18/working/outputMode: ONLY read error correction (without assembling)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/18/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/output/spades.log===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/18/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/18/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/18/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/18/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.005     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.005     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.005     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.126  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.235  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.235     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.270     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.272     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.290     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.291     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.308     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.310     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.310     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.310     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.311     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.320     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.320     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.320     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.337     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.353     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.353     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.353     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.364     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.366     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.366     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.375     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.375     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.375     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.375     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/18/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.517   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.522   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.525   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.581     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.581     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.581     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/output/corrected/corrected.yaml  0:00:00.584     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/18/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/18/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/18/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/18/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/18/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/18/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/18/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/output/corrected/======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="39.97777533531189">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py--only-error-correction-o/galaxy/server/database/jobs_directory/000/20/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/20/tmp--pe-121/galaxy/server/database/jobs_directory/000/20/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--careful--scSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/working/outputMode: ONLY read error correction (without assembling)Debug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/20/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/output/spades.log===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/20/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/20/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/20/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/20/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.124  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.228  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.228     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.266     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.267     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.281     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.281     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.291     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.294     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.294     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.294     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.294     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.304     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.304     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.304     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.321     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.339     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.339     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.339     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.347     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.348     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.348     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.358     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.358     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.358     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.358     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/20/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.499   178M / 179M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.504   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.508   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.566     1M / 179M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.566     1M / 179M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.566     1M / 179M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/output/corrected/corrected.yaml  0:00:00.570     1M / 179M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/20/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/20/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/20/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/20/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/20/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/20/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/20/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/output/corrected/======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="35.928807497024536">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "mode_sel": "--sc",  "operation_mode": "--only-assembler",  "singlePaired|input1": {   "id": "3f1f7ba12feaf492",   "src": "hda"  },  "singlePaired|sPaired": "paired_interlaced" }, "job": {  "command_line": "mkdir -p reads1 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/0/b/c/dataset_0bce8e73-66fc-4770-999b-53cbe68bd4e8.dat\u0027 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 \u0026\u0026           export OMP_THREAD_LIMIT=${GALAXY_SLOTS:-4} \u0026\u0026  spades.py --only-assembler -o \u0027output\u0027  -t ${GALAXY_SLOTS:-4} -m $((${GALAXY_MEMORY_MB:-8192}/1024)) --tmp-dir ${TMPDIR}   --pe-12 1 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 --pe-or 1 fr        --cov-cutoff off    --sc",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T18:42:30.895042",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rj46b",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "717220d40d1f4fb6",  "inputs": {   "singlePaired|input1": {    "id": "3f1f7ba12feaf492",    "src": "hda",    "uuid": "0bce8e73-66fc-4770-999b-53cbe68bd4e8"   },   "singlePaired|input11": {    "id": "3f1f7ba12feaf492",    "src": "hda",    "uuid": "0bce8e73-66fc-4770-999b-53cbe68bd4e8"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_ag": {    "id": "d4345d64da746b03",    "src": "hda",    "uuid": "d3101b40-168f-4d46-85b3-8c02db74fbbc"   },   "out_ags": {    "id": "8c0b189e6d283a39",    "src": "hda",    "uuid": "0cb65946-3f7c-4385-bab9-48d39da3b6a9"   },   "out_cn": {    "id": "896c3310041bef7c",    "src": "hda",    "uuid": "390f4329-6cbd-4ecd-b445-2c6bcfa4af6f"   },   "out_sc": {    "id": "171d75cf741926b1",    "src": "hda",    "uuid": "4d843caa-a282-498b-8912-48d7d18f9d94"   }  },  "params": {   "__input_ext": "\"input\"",   "additional_reads": "{\"__current_case__\": 1, \"selector\": \"false\"}",   "arf": "{\"nanopore\": null, \"pacbio\": null, \"sanger\": null, \"trusted_contigs\": null, \"untrusted_contigs\": null}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cov_cond": "{\"__current_case__\": 0, \"cov_cutoff\": \"off\"}",   "dbkey": "\"?\"",   "kmer_cond": "{\"__current_case__\": 0, \"kmer_sel\": \"auto\"}",   "mode_sel": "\"--sc\"",   "operation_mode": "\"--only-assembler\"",   "optional_output": "[\"ag\", \"ags\", \"cn\", \"sc\"]",   "phred_offset": "\"auto\"",   "singlePaired": "{\"__current_case__\": 2, \"input1\": {\"values\": [{\"id\": 47, \"src\": \"hda\"}]}, \"orientation\": \"fr\", \"sPaired\": \"paired_interlaced\", \"type_paired\": \"pe\"}"  },  "state": "error",  "stderr": "",  "stdout": "Command line: /usr/local/bin/spades.py\t--only-assembler\t-o\t/galaxy/server/database/jobs_directory/000/22/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/22/tmp\t--pe-12\t1\t/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--sc\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/22/working/output\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Single-cell mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: [\u0027/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [21, 33, 55]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/22/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Preprocess reads started. \n\n\n===== Preprocess reads finished. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info\n  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/22/working/output/dataset.info) with K=21\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.022    43M / 43M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written\n  0:00:00.022    21M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.024    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.024    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.048     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611\n  0:00:00.057     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.057     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.058     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.639     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads\n  0:00:00.641     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.830     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.\n  0:00:00.830     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.862     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.862     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.863     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.447  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.\n  0:00:01.448     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.643     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.\n  0:00:01.643     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.678     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).\n  0:00:01.678     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:00:01.792     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:00:01.799     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.811     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:00:01.811     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:00:01.811     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper\n  0:00:01.812     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:01.814     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:00:01.814     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.814     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.837     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).\n  0:00:01.837     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:01.844     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 119)   Bucket size: 87\n  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 134)   Proper threshold was not found. Threshold set to 0.1 of average coverage\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  39)   Average edge coverage: 273.372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  40)   Graph threshold: 27.3372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 27.3372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.880     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   \n..\nnformation from graph, this takes a while.\n  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected\n  0:00:01.932     1M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed\n  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed\n  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides\n  0:00:01.933     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:01.933     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta\n  0:00:01.938     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa\n  0:00:01.941     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)\n  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)\n  0:00:02.058   145M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.249   145M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed\n  0:00:02.385   145M / 154M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 4\n  0:00:02.386   145M / 154M  INFO    General                 (pair_info_count.cpp       : 222)   608 paired reads (29.6008% of all) aligned to long edges\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 338.201, deviation = 219.594, left quantile = 71, right quantile = 658, read length = 100\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 71, right insert size quantile 658, filtering threshold 0, rounding threshold 0\n  0:00:02.398    10M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.402    10M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed\n  0:00:02.407     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done\n  0:00:02.407     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2\n  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:02.407     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0\n  0:00:02.408     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0\n  0:00:02.408     1M / 154M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index\n  0:00:02.408     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 4\n  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 4\n  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index\n  0:00:02.427     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)\n  0:00:02.427     1M / 154M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  0:00:02.427     1M / 154M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  0:00:02.428     1M / 154M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  0:00:02.430     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.430     1M / 154M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta\n  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa\n  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg\n  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta\n  0:00:02.443     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths\n  0:00:02.446     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta\n  0:00:02.450     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths\n  0:00:02.453     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.460     1M / 154M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.460     1M / 154M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/22/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.log\n\nThank you for using SPAdes!\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2",  "tool_stderr": "",  "tool_stdout": "Command line: /usr/local/bin/spades.py\t--only-assembler\t-o\t/galaxy/server/database/jobs_directory/000/22/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/22/tmp\t--pe-12\t1\t/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--sc\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/22/working/output\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Single-cell mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: [\u0027/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [21, 33, 55]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/22/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.log\n\n/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100\n\nReads length: 100\n\n\n===== Before start started. \n\n\n===== Preprocess reads started. \n\n\n===== Preprocess reads finished. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info\n  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/22/working/output/dataset.info) with K=21\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.022    43M / 43M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written\n  0:00:00.022    21M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:00.024    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.024    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.048     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100\n  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611\n  0:00:00.057     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.057     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.058     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:00.639     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads\n  0:00:00.641     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.830     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.\n  0:00:00.830     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.862     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:00:00.862     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.863     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb\n  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860\n  0:00:01.447  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.\n  0:00:01.448     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:01.643     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.\n  0:00:01.643     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.678     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).\n  0:00:01.678     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:00:01.792     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:00:01.799     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.811     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:00:01.811     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:00:01.811     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2\n  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper\n  0:00:01.812     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted\n  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:01.814     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create\n  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:00:01.814     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.814     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:01.837     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).\n  0:00:01.837     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:01.844     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 119)   Bucket size: 87\n  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 134)   Proper threshold was not found. Threshold set to 0.1 of average coverage\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  39)   Average edge coverage: 273.372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  40)   Graph threshold: 27.3372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 27.3372\n  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:00:01.880     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   \n..\nnformation from graph, this takes a while.\n  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)\n  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected\n  0:00:01.932     1M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed\n  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed\n  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides\n  0:00:01.933     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:01.933     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta\n  0:00:01.938     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa\n  0:00:01.941     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)\n  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0\n  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)\n  0:00:02.058   145M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.249   145M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed\n  0:00:02.385   145M / 154M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 4\n  0:00:02.386   145M / 154M  INFO    General                 (pair_info_count.cpp       : 222)   608 paired reads (29.6008% of all) aligned to long edges\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 338.201, deviation = 219.594, left quantile = 71, right quantile = 658, read length = 100\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)\n  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 71, right insert size quantile 658, filtering threshold 0, rounding threshold 0\n  0:00:02.398    10M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  0:00:02.402    10M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed\n  0:00:02.407     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done\n  0:00:02.407     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2\n  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:02.407     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0\n  0:00:02.408     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0\n  0:00:02.408     1M / 154M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index\n  0:00:02.408     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 4\n  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 4\n  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index\n  0:00:02.427     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)\n  0:00:02.427     1M / 154M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  0:00:02.427     1M / 154M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  0:00:02.428     1M / 154M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library\n  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths\n  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  0:00:02.430     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  0:00:02.430     1M / 154M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta\n  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa\n  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg\n  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta\n  0:00:02.443     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths\n  0:00:02.446     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta\n  0:00:02.450     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths\n  0:00:02.453     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  0:00:02.460     1M / 154M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  0:00:02.460     1M / 154M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds\n\n===== K55 finished. \n\n\n===== Copy files started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/22/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.log\n\nThank you for using SPAdes!\n",  "update_time": "2024-12-02T18:42:44.260690",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 7, "time_seconds": 35.928807497024536, "tool_id": "spades", "tool_version": "3.15.5+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py--only-assembler-o/galaxy/server/database/jobs_directory/000/22/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/22/tmp--pe-121/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--scSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/22/working/outputMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [21, 33, 55]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/22/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.log/galaxy/server/database/jobs_directory/000/22/working/reads1/ecoli_1K.fastq.gz.fastq.gz: max reads length: 100Reads length: 100===== Before start started. ===== Preprocess reads started. ===== Preprocess reads finished. ===== Assembling started. ===== K21 started. == Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  99)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/output/K21/configs/mda_mode.info  0:00:00.000     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/galaxy/server/database/jobs_directory/000/22/working/output/dataset.info) with K=21  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion  0:00:00.000     1M / 34M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3  0:00:00.000     1M / 34M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40  0:00:00.000     1M / 34M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8  0:00:00.000     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     1M / 34M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.022    43M / 43M   INFO    General                 (binary_converter.cpp      : 111)   2054 reads written  0:00:00.022    21M / 34M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads  0:00:00.024    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.024    21M / 34M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads  0:00:00.025    31M / 34M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.048     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 153)   Max read length 100  0:00:00.057     1M / 34M   INFO    General                 (construction.cpp          : 159)   Average read length 86.1611  0:00:00.057     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)  0:00:00.057     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.058     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.059     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:00.639     1M / 34M   INFO    General                 (kmer_splitters.hpp        : 131)   Used 8216 reads  0:00:00.641     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.830     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 986 kmers in total.  0:00:00.830     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)  0:00:00.862     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index  0:00:00.862     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 80 files using 8 threads. This might take a while.  0:00:00.863     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08332 Gb  0:00:00.863     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 838860  0:00:01.447  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 199)   Used 986 kmers.  0:00:01.448     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:01.643     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 987 kmers in total.  0:00:01.643     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.678     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 987 kmers, 64056 bytes occupied (519.198 bits per kmer).  0:00:01.678     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.  0:00:01.792     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers  0:00:01.799     1M / 34M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.  0:00:01.811     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)  0:00:01.811     1M / 34M   INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)  0:00:01.811     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2  0:00:01.812     1M / 34M   INFO   Early tip clipping       (early_simplification.hpp  :  49)   7 22-mers were removed by early tip clipper  0:00:01.812     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 1 sequences extracted  0:00:01.813     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:01.814     1M / 34M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 487)   Total 2 edges to create  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 493)   Sorting done  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 503)   Total 2 vertices to create  0:00:01.814     1M / 34M   INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph  0:00:01.814     1M / 34M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)  0:00:01.814     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:01.837     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 986 kmers, 64072 bytes occupied (519.854 bits per kmer).  0:00:01.837     1M / 34M   INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.  0:00:01.844     1M / 34M   INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == EC Threshold Finding (id: ec_threshold_finder)  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 119)   Bucket size: 87  0:00:01.879     1M / 34M   INFO   ThresholdFinder          (ec_threshold_finder.hpp   : 134)   Proper threshold was not found. Threshold set to 0.1 of average coverage  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  39)   Average edge coverage: 273.372  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  40)   Graph threshold: 27.3372  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  70)   EC coverage threshold value was calculated as 27.3372  0:00:01.879     1M / 34M   INFO    General                 (genomic_info_filler.cpp   :  71)   Trusted kmer low bound: 0  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times  0:00:01.879     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 368)   Graph simplification started  0:00:01.879     1M / 34M   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:01.879     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper  0:00:01.879     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times  0:00:01.880     1M / 34M   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4  0:00:01.880     1M / 34M   INFO   Simplification           (parallel_processing.hpp   : 167)   ..nformation from graph, this takes a while.  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:01.923     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 192)   Total 0 edges (out of 2) with 0 potential mismatch positions (-nan positions per edge)  0:00:01.923     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected  0:00:01.932     1M / 34M   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 8216 reads processed  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed  0:00:01.933     1M / 34M   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 0 nucleotides  0:00:01.933     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:01.933     1M / 34M   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta  0:00:01.938     1M / 34M   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa  0:00:01.941     1M / 34M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 0 kmers to process  0:00:01.941     1M / 34M   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 945  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0  0:00:01.941     1M / 34M   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)  0:00:02.058   145M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.249   145M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.385   145M / 154M  INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 4  0:00:02.386   145M / 154M  INFO    General                 (pair_info_count.cpp       : 222)   608 paired reads (29.6008% of all) aligned to long edges  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 338.201, deviation = 219.594, left quantile = 71, right quantile = 658, read length = 100  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)  0:00:02.387     1M / 154M  INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 71, right insert size quantile 658, filtering threshold 0, rounding threshold 0  0:00:02.398    10M / 154M  INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper  0:00:02.402    10M / 154M  INFO    General                 (sequence_mapper_notifier.h:  95)   Total 2054 reads processed  0:00:02.407     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done  0:00:02.407     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2  0:00:02.407     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 2  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:02.407     1M / 154M  INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:02.407     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.408     1M / 154M  INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 0; contradictional = 0  0:00:02.408     1M / 154M  INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index  0:00:02.408     1M / 154M  INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   :  37)   Filtering info  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 4  0:00:02.427     1M / 154M  INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 4  0:00:02.427     1M / 154M  INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index  0:00:02.427     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)  0:00:02.427     1M / 154M  INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving  0:00:02.427     1M / 154M  INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started  0:00:02.428     1M / 154M  INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 2  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library  0:00:02.429     1M / 154M  INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 484)   Gap closing completed  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 312)   Traversed 0 loops  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 250)   Finalizing paths  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 252)   Deduplicating paths  0:00:02.429     1M / 154M  INFO    General                 (launcher.cpp              : 256)   Paths deduplicated  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  63)   Sorting paths  0:00:02.429     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps  0:00:02.429     1M / 154M  INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths  0:00:02.430     1M / 154M  INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 273)   Paths finalized  0:00:02.430     1M / 154M  INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished  0:00:02.430     1M / 154M  INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)  0:00:02.430     1M / 154M  INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa  0:00:02.435     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds  0:00:02.439     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta  0:00:02.443     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths  0:00:02.446     1M / 154M  INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta  0:00:02.450     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths  0:00:02.453     1M / 154M  INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths  0:00:02.460     1M / 154M  INFO    General                 (pipeline.cpp              : 287)   SPAdes finished  0:00:02.460     1M / 154M  INFO    General                 (main.cpp                  : 136)   Assembling time: 0 hours 0 minutes 2 seconds===== K55 finished. ===== Copy files started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/22/working/output/K55/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/before_rr.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/strain_graph.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta /galaxy/server/database/jobs_directory/000/22/working/output/K55/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/22/working/output/K55/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/22/working/output/K55/final_contigs.paths /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths===== Copy files finished. ===== Assembling finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/22/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/22/working/output/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/output/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/22/working/output/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/22/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #9)" name="8" time="39.076385498046875">
        
            
            <system-out><![CDATA[
            == Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command line: /usr/local/bin/spades.py--only-error-correction-o/galaxy/server/database/jobs_directory/000/24/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/24/tmp--pe-121/galaxy/server/database/jobs_directory/000/24/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoffSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/24/working/outputMode: ONLY read error correction (without assembling)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/24/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/output/spades.log===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/24/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/24/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/24/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/24/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.006  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.128  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.248  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.248     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.285     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.286     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.301     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.301     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.315     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.317     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.317     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.317     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.317     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.329     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.329     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.329     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.346     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.361     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.361     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.361     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.370     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.371     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.371     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.383     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.383     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.383     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.383     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/24/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.524   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.528   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.531   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.588     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.588     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.588     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/output/corrected/corrected.yaml  0:00:00.592     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/24/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/24/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/24/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/24/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/24/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/24/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/24/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/output/corrected/======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #10)" name="9" time="29.190855026245117">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "mode_sel": "--sc",  "operation_mode": "--only-error-correction",  "optional_output": [   "cr",   "l"  ],  "singlePaired|input1": {   "id": "435e8e93979b8fbe",   "src": "hda"  },  "singlePaired|sPaired": "paired_interlaced" }, "job": {  "command_line": "mkdir -p reads1 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/a/e/dataset_8ae87c3c-e1a9-4e64-abda-2e5152d4ac23.dat\u0027 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 \u0026\u0026           export OMP_THREAD_LIMIT=${GALAXY_SLOTS:-4} \u0026\u0026  spades.py --only-error-correction -o \u0027output\u0027  -t ${GALAXY_SLOTS:-4} -m $((${GALAXY_MEMORY_MB:-8192}/1024)) --tmp-dir ${TMPDIR}   --pe-12 1 \u0027reads1/ecoli_1K.fastq.gz.fastq.gz\u0027 --pe-or 1 fr        --cov-cutoff off    --sc",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-02T18:43:45.997798",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4tv6t",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "f2f5e768d10719b2",  "inputs": {   "singlePaired|input1": {    "id": "435e8e93979b8fbe",    "src": "hda",    "uuid": "8ae87c3c-e1a9-4e64-abda-2e5152d4ac23"   },   "singlePaired|input11": {    "id": "435e8e93979b8fbe",    "src": "hda",    "uuid": "8ae87c3c-e1a9-4e64-abda-2e5152d4ac23"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "out_cr": {    "id": "d3b9c9b24e3f7709",    "src": "hdca"   }  },  "outputs": {   "out_l": {    "id": "0762130ecd75a48f",    "src": "hda",    "uuid": "3f3756e4-d631-46c1-823f-5cd19cd81cb5"   }  },  "params": {   "__input_ext": "\"input\"",   "additional_reads": "{\"__current_case__\": 1, \"selector\": \"false\"}",   "arf": "{\"nanopore\": null, \"pacbio\": null, \"sanger\": null, \"trusted_contigs\": null, \"untrusted_contigs\": null}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cov_cond": "{\"__current_case__\": 0, \"cov_cutoff\": \"off\"}",   "dbkey": "\"?\"",   "kmer_cond": "{\"__current_case__\": 0, \"kmer_sel\": \"auto\"}",   "mode_sel": "\"--sc\"",   "operation_mode": "\"--only-error-correction\"",   "optional_output": "[\"cr\", \"l\"]",   "phred_offset": "\"auto\"",   "singlePaired": "{\"__current_case__\": 2, \"input1\": {\"values\": [{\"id\": 57, \"src\": \"hda\"}]}, \"orientation\": \"fr\", \"sPaired\": \"paired_interlaced\", \"type_paired\": \"pe\"}"  },  "state": "error",  "stderr": "",  "stdout": "Command line: /usr/local/bin/spades.py\t--only-error-correction\t-o\t/galaxy/server/database/jobs_directory/000/26/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/26/tmp\t--pe-12\t1\t/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--sc\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working/output\nMode: ONLY read error correction (without assembling)\nDebug mode is turned OFF\n\nDataset parameters:\n  Single-cell mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: [\u0027/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.log\n\n\n===== Before start started. \n\n\n===== Preprocess reads started. \n\n\n===== Preprocess interlaced reads started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/26/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/26/working/output/split_input\n\n== Splitting /galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/26/working/output/split_input directory)\n\n===== Preprocess interlaced reads finished. \n\n\n===== Preprocess reads finished. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info\n  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.\n  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb\n  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq\n  0:00:00.133  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.235  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:00.235     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.278     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.\n  0:00:00.280     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:00.300     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).\n  0:00:00.300     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  0:00:00.318     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:00.319     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  0:00:00.320     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  0:00:00.330     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:00.330     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  0:00:00.331     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq\n  0:00:00.348     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:00.365     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:00.375     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.\n  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.527   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.\n  0:00:00.531   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0\n  0:00:00.535   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0\n  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.\n  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.\n  0:00:00.591     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml\n  0:00:00.595     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n===== Read error correction finished. \n\n\n===== corrected reads compression started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/26/working/output/corrected --gzip_output\n\n== Compressing corrected reads (with gzip)\n== Files to compress: [\u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq\u0027, \u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq\u0027, \u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq\u0027]\n== Files compression is finished\n== Dataset yaml file is updated\n\n===== corrected reads compression finished. \n\n\n===== Read error correction finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/26/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/26/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/output/corrected/\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.log\n\nThank you for using SPAdes!\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2",  "tool_stderr": "",  "tool_stdout": "Command line: /usr/local/bin/spades.py\t--only-error-correction\t-o\t/galaxy/server/database/jobs_directory/000/26/working/output\t-t\t8\t-m\t50\t--tmp-dir\t/galaxy/server/database/jobs_directory/000/26/tmp\t--pe-12\t1\t/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz\t--pe-or\t1\tfr\t--cov-cutoff\toff\t--sc\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 3.11.0\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/26/working/output\nMode: ONLY read error correction (without assembling)\nDebug mode is turned OFF\n\nDataset parameters:\n  Single-cell mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: not specified\n      right reads: not specified\n      interlaced reads: [\u0027/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz\u0027]\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.log\n\n\n===== Before start started. \n\n\n===== Preprocess reads started. \n\n\n===== Preprocess interlaced reads started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/26/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/26/working/output/split_input\n\n== Splitting /galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/26/working/output/split_input directory)\n\n===== Preprocess interlaced reads finished. \n\n\n===== Preprocess reads finished. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info\n\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info\n  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb\n  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.004     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.004     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.\n  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576\n  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb\n  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq\n  0:00:00.133  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.235  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:00.235     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:00:00.278     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.\n  0:00:00.280     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:00:00.300     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).\n  0:00:00.300     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  0:00:00.318     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:00.319     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  0:00:00.320     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  0:00:00.330     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:00.330     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  0:00:00.331     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq\n  0:00:00.348     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:00.365     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:00.375     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964\n  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.\n  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq\n  0:00:00.527   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.\n  0:00:00.531   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0\n  0:00:00.535   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0\n  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.\n  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.\n  0:00:00.591     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml\n  0:00:00.595     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n===== Read error correction finished. \n\n\n===== corrected reads compression started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/26/working/output/corrected --gzip_output\n\n== Compressing corrected reads (with gzip)\n== Files to compress: [\u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq\u0027, \u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq\u0027, \u0027/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq\u0027]\n== Files compression is finished\n== Dataset yaml file is updated\n\n===== corrected reads compression finished. \n\n\n===== Read error correction finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/26/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/26/working/output/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/output/corrected/\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.log\n\nThank you for using SPAdes!\n",  "update_time": "2024-12-02T18:43:52.833671",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.15.5+galaxy2, exit_code: None, stderr: .",  "Output collection \u0027out_cr\u0027: expected to have 3 elements, but it had 0." ], "status": "failure", "test_index": 9, "time_seconds": 29.190855026245117, "tool_id": "spades", "tool_version": "3.15.5+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py--only-error-correction-o/galaxy/server/database/jobs_directory/000/26/working/output-t8-m50--tmp-dir/galaxy/server/database/jobs_directory/000/26/tmp--pe-121/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz--pe-or1fr--cov-cutoffoff--scSystem information:  SPAdes version: 3.15.5  Python version: 3.11.0  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/26/working/outputMode: ONLY read error correction (without assembling)Debug mode is turned OFFDataset parameters:  Single-cell mode  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: not specified      right reads: not specified      interlaced reads: ['/galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz']      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will be compressedOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/26/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.log===== Before start started. ===== Preprocess reads started. ===== Preprocess interlaced reads started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/preprocess_interlaced_reads.py --args_filename /galaxy/server/database/jobs_directory/000/26/working/output/split_input/tmp/interlaced --dst /galaxy/server/database/jobs_directory/000/26/working/output/split_input== Splitting /galaxy/server/database/jobs_directory/000/26/working/reads1/ecoli_1K.fastq.gz.fastq.gz into left and right reads (in /galaxy/server/database/jobs_directory/000/26/working/output/split_input directory)===== Preprocess interlaced reads finished. ===== Preprocess reads finished. ===== Read error correction started. ===== Read error correction started. == Running: /usr/local/bin/spades-hammer /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     1M / 34M   INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/26/working/output/corrected/configs/config.info  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     1M / 34M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 50 Gb  0:00:00.002     1M / 34M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     1M / 34M   INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     1M / 34M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     1M / 34M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 8 threads. This might take a while.  0:00:00.006     1M / 34M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 1048576  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 2.08333 Gb  0:00:00.006     1M / 34M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304  0:00:00.007  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.133  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.235  4609M / 4609M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:00.235     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.  0:00:00.278     1M / 34M   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1974 kmers in total.  0:00:00.280     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices  0:00:00.300     1M / 34M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1974 kmers, 13944 bytes occupied (56.5106 bits per kmer).  0:00:00.300     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order  0:00:00.318     1M / 34M   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:00.319     1M / 34M   INFO    General                 (main.cpp                  : 155)   Extracting clusters:  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root  0:00:00.319     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts  0:00:00.320     1M / 34M   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries  0:00:00.330     1M / 34M   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:00.330     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.  0:00:00.331     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq  0:00:00.348     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.  0:00:00.365     1M / 34M   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:00.365     1M / 34M   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:00.375     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 0 non-read kmers were generated.  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 2.8 kmers  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 1964  0:00:00.376     1M / 34M   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:00.377     1M / 34M   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:00.386     1M / 34M   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 8 threads.  0:00:00.386     1M / 34M   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_1.fastq and /galaxy/server/database/jobs_directory/000/26/working/output/split_input/ecoli_1K.fastq.gz_2.fastq  0:00:00.527   178M / 178M  INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 2054 reads.  0:00:00.531   179M / 179M  INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0  0:00:00.535   179M / 179M  INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 4 bases in 4 reads.  0:00:00.591     1M / 178M  INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 0 bases out of 353915.  0:00:00.591     1M / 178M  INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml  0:00:00.595     1M / 178M  INFO    General                 (main.cpp                  : 262)   All done. Exiting.===== Read error correction finished. ===== corrected reads compression started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/compress_all.py --input_file /galaxy/server/database/jobs_directory/000/26/working/output/corrected/corrected.yaml --ext_python_modules_home /usr/local/share/spades --max_threads 8 --output_dir /galaxy/server/database/jobs_directory/000/26/working/output/corrected --gzip_output== Compressing corrected reads (with gzip)== Files to compress: ['/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_1.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz_2.00.0_0.cor.fastq', '/galaxy/server/database/jobs_directory/000/26/working/output/corrected/ecoli_1K.fastq.gz__unpaired.00.0_0.cor.fastq']== Files compression is finished== Dataset yaml file is updated===== corrected reads compression finished. ===== Read error correction finished. ===== Breaking scaffolds started. == Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/26/working/output/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/26/working/output/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished. ===== Terminate started. ===== Terminate finished.  * Corrected reads are in /galaxy/server/database/jobs_directory/000/26/working/output/corrected/======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/26/working/output/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="59.196096658706665">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "efc637652a9617d4",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/e/4/dataset_6e4d5ca3-48c2-49c2-94f9-564f24519237.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/8/5/b/dataset_85b94bd8-ff9c-4589-acf1-afbf927af0d7.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-12-02T18:55:47.118841",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fb9qp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "ba8cb1b6e1dbeffd",  "inputs": {   "readtype|fastq_in": {    "id": "efc637652a9617d4",    "src": "hda",    "uuid": "6e4d5ca3-48c2-49c2-94f9-564f24519237"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1733165765.0000000",    "title": "Job End Time",    "value": "2024-12-02 18:56:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1733165765.0000000",    "title": "Job Start Time",    "value": "2024-12-02 18:56:05"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "2de5de34fc4d54da",    "src": "hda",    "uuid": "0041b4f8-e583-4d62-a1e3-9df4e5022629"   },   "fastq_out": {    "id": "54dfc1723637aa7e",    "src": "hda",    "uuid": "85b94bd8-ff9c-4589-acf1-afbf927af0d7"   },   "log_file": {    "id": "499d458f87182b0a",    "src": "hda",    "uuid": "6af2b44b-33fb-4750-89f8-052adad80f70"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": \"no\"}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "quality_score": null,   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.39+galaxy2",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-12-02T18:56:23.487973",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using re_match):\n( /tmp/tmp5wbz3m9ltrimmomatic_se_out1.err.re_match v. /tmp/tmpatyw9ibhtrimmomatic_se_out1.err.re_match )\nData File and Regular Expression File contain a different number of lines (5 != 6)\nHistory Data (first 40 lines):\nPicked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 59.196096658706665, "tool_id": "trimmomatic", "tool_version": "0.39+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="37.28174138069153">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="37.35868263244629">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="12.304127931594849">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 12.304127931594849, "tool_id": "trimmomatic", "tool_version": "0.39+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="40.22655415534973">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/94/configs/tmpk964e_qa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #14)" name="13" time="39.56461048126221">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "quality_score": "-phred33",  "readtype|fastq_in": {   "id": "b18f1e18168dfb1f",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/e/3/dataset_fe3ff3a2-d02f-4129-9309-9359f155fa80.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog -phred33 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/b/4/b/dataset_b4bef76c-96aa-4968-8ac1-d14dd4e8fe22.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-12-02T19:03:23.478357",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5bqt4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "52f834f418d81e95",  "id": "52fff47906639af7",  "inputs": {   "readtype|fastq_in": {    "id": "b18f1e18168dfb1f",    "src": "hda",    "uuid": "fe3ff3a2-d02f-4129-9309-9359f155fa80"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1733166206.0000000",    "title": "Job End Time",    "value": "2024-12-02 19:03:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1733166205.0000000",    "title": "Job Start Time",    "value": "2024-12-02 19:03:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "bb63c3f094580ccc",    "src": "hda",    "uuid": "49abf680-a8a5-4b17-9d3a-4e5e9956e746"   },   "fastq_out": {    "id": "63ac60a1efa1cb12",    "src": "hda",    "uuid": "b4bef76c-96aa-4968-8ac1-d14dd4e8fe22"   },   "log_file": {    "id": "68e4f1885b95d81b",    "src": "hda",    "uuid": "16561093-16a1-4620-8e80-535904ceaf8f"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": \"no\"}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "quality_score": "\"-phred33\"",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog -phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.39+galaxy2",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog -phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-12-02T19:03:39.463532",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using re_match):\n( /tmp/tmpmnsqmogitrimmomatic_se_out2.err.re_match v. /tmp/tmpcqelkyt9trimmomatic_se_out2.err.re_match )\nData File and Regular Expression File contain a different number of lines (4 != 5)\nHistory Data (first 40 lines):\nPicked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog -phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 13, "time_seconds": 39.56461048126221, "tool_id": "trimmomatic", "tool_version": "0.39+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog -phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="12.640270471572876">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 12.640270471572876, "tool_id": "trimmomatic", "tool_version": "0.39+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="21.653282165527344">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 21.653282165527344, "tool_id": "trimmomatic", "tool_version": "0.39+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="39.849982261657715">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="40.56989622116089">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="37.05815410614014">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="38.598976850509644">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="39.79594159126282">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="38.076127767562866">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="44.07822394371033">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>