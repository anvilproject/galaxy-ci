{
    "model_class": "Job",
    "id": "4ae68f7d8d7f7c68",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-01T07:17:49.873461",
    "create_time": "2023-12-01T07:17:18.906788",
    "galaxy_version": "23.1",
    "command_version": "",
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "84a887e4d6242290",
    "external_id": "gxy-tnmfh",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/3/6/b/dataset_36bfd787-2f47-4495-9479-5aa987a91d98.dat' && cp '/galaxy/server/database/objects/8/6/5/dataset_865d7027-4281-4652-b454-40bc6626d58c.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/5/1/dataset_a51e6f2f-b4e3-4e4b-b4c0-6467da78bdf9.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/5/1/2/dataset_5128718e-4377-4b1c-8d85-d53b2af9b7c8.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 37: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 313, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "69ca0bd633330a6e",
            "src": "hda",
            "uuid": "5128718e-4377-4b1c-8d85-d53b2af9b7c8"
        },
        "pairstraight|file2": {
            "id": "012ccda965fd15da",
            "src": "hda",
            "uuid": "a51e6f2f-b4e3-4e4b-b4c0-6467da78bdf9"
        },
        "pairstraight|file1": {
            "id": "e2cc48b3e8d6f2b6",
            "src": "hda",
            "uuid": "865d7027-4281-4652-b454-40bc6626d58c"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "75f19d59f64bda9c",
            "src": "hda",
            "uuid": "36bfd787-2f47-4495-9479-5aa987a91d98"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "2c6f7bb956c7fb29",
            "src": "hda",
            "uuid": "c33dd54b-8d5d-400d-ac2b-d2cc8e33e037"
        },
        "observed_bias_3p": {
            "id": "9041994998db1ec3",
            "src": "hda",
            "uuid": "f5ada700-332a-4ad7-b79e-cbd615728ea6"
        },
        "observed_bias": {
            "id": "78e45e5a21f68e7c",
            "src": "hda",
            "uuid": "3afda55a-ea81-4240-b1ff-430f6af80b88"
        },
        "expected_bias": {
            "id": "d3fdce6859b4d89d",
            "src": "hda",
            "uuid": "bccbc5e8-6842-4349-aea6-e4ca13ce7d7e"
        },
        "whitelist_txt": {
            "id": "4cbdbdc035b634e6",
            "src": "hda",
            "uuid": "a2be45f9-9af3-4eb3-b106-74ca45b70b15"
        },
        "featureDump_txt": {
            "id": "bede702d112849b7",
            "src": "hda",
            "uuid": "504bd213-ee5d-4388-8bf8-d4f16facd766"
        },
        "quants_tier_mat": {
            "id": "e4342cc082848f09",
            "src": "hda",
            "uuid": "15371d4c-5216-419e-ba99-1830ebc7063d"
        },
        "quants_mat_rows_txt": {
            "id": "8f3f4487924c6a0b",
            "src": "hda",
            "uuid": "c2f3771f-06e1-44e8-8620-aa3a25a6baca"
        },
        "quants_mat_cols_txt": {
            "id": "c27a779467361b60",
            "src": "hda",
            "uuid": "0a8f62a8-fb2f-45a1-bba7-da35c8738692"
        },
        "raw_cb_frequency_txt": {
            "id": "2b836f4437859968",
            "src": "hda",
            "uuid": "227628de-4072-4ddb-9169-22f5bdad9307"
        },
        "quants_mat_mtx": {
            "id": "79a50eff0b11acd9",
            "src": "hda",
            "uuid": "4d9fb7d5-ba66-4b61-bc32-3458086891e3"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
