{
    "model_class": "Job",
    "id": "6ccc469c1b965878",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-01T07:19:15.009591",
    "create_time": "2023-12-01T07:18:59.745809",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "84a887e4d6242290",
    "external_id": "gxy-xzpw5",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/9/e/7/dataset_9e713ef8-a560-4a9c-8ad9-c49cf88ad26c.dat' && cp '/galaxy/server/database/objects/e/c/f/dataset_ecf7049a-1f30-49a5-b89d-b742cb479393.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/0/9/a/dataset_09a7bd85-21d9-402a-adb1-738c37a7af10.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/2/6/c/dataset_26cb0537-372b-4887-974a-16658bf5627a.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 10: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 347, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 348, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 346, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "2e57f6ad857b40b2",
            "src": "hda",
            "uuid": "26cb0537-372b-4887-974a-16658bf5627a"
        },
        "pairstraight|file2": {
            "id": "1ef57ed69af5df43",
            "src": "hda",
            "uuid": "09a7bd85-21d9-402a-adb1-738c37a7af10"
        },
        "pairstraight|file1": {
            "id": "32f1c3a3c9ad5f6b",
            "src": "hda",
            "uuid": "ecf7049a-1f30-49a5-b89d-b742cb479393"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "b45b026055388931",
            "src": "hda",
            "uuid": "9e713ef8-a560-4a9c-8ad9-c49cf88ad26c"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "88ce5dd837933dbc",
            "src": "hda",
            "uuid": "c2ba6d5e-c962-40bc-be18-40cb13e35964"
        },
        "observed_bias_3p": {
            "id": "0e89696c0ea9d11e",
            "src": "hda",
            "uuid": "48211ff1-e1a5-4eb9-9f84-baea7c5ce28a"
        },
        "observed_bias": {
            "id": "71959ffaf3e703c9",
            "src": "hda",
            "uuid": "2878d8ad-b1c5-4f2c-917e-95f60821db6e"
        },
        "expected_bias": {
            "id": "e4243112445e7c6b",
            "src": "hda",
            "uuid": "61fa8832-13fb-49b0-aa38-a75d1913c75c"
        },
        "whitelist_txt": {
            "id": "48e262003126b331",
            "src": "hda",
            "uuid": "83d9091f-a882-49d1-b48f-5b36d97a58e2"
        },
        "featureDump_txt": {
            "id": "0e82b61d51d47e36",
            "src": "hda",
            "uuid": "e3f5f23c-c4c7-4f51-8974-bb3de5dba3d1"
        },
        "quants_tier_mat": {
            "id": "1eb65703bd36873b",
            "src": "hda",
            "uuid": "dbe459ed-f426-4696-9bdf-ce52d984737a"
        },
        "quants_mat_rows_txt": {
            "id": "748fd1a6c0e8b22c",
            "src": "hda",
            "uuid": "e81aaab1-43fb-4e32-a777-ef7041c0e4ce"
        },
        "quants_mat_cols_txt": {
            "id": "76bfe1120bbeac8e",
            "src": "hda",
            "uuid": "f2835b3d-a92a-485c-a678-9e926f1228c7"
        },
        "raw_cb_frequency_txt": {
            "id": "02e40a6d02bf021f",
            "src": "hda",
            "uuid": "820a05ec-da37-4c17-a505-5913912ab114"
        },
        "quants_mat_mtx": {
            "id": "410be0526ae75b4a",
            "src": "hda",
            "uuid": "2538c5cc-e559-41da-b7df-961098db35a0"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
