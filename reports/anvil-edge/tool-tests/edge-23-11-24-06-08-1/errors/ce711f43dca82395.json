{
    "model_class": "Job",
    "id": "ce711f43dca82395",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-24T07:20:52.180539",
    "create_time": "2023-11-24T07:20:35.833920",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "8a479034ee2f92a6",
    "external_id": "gxy-frptk",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/1/7/6/dataset_176768d3-07ea-4664-a808-eb1faf1207d1.dat' && cp '/galaxy/server/database/objects/9/9/6/dataset_996f9e18-c719-469e-b0e6-617439643357.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/0/a/dataset_10a73139-a9fc-45a9-a567-e596a1cc9f14.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/b/3/d/dataset_b3d4ceb9-53ec-4d79-a33e-e75e076e3e8d.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "4ac1a5333c13f775",
            "src": "hda",
            "uuid": "b3d4ceb9-53ec-4d79-a33e-e75e076e3e8d"
        },
        "pairstraight|file2": {
            "id": "8a37c206d541165d",
            "src": "hda",
            "uuid": "10a73139-a9fc-45a9-a567-e596a1cc9f14"
        },
        "pairstraight|file1": {
            "id": "f34c6bedade419eb",
            "src": "hda",
            "uuid": "996f9e18-c719-469e-b0e6-617439643357"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "990c906064030daa",
            "src": "hda",
            "uuid": "176768d3-07ea-4664-a808-eb1faf1207d1"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "024c54376c757562",
            "src": "hda",
            "uuid": "5d99f795-74f1-47eb-a365-fc7372418437"
        },
        "featureDump_txt": {
            "id": "27ec7ca7a9c1d0dd",
            "src": "hda",
            "uuid": "780da37c-f770-427e-b3dd-1fcb57783a73"
        },
        "quants_tier_mat": {
            "id": "ae8416cf625be303",
            "src": "hda",
            "uuid": "3727026f-85cc-422e-a1f1-6ab148a47fc6"
        },
        "observed_bias_3p": {
            "id": "2eb3a63385b08dd0",
            "src": "hda",
            "uuid": "72dd0f36-6822-48c7-9972-2612465ca524"
        },
        "quants_mat_rows_txt": {
            "id": "147f84453ec781ba",
            "src": "hda",
            "uuid": "65ba85ac-a5d4-4fa5-afe7-129618df0e13"
        },
        "observed_bias": {
            "id": "fcc3cca44ebe876a",
            "src": "hda",
            "uuid": "3897e7eb-3857-4e60-afd0-ebdcb648df34"
        },
        "quants_mat_cols_txt": {
            "id": "0edb3e0cdb6c92f2",
            "src": "hda",
            "uuid": "2516bc80-57cb-4eae-83d1-55720a48318b"
        },
        "raw_cb_frequency_txt": {
            "id": "9b8435f149b26271",
            "src": "hda",
            "uuid": "01eb4259-26f0-467c-bb4b-8ed08c3bc53a"
        },
        "quants_mat_mtx": {
            "id": "815d8dc4da6cf592",
            "src": "hda",
            "uuid": "1ae399e4-85fc-4e76-b234-68ae7a4867d4"
        },
        "expected_bias": {
            "id": "8e09a6e75bf0f7d0",
            "src": "hda",
            "uuid": "9ce221e2-dfc3-4e6d-922f-794b150e4357"
        },
        "whitelist_txt": {
            "id": "6501a80808d20c26",
            "src": "hda",
            "uuid": "479321bd-28a7-416e-8914-9f1c11c65307"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
