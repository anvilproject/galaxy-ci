<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="40"
           errors="0"
           failures="7"
           skip="0">
    
    <testcase classname="bcftools_cnv (Test #1)" name="0" time="81.35913228988647">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #2)" name="1" time="58.07226514816284">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #3)" name="2" time="60.35045599937439">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #4)" name="3" time="57.18803024291992">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #1)" name="0" time="63.4749538898468">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #2)" name="1" time="58.17220592498779">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #1)" name="0" time="59.36093711853027">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #2)" name="1" time="58.432379961013794">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #3)" name="2" time="58.027721881866455">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #4)" name="3" time="57.0512900352478">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #5)" name="4" time="58.70279407501221">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #6)" name="5" time="58.22379994392395">
        
            
            <system-out><![CDATA[
            Due to filtering, 51.08108108108108% of the aforementioned alignments will be used 1115.6108108108108
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000filter_strand: reverseOffset: [1, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #7)" name="6" time="58.09959578514099">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: 242numberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 968filter_strand: NoneOffset: [-4, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #1)" name="0" time="85.79025769233704">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #2)" name="1" time="59.99036645889282">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #3)" name="2" time="60.170454025268555">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="77.744877576828">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="62.28513145446777">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="64.83133506774902">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="65.17782878875732">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="63.45691800117493">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="62.425098180770874">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="61.26139521598816">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="62.41937613487244">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="64.3099262714386">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "41127c2d82d3b620",   "src": "hda"  },  "strategy|deletions": "30",  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20,30 -o output.bam /galaxy/server/database/objects/e/5/0/dataset_e509f56f-65f8-4f02-b5ee-fc49adfe646a.dat",  "command_version": "2.1.5",  "create_time": "2023-12-08T13:24:18.954522",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-q5mph",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "6d133bea027a9c7f",  "inputs": {   "reads": {    "id": "41127c2d82d3b620",    "src": "hda",    "uuid": "e509f56f-65f8-4f02-b5ee-fc49adfe646a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702041901.0000000",    "title": "Job End Time",    "value": "2023-12-08 13:25:01"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702041901.0000000",    "title": "Job Start Time",    "value": "2023-12-08 13:25:01"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3be77bc4bf24ffea",    "src": "hda",    "uuid": "55b655b0-fc5b-497c-b96d-ba684636da13"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"30\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T13:25:12.557583",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmprdrboub4indelqual-out1.bam v. /tmp/tmppvdqg64cindelqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 64.3099262714386, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="59.36452579498291">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "9da950b8c80f3eb5",   "src": "hda"  },  "strategy|reference_source|ref": {   "id": "55431a129bf02145",   "src": "hda"  },  "strategy|reference_source|ref_selector": "history",  "strategy|selector": "dindel" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/7/d/dataset_67d686c4-66d7-4361-a898-e085c0373683.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq indelqual --dindel --ref reference.fa -o output.bam /galaxy/server/database/objects/b/a/5/dataset_ba5fef8d-efde-4cfb-9043-dda8ad2ccc00.dat",  "command_version": "2.1.5",  "create_time": "2023-12-08T13:25:23.746393",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-n74s8",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "1fe9526685aa941e",  "inputs": {   "reads": {    "id": "9da950b8c80f3eb5",    "src": "hda",    "uuid": "ba5fef8d-efde-4cfb-9043-dda8ad2ccc00"   },   "strategy|ref": {    "id": "55431a129bf02145",    "src": "hda",    "uuid": "67d686c4-66d7-4361-a898-e085c0373683"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702041962.0000000",    "title": "Job End Time",    "value": "2023-12-08 13:26:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702041962.0000000",    "title": "Job Start Time",    "value": "2023-12-08 13:26:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "032102e3051ed092",    "src": "hda",    "uuid": "ac29700c-638e-45ff-a387-d38ab57e0653"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 1, \"reference_source\": {\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 103, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}, \"selector\": \"dindel\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T13:26:11.748766",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpudbe5d8oindelqual-out2.bam v. /tmp/tmp0v1opmkqindelqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 59.36452579498291, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="57.2631402015686">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "e04e9cfdb35cb389",   "src": "hda"  },  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/4/3/f/dataset_43f4af05-65cd-4656-b9d0-e53fe0bf0566.dat",  "command_version": "2.1.5",  "create_time": "2023-12-08T13:26:21.791692",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-m7mgf",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "86c94dbeb55fac9c",  "inputs": {   "reads": {    "id": "e04e9cfdb35cb389",    "src": "hda",    "uuid": "43f4af05-65cd-4656-b9d0-e53fe0bf0566"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702042019.0000000",    "title": "Job End Time",    "value": "2023-12-08 13:26:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702042019.0000000",    "title": "Job Start Time",    "value": "2023-12-08 13:26:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "c4f06879d8b10e2e",    "src": "hda",    "uuid": "c5791029-7a20-4d5e-a024-a38abf815564"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T13:27:09.268201",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpnpk8ztvoindelqual-out3.bam v. /tmp/tmpo73gcp1yindelqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 57.2631402015686, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="86.01256251335144">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="87.30895400047302">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="61.95109438896179">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="60.15091514587402">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="60.47889757156372">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "f731b29857530f29",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/7/c/f/dataset_7cf5113c-38c9-4ed5-9aec-2d48aa7fff97.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/9/5/a/dataset_95a9c7ca-6c1a-4022-b884-a638aca3453c.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-12-08T12:56:11.338413",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xxgd7",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "2ddd3afc560aa853",  "inputs": {   "bamfile": {    "id": "f731b29857530f29",    "src": "hda",    "uuid": "7cf5113c-38c9-4ed5-9aec-2d48aa7fff97"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702040212.0000000",    "title": "Job Start Time",    "value": "2023-12-08 12:56:52"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702040212.0000000",    "title": "Job End Time",    "value": "2023-12-08 12:56:52"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "47fa131fc344df2f",    "src": "hda",    "uuid": "95a9c7ca-6c1a-4022-b884-a638aca3453c"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T12:57:01.759919",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 60.47889757156372, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="57.23483872413635">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "716c484e6c1ec6bd",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/8/a/1/dataset_8a14f71b-094c-47fc-80ae-119a60b25321.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/b/5/9/dataset_b59c7b32-98b2-428e-80f7-ed7d20fdc7fe.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-12-08T12:57:12.176250",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-67xsx",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "3d53df2c50233a05",  "inputs": {   "bamfile": {    "id": "716c484e6c1ec6bd",    "src": "hda",    "uuid": "8a14f71b-094c-47fc-80ae-119a60b25321"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702040270.0000000",    "title": "Job Start Time",    "value": "2023-12-08 12:57:50"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702040270.0000000",    "title": "Job End Time",    "value": "2023-12-08 12:57:50"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "791f0322404b3dde",    "src": "hda",    "uuid": "b59c7b32-98b2-428e-80f7-ed7d20fdc7fe"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"true\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T12:57:59.172776",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 57.23483872413635, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="57.25519251823425">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "19e90cd25019168c",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/2/a/dataset_d2a6e6a1-deef-4fd4-a4d2-618a44a02b7b.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/b/7/4/dataset_b7497a94-15c3-4c39-9ed9-efd963635cde.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-12-08T12:58:08.742787",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9qjc7",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "f405e57a574cd0ee",  "inputs": {   "bamfile": {    "id": "19e90cd25019168c",    "src": "hda",    "uuid": "d2a6e6a1-deef-4fd4-a4d2-618a44a02b7b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702040326.0000000",    "title": "Job Start Time",    "value": "2023-12-08 12:58:46"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702040326.0000000",    "title": "Job End Time",    "value": "2023-12-08 12:58:46"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f5335cbc1e3e5152",    "src": "hda",    "uuid": "b7497a94-15c3-4c39-9ed9-efd963635cde"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"true\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T12:58:56.489443",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 57.25519251823425, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="57.30281043052673">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "dd2c843510f8930b",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/3/1/e/dataset_31ef6584-0e14-4d91-be87-922dafc27a57.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/8/6/d/dataset_86d2eb0a-8f2a-44ea-8f0a-1ecab6310d3c.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/b/c/9/dataset_bc9d7eda-f170-4973-bcd3-86b6644d6ef3.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-12-08T12:59:06.193804",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pnmkz",  "galaxy_version": "21.09",  "history_id": "90ee6b5945e2cab9",  "id": "33e2a929394c7e7f",  "inputs": {   "bamfile": {    "id": "dd2c843510f8930b",    "src": "hda",    "uuid": "31ef6584-0e14-4d91-be87-922dafc27a57"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1702040384.0000000",    "title": "Job Start Time",    "value": "2023-12-08 12:59:44"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1702040384.0000000",    "title": "Job End Time",    "value": "2023-12-08 12:59:44"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "c0ab7bb824314756",    "src": "hda",    "uuid": "86d2eb0a-8f2a-44ea-8f0a-1ecab6310d3c"   },   "stats_output": {    "id": "29f892088ca87ef1",    "src": "hda",    "uuid": "bc9d7eda-f170-4973-bcd3-86b6644d6ef3"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"true\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-12-08T12:59:53.686290",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmp7m28hk7ostats.txt v. /tmp/tmpjkksia71stats.txt )\n--- local_file\n+++ history_data\n@@ -1,16 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -s coordsort.sam /tmp/tmpea8lprdd/files/2/2/4/dataset_224df993-f6bf-4c7d-99a1-2e9dd51c2a57.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 57.30281043052673, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sqlite_to_tabular (Test #1)" name="0" time="60.97467279434204">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #1)" name="0" time="63.502583742141724">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #2)" name="1" time="56.21423578262329">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #1)" name="0" time="61.58834671974182">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #2)" name="1" time="63.07221817970276">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>