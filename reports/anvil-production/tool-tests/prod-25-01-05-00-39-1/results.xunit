<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="65"
           errors="9"
           failures="3"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="36.51185441017151">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="30.284009218215942">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #11)" name="10" time="28.785152673721313">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="27.35322594642639">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="28.242465019226074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="30.64848828315735">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="29.964380025863647">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="28.151766300201416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="29.682925701141357">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="31.06640601158142">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #10)" name="9" time="30.787129878997803">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="39.21474266052246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="11.95449447631836">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.95449447631836, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="22.259475231170654">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 22.259475231170654, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="38.735107421875">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="38.43582630157471">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #7)" name="6" time="18.154098510742188">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 18.154098510742188, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="79.62124156951904">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="30.040565013885498">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="28.63308596611023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="30.204941272735596">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="64.61465167999268">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="32.906704902648926">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #1)" name="0" time="44.21671509742737">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #2)" name="1" time="31.911428213119507">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #3)" name="2" time="31.623180150985718">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #4)" name="3" time="32.39338397979736">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #5)" name="4" time="30.486931800842285">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #6)" name="5" time="32.259521484375">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #7)" name="6" time="32.34124970436096">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #8)" name="7" time="33.41290354728699">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #1)" name="0" time="12.059321165084839">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.059321165084839, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #2)" name="1" time="39.117077350616455">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 37,"n_unique": 37,"p_pseudoaligned": 37.0,"p_unique": 37.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:27:50 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --fr-stranded /galaxy/server/database/objects/a/9/b/dataset_a9b00525-48c8-4f82-9eb6-a38be2cf784b.dat /galaxy/server/database/objects/9/3/d/dataset_93dd7607-1e20-40bb-9246-79e61096f41f.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/a/9/b/dataset_a9b00525-48c8-4f82-9eb6-a38be2cf784b.dat                             /galaxy/server/database/objects/9/3/d/dataset_93dd7607-1e20-40bb-9246-79e61096f41f.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 37 reads pseudoaligned[quant] estimated average fragment length: 495.838[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #3)" name="2" time="37.547205686569214">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:28:26 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . /galaxy/server/database/objects/f/e/c/dataset_fec41e6f-8aca-4605-bf2e-cb06edbe841a.dat /galaxy/server/database/objects/2/6/6/dataset_266bcb6b-16d1-49ac-826c-2139f0503f9d.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/f/e/c/dataset_fec41e6f-8aca-4605-bf2e-cb06edbe841a.dat                             /galaxy/server/database/objects/2/6/6/dataset_266bcb6b-16d1-49ac-826c-2139f0503f9d.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[quant] estimated average fragment length: 499.12[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #4)" name="3" time="31.2718026638031">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:28:59 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --single --fragment-length 200 --sd 20 /galaxy/server/database/objects/5/4/5/dataset_54559906-7be9-446f-9ade-40bea69daf05.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/5/4/5/dataset_54559906-7be9-446f-9ade-40bea69daf05.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #5)" name="4" time="37.12322759628296">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 200,"n_pseudoaligned": 200,"n_unique": 200,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:29:34 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --pseudobam -o . /galaxy/server/database/objects/a/2/8/dataset_a288a367-a301-4370-8ffe-9baf1b09d3a1.dat /galaxy/server/database/objects/6/f/8/dataset_6f821601-f1eb-41ef-8353-a327c2f156ed.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 15 contigs and contains 16670 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,670[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/a/2/8/dataset_a288a367-a301-4370-8ffe-9baf1b09d3a1.dat                             /galaxy/server/database/objects/6/f/8/dataset_6f821601-f1eb-41ef-8353-a327c2f156ed.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 200 reads, 200 reads pseudoaligned[quant] estimated average fragment length: 500.01[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds[  bam] writing pseudoalignments to BAM format .. done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #6)" name="5" time="18.238850355148315">
        
            <error type="error" message="parameter 'index': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027index\u0027: an invalid option (None) was selected, please verify", "inputs": {  "pseudobam": true,  "single_paired|forward": {   "id": "69e37f429c4628e0",   "src": "hda"  },  "single_paired|reverse": {   "id": "ab89bde3cf398c5b",   "src": "hda"  },  "single_paired|single_paired_selector": "paired_single" }, "status": "error", "test_index": 5, "time_seconds": 18.238850355148315, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #7)" name="6" time="35.00451111793518">
        
            
            <system-out><![CDATA[
            {"n_targets": 284,"n_bootstraps": 0,"n_processed": 744,"n_pseudoaligned": 368,"n_unique": 263,"p_pseudoaligned": 49.5,"p_unique": 35.3,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:30:29 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --fusion --threads 8 -o . /galaxy/server/database/objects/5/7/3/dataset_573067ee-3f71-4dfa-b60c-4b55619aa18a.dat /galaxy/server/database/objects/0/f/7/dataset_0f788b7f-c428-4891-aed3-69247485c026.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] warning: clipped off poly-A tail (longer than 10)        from 7 target sequences[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1179 contigs and contains 216490 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 284[index] number of k-mers: 216,490[index] number of equivalence classes: 909[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/5/7/3/dataset_573067ee-3f71-4dfa-b60c-4b55619aa18a.dat                             /galaxy/server/database/objects/0/f/7/dataset_0f788b7f-c428-4891-aed3-69247485c026.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 744 reads, 368 reads pseudoaligned[quant] estimated average fragment length: 140.96[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 210 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #8)" name="7" time="43.47182846069336">
        
            
            <system-out><![CDATA[
            {"n_targets": 15,"n_bootstraps": 0,"n_processed": 10000,"n_pseudoaligned": 10000,"n_unique": 6937,"p_pseudoaligned": 100.0,"p_unique": 69.4,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Jan  5 01:31:12 2025","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --genomebam --gtf /galaxy/server/database/objects/7/6/6/dataset_766ca335-7670-4ea2-a900-b09d64061dc7.dat --chromosomes /galaxy/server/database/objects/4/3/4/dataset_43484a7e-8cad-4299-a17a-d2c20dbe9f30.dat /galaxy/server/database/objects/c/5/5/dataset_c5541dac-c123-4feb-a3b7-e02b3d0f3b2c.dat /galaxy/server/database/objects/f/e/a/dataset_fea8ae74-c896-4abd-85bf-14a27634ffce.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 23 contigs and contains 18902 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 15[index] number of k-mers: 18,902[index] number of equivalence classes: 22[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/c/5/5/dataset_c5541dac-c123-4feb-a3b7-e02b3d0f3b2c.dat                             /galaxy/server/database/objects/f/e/a/dataset_fea8ae74-c896-4abd-85bf-14a27634ffce.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 10,000 reads, 10,000 reads pseudoaligned[quant] estimated average fragment length: 178.097[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 62 rounds[  bam] writing pseudoalignments to BAM format .. done[  bam] sorting BAM files .. done[  bam] indexing BAM file .. done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #1)" name="0" time="11.70117449760437">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.70117449760437, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #2)" name="1" time="35.00022745132446">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.91] collected minimizers[M::mm_idx_gen::0.006*1.35] sorted minimizers[M::main::0.006*1.34] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.34] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.33] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.011*1.41] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/6/6/7/dataset_667e612f-9517-4657-86c3-9e2596a3edf9.dat[M::main] Real time: 0.013 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #11)" name="10" time="16.718552827835083">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 16.718552827835083, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #12)" name="11" time="33.51078128814697">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.022*0.85] collected minimizers[M::mm_idx_gen::0.040*1.70] sorted minimizers[M::main::0.040*1.70] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.042*1.67] mid_occ = 62[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.043*1.66] distinct minimizers: 44423 (93.60% are singletons); average occurrences: 1.142; average spacing: 9.827; total length: 498556[M::worker_pipeline::0.083*1.80] mapped 234 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x map-hifi --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/f/6/9/dataset_f699fe0a-25c6-4f9b-a5b9-5b8b98e322f3.dat[M::main] Real time: 0.089 sec; CPU: 0.155 sec; Peak RSS: 0.010 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #13)" name="12" time="34.95905423164368">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.007*0.77] collected minimizers[M::mm_idx_gen::0.011*1.04] sorted minimizers[M::main::0.011*1.04] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.011*1.04] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.011*1.03] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.018*1.10] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -U 10,30 -t 8 -a reference.fa /galaxy/server/database/objects/c/4/1/dataset_c412abfc-d60a-453f-b87a-35625c2fa8b1.dat[M::main] Real time: 0.020 sec; CPU: 0.021 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #3)" name="2" time="36.13143992424011">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.67] collected minimizers[M::mm_idx_gen::0.007*1.34] sorted minimizers[M::main::0.007*1.34] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.007*1.34] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.32] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.020*1.49] mapped 200 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/a/4/5/dataset_a45d2680-ff48-4bf3-bcff-bc75418dd083.dat /galaxy/server/database/objects/0/9/f/dataset_09f35ec8-adc5-45af-9ea7-279f3ce5c182.dat[M::main] Real time: 0.024 sec; CPU: 0.032 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #4)" name="3" time="34.5406231880188">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.68] collected minimizers[M::mm_idx_gen::0.007*1.33] sorted minimizers[M::main::0.007*1.33] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.007*1.33] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.32] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.016*1.36] mapped 200 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/5/5/b/dataset_55bc4d0a-9fa1-40b3-adf4-41e80650885b.dat /galaxy/server/database/objects/7/6/e/dataset_76ed0480-7515-4ba7-99a4-4b7075678123.dat[M::main] Real time: 0.019 sec; CPU: 0.023 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #5)" name="4" time="12.70835256576538">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.70835256576538, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #6)" name="5" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 5, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #8)" name="7" time="34.58630037307739">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.038*0.78] collected minimizers[M::mm_idx_gen::0.056*1.70] sorted minimizers[M::main::0.056*1.69] loaded/built the index for 25 target sequence(s)[M::mm_mapopt_update::0.058*1.67] mid_occ = 10[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25[M::mm_idx_stat::0.060*1.64] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935; total length: 235533[M::worker_pipeline::0.072*1.88] mapped 25 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x ava-ont --q-occ-frac 0.01 -t 8 reference.fa /galaxy/server/database/objects/d/f/3/dataset_df3ca3ca-b855-486c-8d12-333ae96c5f25.dat[M::main] Real time: 0.081 sec; CPU: 0.143 sec; Peak RSS: 0.011 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #9)" name="8" time="32.92534637451172">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.75] collected minimizers[M::mm_idx_gen::0.008*1.19] sorted minimizers[M::main::0.008*1.19] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.008*1.18] mid_occ = 10[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.008*1.18] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057; total length: 30000[M::worker_pipeline::0.031*1.03] mapped 1 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -DP -k19 -w19 -m200 --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/4/7/3/dataset_473c0e31-61e3-43d9-967b-15e1b2cedba2.dat[M::main] Real time: 0.033 sec; CPU: 0.033 sec; Peak RSS: 0.012 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #10)" name="9" time="33.54142689704895">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.006*0.81] collected minimizers[M::mm_idx_gen::0.010*1.27] sorted minimizers[M::main::0.011*1.27] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.011*1.27] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.011*1.24] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.022*1.08] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 --mask-len 100 -t 8 -a reference.fa /galaxy/server/database/objects/a/4/e/dataset_a4eccbe2-fb4c-4afe-9c77-438043d806f5.dat[M::main] Real time: 0.026 sec; CPU: 0.026 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_dnadiff (Test #1)" name="0" time="40.8957257270813">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Building alignmentsFiltering alignmentsExtracting alignment coordinatesAnalyzing SNPsExtracting alignment breakpointsGenerating report file
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #1)" name="0" time="29.521377563476562">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #2)" name="1" time="30.6475191116333">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "coverage": "3",  "format_type|format": "ten",  "format_type|which_base": "first",  "input": {   "id": "0fabfc8b98f67a76",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/9c1c0b947e46/pileup_interval/pileup_interval.py\u0027 --input=/galaxy/server/database/objects/d/c/0/dataset_dc002248-548b-4e52-8462-32fc201607a7.dat --output=/galaxy/server/database/objects/1/c/1/dataset_1c1718bd-9b64-408b-9c29-2ddf92ce0d65.dat --coverage=3 --format=ten --base=first --seq_column=\"None\" --loc_column=\"None\" --base_column=\"None\" --cvrg_column=\"None\"",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-05T01:01:47.000597",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-d89qk",  "galaxy_version": "23.1",  "history_id": "c425a11b59a41a1d",  "id": "58e8d2db79ea681c",  "inputs": {   "input": {    "id": "0fabfc8b98f67a76",    "src": "hda",    "uuid": "dc002248-548b-4e52-8462-32fc201607a7"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "58e8d2db79ea681c",    "src": "hda",    "uuid": "1c1718bd-9b64-408b-9c29-2ddf92ce0d65"   }  },  "params": {   "__input_ext": "\"pileup\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "coverage": "\"3\"",   "dbkey": "\"?\"",   "format_type": "{\"__current_case__\": 1, \"format\": \"ten\", \"which_base\": \"first\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2025-01-05T01:02:01.113652",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 30.6475191116333, "tool_id": "pileup_interval", "tool_version": "1.0.3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #3)" name="2" time="24.85608673095703">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "coverage": "3",  "format_type|base_column": "3",  "format_type|cvrg_column": "8",  "format_type|format": "manual",  "format_type|loc_column": "2",  "format_type|seq_column": "1",  "input": {   "id": "facac7cc90ce40c6",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/9c1c0b947e46/pileup_interval/pileup_interval.py\u0027 --input=/galaxy/server/database/objects/6/5/9/dataset_659594d4-d77c-4cf5-b640-576753dbfe4b.dat --output=/galaxy/server/database/objects/4/8/e/dataset_48e27c35-937b-4f5d-8f78-ab7713ce7c6b.dat --coverage=3 --format=manual --base=\"None\" --seq_column=1 --loc_column=2 --base_column=3 --cvrg_column=8",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-05T01:02:19.746155",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-g4hjw",  "galaxy_version": "23.1",  "history_id": "c425a11b59a41a1d",  "id": "9c369e77ffa6a474",  "inputs": {   "input": {    "id": "facac7cc90ce40c6",    "src": "hda",    "uuid": "659594d4-d77c-4cf5-b640-576753dbfe4b"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9c369e77ffa6a474",    "src": "hda",    "uuid": "48e27c35-937b-4f5d-8f78-ab7713ce7c6b"   }  },  "params": {   "__input_ext": "\"pileup\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "coverage": "\"3\"",   "dbkey": "\"?\"",   "format_type": "{\"__current_case__\": 2, \"base_column\": \"3\", \"cvrg_column\": \"8\", \"format\": \"manual\", \"loc_column\": \"2\", \"seq_column\": \"1\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2025-01-05T01:02:26.018457",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/pileup_interval/pileup_interval/1.0.3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 24.85608673095703, "tool_id": "pileup_interval", "tool_version": "1.0.3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #1)" name="0" time="69.13950252532959">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #2)" name="1" time="42.88075828552246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #1)" name="0" time="29.969953536987305">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "cond_region|input_bed": {   "id": "5116deac0f950f3e",   "src": "hda"  },  "cond_region|select_region": "bed",  "input_bams": {   "id": "d6e7a3838a4c778f",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/0/3/dataset_0037d0df-babb-440e-a6f8-785ce4b75cd8.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/9/3/8/metadata_938f9a0d-d54b-4b10-bee7-0c80dde6222d.dat\u0027 \u00270.bai\u0027 \u0026\u0026   samtools depth  -b \u0027/galaxy/server/database/objects/4/1/f/dataset_41ffdf24-1d86-4e58-9540-a229d392bcad.dat\u0027 0 \u003e \u0027/galaxy/server/database/objects/3/8/5/dataset_385ad49f-ae75-453c-b046-bce283a906af.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-05T01:02:47.459606",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-qdkf7",  "galaxy_version": "23.1",  "history_id": "c425a11b59a41a1d",  "id": "9953b73613430ce9",  "inputs": {   "cond_region|input_bed": {    "id": "5116deac0f950f3e",    "src": "hda",    "uuid": "41ffdf24-1d86-4e58-9540-a229d392bcad"   },   "input_bams": {    "id": "d6e7a3838a4c778f",    "src": "hda",    "uuid": "0037d0df-babb-440e-a6f8-785ce4b75cd8"   },   "input_bams1": {    "id": "d6e7a3838a4c778f",    "src": "hda",    "uuid": "0037d0df-babb-440e-a6f8-785ce4b75cd8"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9953b73613430ce9",    "src": "hda",    "uuid": "385ad49f-ae75-453c-b046-bce283a906af"   }  },  "params": {   "__input_ext": "\"bam\"",   "all": "\"\"",   "basequality": "\"\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cond_region": "{\"__current_case__\": 2, \"input_bed\": {\"values\": [{\"id\": 16, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}",   "dbkey": "\"?\"",   "mapquality": "\"\"",   "maxdepth": "\"\"",   "minlength": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2025-01-05T01:02:56.949977",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 29.969953536987305, "tool_id": "samtools_depth", "tool_version": "1.9"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #2)" name="1" time="29.325514316558838">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #3)" name="2" time="32.92703628540039">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #4)" name="3" time="34.01580357551575">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_rmdup (Test #1)" name="0" time="11.415550231933594">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.415550231933594, "tool_id": "samtools_rmdup", "tool_version": "2.0.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="36.92806315422058">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>