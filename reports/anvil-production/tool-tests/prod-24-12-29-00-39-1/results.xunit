<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="65"
           errors="12"
           failures="1"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="33.90654969215393">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="27.37853193283081">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #11)" name="10" time="27.155213117599487">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="27.897167444229126">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="27.42884349822998">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="29.120094776153564">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="27.377235651016235">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="25.999481916427612">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="28.085084199905396">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="29.062577962875366">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #10)" name="9" time="8.376938819885254">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 8.376938819885254, "tool_id": "bcftools_filter", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="37.288036584854126">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="9.844637632369995">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.844637632369995, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="36.821547985076904">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="36.42806792259216">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="34.7094566822052">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #7)" name="6" time="30.749762058258057">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="22.64273190498352">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 22.64273190498352, "tool_id": "datamash_ops", "tool_version": "1.8+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="55.30053639411926">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="26.184110641479492">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="27.896913051605225">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="52.9473032951355">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="31.9678635597229">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #1)" name="0" time="43.60580849647522">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #2)" name="1" time="29.331157207489014">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #3)" name="2" time="29.706580877304077">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #4)" name="3" time="29.291608095169067">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #5)" name="4" time="30.45941925048828">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #6)" name="5" time="29.92073965072632">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #7)" name="6" time="29.481295347213745">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="freebayes (Test #8)" name="7" time="30.55619192123413">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #1)" name="0" time="36.01981544494629">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Dec 29 01:24:22 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . /galaxy/server/database/objects/c/9/2/dataset_c9251cbb-1d27-40c3-ab3e-88de16729530.dat /galaxy/server/database/objects/d/e/0/dataset_de07a47c-f6b8-4a63-b8b2-87c62bef83bb.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/c/9/2/dataset_c9251cbb-1d27-40c3-ab3e-88de16729530.dat                             /galaxy/server/database/objects/d/e/0/dataset_de07a47c-f6b8-4a63-b8b2-87c62bef83bb.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[quant] estimated average fragment length: 499.12[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #2)" name="1" time="11.412145853042603">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.412145853042603, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #3)" name="2" time="33.799102544784546">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Dec 29 01:25:09 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . /galaxy/server/database/objects/7/d/e/dataset_7de5892f-da38-44fb-9af7-822bd8d2a010.dat /galaxy/server/database/objects/8/4/a/dataset_84a95e45-9530-4af2-8bc9-24b92747e80c.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/7/d/e/dataset_7de5892f-da38-44fb-9af7-822bd8d2a010.dat                             /galaxy/server/database/objects/8/4/a/dataset_84a95e45-9530-4af2-8bc9-24b92747e80c.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[quant] estimated average fragment length: 499.12[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #4)" name="3" time="28.10939121246338">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Sun Dec 29 01:25:37 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --single --fragment-length 200 --sd 20 /galaxy/server/database/objects/3/4/3/dataset_343b5d8e-7dfa-4f14-8677-fe17992ab776.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/3/4/3/dataset_343b5d8e-7dfa-4f14-8677-fe17992ab776.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #5)" name="4" time="17.609764099121094">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.609764099121094, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #6)" name="5" time="16.819880962371826">
        
            <error type="error" message="parameter 'index': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027index\u0027: an invalid option (None) was selected, please verify", "inputs": {  "pseudobam": true,  "single_paired|forward": {   "id": "58bcdd1ea6ae3483",   "src": "hda"  },  "single_paired|reverse": {   "id": "6c89749d353e216b",   "src": "hda"  },  "single_paired|single_paired_selector": "paired_single" }, "status": "error", "test_index": 5, "time_seconds": 16.819880962371826, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #7)" name="6" time="18.447849988937378">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 18.447849988937378, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #8)" name="7" time="20.765431880950928">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 20.765431880950928, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #1)" name="0" time="31.762054204940796">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.76] collected minimizers[M::mm_idx_gen::0.007*1.25] sorted minimizers[M::main::0.007*1.25] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.007*1.25] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.24] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.013*1.23] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/e/2/d/dataset_e2db1ec4-e259-4358-9365-b55436dc0576.dat[M::main] Real time: 0.015 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #2)" name="1" time="29.25448966026306">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*0.79] collected minimizers[M::mm_idx_gen::0.006*1.45] sorted minimizers[M::main::0.006*1.45] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.45] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.43] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.010*1.31] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/6/e/9/dataset_6e954791-4c78-4090-b58d-24ba1e09abac.dat[M::main] Real time: 0.012 sec; CPU: 0.015 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #11)" name="10" time="32.0537211894989">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.029*0.96] collected minimizers[M::mm_idx_gen::0.045*2.49] sorted minimizers[M::main::0.045*2.49] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.047*2.41] mid_occ = 50[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.049*2.37] distinct minimizers: 86298 (91.20% are singletons); average occurrences: 1.212; average spacing: 9.858; total length: 1031372[M::worker_pipeline::0.079*2.32] mapped 234 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x map-hifi --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/d/4/2/dataset_d4208bb9-8f5b-4492-9949-03432bd7488e.dat[M::main] Real time: 0.085 sec; CPU: 0.189 sec; Peak RSS: 0.015 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #12)" name="11" time="31.7016863822937">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.016*0.91] collected minimizers[M::mm_idx_gen::0.025*2.29] sorted minimizers[M::main::0.025*2.29] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.026*2.22] mid_occ = 62[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.027*2.19] distinct minimizers: 44423 (93.60% are singletons); average occurrences: 1.142; average spacing: 9.827; total length: 498556[M::worker_pipeline::0.059*2.12] mapped 234 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x map-hifi --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/0/d/e/dataset_0dee3dc0-152f-4518-8822-18836379f1e8.dat[M::main] Real time: 0.063 sec; CPU: 0.128 sec; Peak RSS: 0.010 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #13)" name="12" time="28.549989223480225">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.71] collected minimizers[M::mm_idx_gen::0.006*1.34] sorted minimizers[M::main::0.006*1.34] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.34] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.33] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.010*1.37] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -U 10,30 -t 8 -a reference.fa /galaxy/server/database/objects/7/a/9/dataset_7a9c6d86-ac6d-4cac-a699-d4030c931539.dat[M::main] Real time: 0.012 sec; CPU: 0.015 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #3)" name="2" time="34.124051094055176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.005*0.73] collected minimizers[M::mm_idx_gen::0.006*1.37] sorted minimizers[M::main::0.006*1.36] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.36] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.007*1.35] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.015*1.22] mapped 200 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/f/b/7/dataset_fb7a854b-271b-4223-81cd-c171467a087e.dat /galaxy/server/database/objects/b/3/7/dataset_b3734ec8-3241-4775-a9e9-f90e80486eba.dat[M::main] Real time: 0.017 sec; CPU: 0.019 sec; Peak RSS: 0.005 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #4)" name="3" time="15.882145404815674">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 15.882145404815674, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #5)" name="4" time="10.174328804016113">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 10.174328804016113, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #6)" name="5" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 5, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "minimap2", "tool_version": "2.28+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #8)" name="7" time="28.144964933395386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.016*0.93] collected minimizers[M::mm_idx_gen::0.030*2.81] sorted minimizers[M::main::0.030*2.81] loaded/built the index for 25 target sequence(s)[M::mm_mapopt_update::0.032*2.70] mid_occ = 10[M::mm_idx_stat] kmer size: 15; skip: 5; is_hpc: 0; #seq: 25[M::mm_idx_stat::0.033*2.65] distinct minimizers: 80111 (99.87% are singletons); average occurrences: 1.002; average spacing: 2.935; total length: 235533[M::worker_pipeline::0.040*2.76] mapped 25 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x ava-ont --q-occ-frac 0.01 -t 8 reference.fa /galaxy/server/database/objects/1/a/e/dataset_1ae29df0-4e96-40a4-b20d-f615a52f82ca.dat[M::main] Real time: 0.048 sec; CPU: 0.117 sec; Peak RSS: 0.012 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #9)" name="8" time="28.16321849822998">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.004*0.98] collected minimizers[M::mm_idx_gen::0.006*1.55] sorted minimizers[M::main::0.006*1.54] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.006*1.52] mid_occ = 10[M::mm_idx_stat] kmer size: 19; skip: 19; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.006*1.50] distinct minimizers: 2920 (98.42% are singletons); average occurrences: 1.022; average spacing: 10.057; total length: 30000[M::worker_pipeline::0.026*1.09] mapped 1 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -DP -k19 -w19 -m200 --q-occ-frac 0.01 -t 8 -a reference.fa /galaxy/server/database/objects/5/7/e/dataset_57e3547b-d195-42b3-bf63-89591cdc3176.dat[M::main] Real time: 0.027 sec; CPU: 0.029 sec; Peak RSS: 0.012 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="minimap2 (Test #10)" name="9" time="29.758731365203857">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::mm_idx_gen::0.006*0.71] collected minimizers[M::mm_idx_gen::0.008*1.18] sorted minimizers[M::main::0.008*1.18] loaded/built the index for 1 target sequence(s)[M::mm_mapopt_update::0.008*1.18] mid_occ = 1000[M::mm_idx_stat] kmer size: 21; skip: 11; is_hpc: 0; #seq: 1[M::mm_idx_stat::0.008*1.18] distinct minimizers: 2777 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.967; total length: 16569[M::worker_pipeline::0.012*1.30] mapped 100 sequences[M::main] Version: 2.28-r1209[M::main] CMD: minimap2 -x sr --q-occ-frac 0.01 --mask-len 100 -t 8 -a reference.fa /galaxy/server/database/objects/9/e/d/dataset_9ede700b-6995-4055-9e89-b44aa3ef7b73.dat[M::main] Real time: 0.014 sec; CPU: 0.017 sec; Peak RSS: 0.004 GB
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_dnadiff (Test #1)" name="0" time="42.706199407577515">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Building alignmentsFiltering alignmentsExtracting alignment coordinatesAnalyzing SNPsExtracting alignment breakpointsGenerating report file
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #1)" name="0" time="9.426326990127563">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 9.426326990127563, "tool_id": "pileup_interval", "tool_version": "1.0.3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #2)" name="1" time="28.306521892547607">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="pileup_interval (Test #3)" name="2" time="27.143136978149414">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #1)" name="0" time="64.20326709747314">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #2)" name="1" time="37.20491814613342">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #1)" name="0" time="29.672784328460693">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "cond_region|input_bed": {   "id": "b04840561970d63a",   "src": "hda"  },  "cond_region|select_region": "bed",  "input_bams": {   "id": "cc3b79a3b2ed470c",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/5/2/dataset_752bdb3f-1147-47d9-9226-090103cc8577.dat\u0027 \u00270\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/f/f/7/metadata_ff777872-1ecf-4b47-bcae-331cd1192beb.dat\u0027 \u00270.bai\u0027 \u0026\u0026   samtools depth  -b \u0027/galaxy/server/database/objects/1/c/3/dataset_1c334be8-4963-4c2f-8cef-7b0a26e78ef3.dat\u0027 0 \u003e \u0027/galaxy/server/database/objects/d/a/5/dataset_da5b7a0a-46c0-46de-83a8-7d7da4795252.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-12-29T01:00:51.468712",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-m5d9c",  "galaxy_version": "23.1",  "history_id": "4fd56c70c7fd5016",  "id": "f38a3c5368f8c8aa",  "inputs": {   "cond_region|input_bed": {    "id": "b04840561970d63a",    "src": "hda",    "uuid": "1c334be8-4963-4c2f-8cef-7b0a26e78ef3"   },   "input_bams": {    "id": "cc3b79a3b2ed470c",    "src": "hda",    "uuid": "752bdb3f-1147-47d9-9226-090103cc8577"   },   "input_bams1": {    "id": "cc3b79a3b2ed470c",    "src": "hda",    "uuid": "752bdb3f-1147-47d9-9226-090103cc8577"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f38a3c5368f8c8aa",    "src": "hda",    "uuid": "da5b7a0a-46c0-46de-83a8-7d7da4795252"   }  },  "params": {   "__input_ext": "\"bam\"",   "all": "\"\"",   "basequality": "\"\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "cond_region": "{\"__current_case__\": 2, \"input_bed\": {\"values\": [{\"id\": 14, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}",   "dbkey": "\"?\"",   "mapquality": "\"\"",   "maxdepth": "\"\"",   "minlength": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-12-29T01:01:02.647516",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_depth/samtools_depth/1.9, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 29.672784328460693, "tool_id": "samtools_depth", "tool_version": "1.9"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #2)" name="1" time="28.804742097854614">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #3)" name="2" time="31.021612644195557">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_depth (Test #4)" name="3" time="12.30536675453186">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 12.30536675453186, "tool_id": "samtools_depth", "tool_version": "1.9"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_rmdup (Test #1)" name="0" time="33.55639934539795">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bam_rmdup_core] processing reference chrM...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="34.95614194869995">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>