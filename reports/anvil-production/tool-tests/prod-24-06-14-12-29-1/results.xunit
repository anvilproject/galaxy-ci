<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="40"
           errors="4"
           failures="8"
           skip="0">
    
    <testcase classname="bcftools_cnv (Test #1)" name="0" time="56.501643896102905">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #2)" name="1" time="27.034661293029785">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #3)" name="2" time="29.37203550338745">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #4)" name="3" time="26.4574031829834">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #1)" name="0" time="30.683789014816284">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #2)" name="1" time="9.69397759437561">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 9.69397759437561, "tool_id": "bcftools_roh", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #1)" name="0" time="27.307697296142578">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #2)" name="1" time="27.14685368537903">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #3)" name="2" time="26.824734210968018">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #4)" name="3" time="28.25703763961792">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #5)" name="4" time="26.262006521224976">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #6)" name="5" time="27.24357843399048">
        
            
            <system-out><![CDATA[
            Due to filtering, 51.08108108108108% of the aforementioned alignments will be used 1115.6108108108108
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000filter_strand: reverseOffset: [1, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #7)" name="6" time="27.58917498588562">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: 242numberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 968filter_strand: NoneOffset: [-4, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #1)" name="0" time="51.04599618911743">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #2)" name="1" time="8.774969816207886">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 8.774969816207886, "tool_id": "deeptools_compute_matrix", "tool_version": "3.3.2.0.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #3)" name="2" time="28.340263843536377">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="41.08047366142273">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="29.541823148727417">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="24.702033042907715">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adapters": {   "id": "c771958a39cc26f2",   "src": "hda"  },  "input_file": {   "id": "39b0547784fb6232",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/8/f/dataset_78f71c2f-f3cd-41fc-b251-434293766d79.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/objects/e/8/4/dataset_e84a5b38-2c23-4845-a348-9479db43c4a4_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/objects/e/8/4/dataset_e84a5b38-2c23-4845-a348-9479db43c4a4_files\u0027  --adapters \u0027/galaxy/server/database/objects/5/3/1/dataset_531890fe-2403-499a-a994-527c3bc51cd9.dat\u0027  --threads ${GALAXY_SLOTS:-2} --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/objects/e/8/4/dataset_e84a5b38-2c23-4845-a348-9479db43c4a4_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/objects/e/8/4/dataset_e84a5b38-2c23-4845-a348-9479db43c4a4_files\u0027/*\\.html output.html",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-06-14T12:47:41.590649",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-ptbtt",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "39b0547784fb6232",  "inputs": {   "adapters": {    "id": "c771958a39cc26f2",    "src": "hda",    "uuid": "531890fe-2403-499a-a994-527c3bc51cd9"   },   "input_file": {    "id": "39b0547784fb6232",    "src": "hda",    "uuid": "78f71c2f-f3cd-41fc-b251-434293766d79"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "49f515ab055b89be",    "src": "hda",    "uuid": "e84a5b38-2c23-4845-a348-9479db43c4a4"   },   "text_file": {    "id": "7a4898101da21c60",    "src": "hda",    "uuid": "290b2fe8-8ba9-4c9c-af1f-5b76837b45af"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contaminants": null,   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T12:47:48.761616",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 24.702033042907715, "tool_id": "fastqc", "tool_version": "0.73+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="29.596912384033203">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="29.337551832199097">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="29.781938552856445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="31.359983682632446">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="29.492851734161377">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="32.77810597419739">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "1ecb5275d98e419e",   "src": "hda"  },  "strategy|deletions": "30",  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20,30 -o output.bam /galaxy/server/database/objects/6/f/c/dataset_6fcebfe7-eb3a-498c-bb21-8d01d6e47644.dat",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-06-14T13:03:51.567216",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pkrdp",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "a37f7c5d7140dab5",  "inputs": {   "reads": {    "id": "1ecb5275d98e419e",    "src": "hda",    "uuid": "6fcebfe7-eb3a-498c-bb21-8d01d6e47644"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718370237.0000000",    "title": "Job End Time",    "value": "2024-06-14 13:03:57"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718370237.0000000",    "title": "Job Start Time",    "value": "2024-06-14 13:03:57"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12240.0000000",    "title": "Memory Allocated (MB)",    "value": "12240"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "45027c68e9a39f6c",    "src": "hda",    "uuid": "3f84c6f4-8277-488c-906f-e6c4f894eb31"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"30\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T13:04:07.436757",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpythbtrikindelqual-out1.bam v. /tmp/tmp160fzp5zindelqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 32.77810597419739, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="28.6997709274292">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "9ad360524c934737",   "src": "hda"  },  "strategy|reference_source|ref": {   "id": "94df565ad96db5f1",   "src": "hda"  },  "strategy|reference_source|ref_selector": "history",  "strategy|selector": "dindel" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/a/a/f/dataset_aaf9f033-bcb0-4d06-b7da-2d7ba1b597e4.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq indelqual --dindel --ref reference.fa -o output.bam /galaxy/server/database/objects/6/c/b/dataset_6cb1e878-1761-457e-8ca1-96d62bea825e.dat",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-06-14T13:04:24.947201",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2rkmm",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "e29c9cb8e98ea378",  "inputs": {   "reads": {    "id": "9ad360524c934737",    "src": "hda",    "uuid": "6cb1e878-1761-457e-8ca1-96d62bea825e"   },   "strategy|reference_source|ref": {    "id": "94df565ad96db5f1",    "src": "hda",    "uuid": "aaf9f033-bcb0-4d06-b7da-2d7ba1b597e4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718370266.0000000",    "title": "Job End Time",    "value": "2024-06-14 13:04:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718370266.0000000",    "title": "Job Start Time",    "value": "2024-06-14 13:04:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12240.0000000",    "title": "Memory Allocated (MB)",    "value": "12240"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "1e316bda44437b68",    "src": "hda",    "uuid": "90f0fc88-dd80-410f-888f-84878ef7c852"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 1, \"reference_source\": {\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 100, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}, \"selector\": \"dindel\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T13:04:36.065265",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp5exoj6udindelqual-out2.bam v. /tmp/tmplc0zme4vindelqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 28.6997709274292, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="26.631816387176514">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "1cf6a796137890ca",   "src": "hda"  },  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/b/b/d/dataset_bbde2206-6441-4b50-8fc0-20fa62aacf16.dat",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-06-14T13:04:51.604809",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5tr67",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "1673f455c871e16e",  "inputs": {   "reads": {    "id": "1cf6a796137890ca",    "src": "hda",    "uuid": "bbde2206-6441-4b50-8fc0-20fa62aacf16"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718370294.0000000",    "title": "Job End Time",    "value": "2024-06-14 13:04:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718370294.0000000",    "title": "Job Start Time",    "value": "2024-06-14 13:04:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12240.0000000",    "title": "Memory Allocated (MB)",    "value": "12240"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f9b02c8b3ad754f5",    "src": "hda",    "uuid": "69d8dcf3-3e2f-4037-a1f7-2addc94079a5"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T13:05:02.809341",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp4e4ugq_xindelqual-out3.bam v. /tmp/tmp2pobd9cbindelqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 26.631816387176514, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="15.450012683868408">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 15.450012683868408, "tool_id": "mummer_nucmer", "tool_version": "4.0.0beta2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="53.09504961967468">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="29.529892444610596">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="10.880154609680176">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.880154609680176, "tool_id": "poretools_hist", "tool_version": "0.6.1a1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="29.886532306671143">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "1d9ad3064b8c3455",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/4/c/3/dataset_4c3ec6d3-1e56-4db3-a522-59a9f9b4d52a.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/2/2/5/dataset_22539391-bc32-4758-ab43-243b897d91a2.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-06-14T12:50:35.329602",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tkqxn",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "b6f07926d2a882e8",  "inputs": {   "bamfile": {    "id": "1d9ad3064b8c3455",    "src": "hda",    "uuid": "4c3ec6d3-1e56-4db3-a522-59a9f9b4d52a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718369440.0000000",    "title": "Job Start Time",    "value": "2024-06-14 12:50:40"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718369440.0000000",    "title": "Job End Time",    "value": "2024-06-14 12:50:40"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0939fd54f19c7a18",    "src": "hda",    "uuid": "22539391-bc32-4758-ab43-243b897d91a2"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T12:50:49.478856",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 29.886532306671143, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="28.278595447540283">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "235f0ebc37312273",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/e/9/9/dataset_e99438d9-59a3-4313-ab87-e5190f2b1196.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/2/6/f/dataset_26fbe0ce-9cd3-49af-b503-782fd52fa42d.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-06-14T12:51:05.949260",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qs4ps",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "4d6a2e4068ee3df3",  "inputs": {   "bamfile": {    "id": "235f0ebc37312273",    "src": "hda",    "uuid": "e99438d9-59a3-4313-ab87-e5190f2b1196"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718369468.0000000",    "title": "Job Start Time",    "value": "2024-06-14 12:51:08"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718369468.0000000",    "title": "Job End Time",    "value": "2024-06-14 12:51:08"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "767c2f2b46856006",    "src": "hda",    "uuid": "26fbe0ce-9cd3-49af-b503-782fd52fa42d"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "true",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T12:51:17.876277",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 28.278595447540283, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="26.341155767440796">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "280808567f8f5cd2",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/2/c/dataset_12cc90d9-fef1-46e4-bead-8ee17cb4b078.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/3/2/1/dataset_3215db4e-fbbc-4756-9690-99512132aec3.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-06-14T12:51:33.692482",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fpzqc",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "882780ac5233afa9",  "inputs": {   "bamfile": {    "id": "280808567f8f5cd2",    "src": "hda",    "uuid": "12cc90d9-fef1-46e4-bead-8ee17cb4b078"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718369495.0000000",    "title": "Job End Time",    "value": "2024-06-14 12:51:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718369495.0000000",    "title": "Job Start Time",    "value": "2024-06-14 12:51:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9a75128d43c02cb1",    "src": "hda",    "uuid": "3215db4e-fbbc-4756-9690-99512132aec3"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "true"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T12:51:44.330850",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 26.341155767440796, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="27.52510380744934">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "b1ca41003a7a0758",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/5/2/2/dataset_5221ccc5-964f-43c5-a51c-7bfa0cbe18c7.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/4/e/5/dataset_4e58955a-7aef-4538-a3f4-8c2482c575ba.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/2/b/a/dataset_2ba125ea-de79-4a41-af00-0bf12debd591.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-06-14T12:51:59.783493",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hkk2t",  "galaxy_version": "23.1",  "history_id": "a5ba768a955f0a11",  "id": "b4412ae7551d85d3",  "inputs": {   "bamfile": {    "id": "b1ca41003a7a0758",    "src": "hda",    "uuid": "5221ccc5-964f-43c5-a51c-7bfa0cbe18c7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718369522.0000000",    "title": "Job End Time",    "value": "2024-06-14 12:52:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718369522.0000000",    "title": "Job Start Time",    "value": "2024-06-14 12:52:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3182fcf0e78cc140",    "src": "hda",    "uuid": "4e58955a-7aef-4538-a3f4-8c2482c575ba"   },   "stats_output": {    "id": "1d91b5832fc2b858",    "src": "hda",    "uuid": "2ba125ea-de79-4a41-af00-0bf12debd591"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "true",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-14T12:52:11.757727",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmp7pfeiqs5stats.txt v. /tmp/tmp6nwmcvqestats.txt )\n--- local_file\n+++ history_data\n@@ -1,16 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -s coordsort.sam /tmp/tmpea8lprdd/files/2/2/4/dataset_224df993-f6bf-4c7d-99a1-2e9dd51c2a57.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 27.52510380744934, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sqlite_to_tabular (Test #1)" name="0" time="63.07608437538147">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #1)" name="0" time="32.397841453552246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #2)" name="1" time="27.107166528701782">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #1)" name="0" time="32.291311502456665">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #2)" name="1" time="30.182125568389893">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>