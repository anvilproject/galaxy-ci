<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="61"
           errors="1"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_plugin_counts (Test #1)" name="0" time="131.1285891532898">
        
            
            <system-out><![CDATA[
            Number of samples: 3Number of SNPs:    11Number of INDELs:  3Number of MNPs:    0Number of others:  0Number of sites:   15
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #1)" name="0" time="126.15683269500732">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #2)" name="1" time="122.43130445480347">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #11)" name="10" time="124.56963276863098">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #3)" name="2" time="122.39737963676453">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #4)" name="3" time="125.26203393936157">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #5)" name="4" time="122.23753023147583">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #6)" name="5" time="124.42251396179199">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #7)" name="6" time="123.43749523162842">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #8)" name="7" time="125.05977487564087">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #9)" name="8" time="124.28112173080444">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #10)" name="9" time="122.19926619529724">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_transpose (Test #1)" name="0" time="143.11808133125305">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #1)" name="0" time="151.30731391906738">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 5numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 5center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #2)" name="1" time="124.2051169872284">
        
            
            <system-out><![CDATA[
            Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 10numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #1)" name="0" time="123.76492261886597">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 200,"n_pseudoaligned": 200,"n_unique": 200,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Nov 11 14:41:44 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . --batch /galaxy/server/database/jobs_directory/000/125/configs/tmpivxngj_5 --umi"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/3/2/7/dataset_3272a964-c316-4907-91b7-34f85350fb95.dat[quant] will process file 1: /galaxy/server/database/objects/3/2/7/dataset_3272a964-c316-4907-91b7-34f85350fb95.dat[quant] finding pseudoalignments for all files ... done[quant] processed 200 reads, 200 reads pseudoaligned, 200 unique UMIs mapped
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #2)" name="1" time="128.69432854652405">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Nov 11 14:43:54 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . /galaxy/server/database/objects/8/2/2/dataset_822c3da7-319e-4fde-ba9a-dec07bdff443.dat /galaxy/server/database/objects/6/d/7/dataset_6d733442-be89-4bd1-bf7a-27ed08a281ba.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/8/2/2/dataset_822c3da7-319e-4fde-ba9a-dec07bdff443.dat                             /galaxy/server/database/objects/6/d/7/dataset_6d733442-be89-4bd1-bf7a-27ed08a281ba.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #3)" name="2" time="124.03372168540955">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Nov 11 14:45:58 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . --single --fragment-length 200 --sd 20 /galaxy/server/database/objects/e/c/b/dataset_ecb8fcd6-c1a1-4f36-9747-28ac3bd15259.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/e/c/b/dataset_ecb8fcd6-c1a1-4f36-9747-28ac3bd15259.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #4)" name="3" time="131.81133460998535">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 200,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Nov 11 14:48:09 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . /galaxy/server/database/objects/e/7/d/dataset_e7d1c29e-8844-4769-914e-238eebc60b1c.dat /galaxy/server/database/objects/7/2/5/dataset_72526620-05c5-4ca7-8ff8-debb3c023e1b.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 15 contigs and contains 16670 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,670[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/e/7/d/dataset_e7d1c29e-8844-4769-914e-238eebc60b1c.dat                             /galaxy/server/database/objects/7/2/5/dataset_72526620-05c5-4ca7-8ff8-debb3c023e1b.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 200 reads, 200 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #5)" name="4" time="10.820912837982178">
        
            <error type="error" message="parameter 'index': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027index\u0027: an invalid option (None) was selected, please verify", "inputs": {  "single_paired|collection|collection_selector": "datasets",  "single_paired|collection|fastq_umi|forward": {   "id": "b167bbbe10fc64af",   "src": "hda"  },  "single_paired|collection|fastq_umi|reverse": {   "id": "70c9c8756733ff0c",   "src": "hda"  },  "single_paired|collection|fastq_umi|umi": "yes",  "single_paired|single_paired_selector": "paired" }, "status": "error", "test_index": 4, "time_seconds": 10.820912837982178, "tool_id": "kallisto_pseudo", "tool_version": "0.46.0.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="129.4935700893402">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "9cac7b7fcd355a0e",   "src": "hda"  },  "reference_source|ref": {   "id": "c660a4efdf8fad5f",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/a/0/dataset_3a03f16f-699f-4a84-877a-19add9120a20.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/7/8/a/dataset_78acc113-bdb7-4353-9210-79a5ebee0658.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/e/e/5/dataset_ee5ad8f8-1e76-406a-9f17-fce94ec689bd.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-11-11T14:29:37.945094",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xsh2z",  "galaxy_version": "21.09",  "history_id": "a84ef7be58ecd2db",  "id": "7f0ed96bacd41d59",  "inputs": {   "reads": {    "id": "9cac7b7fcd355a0e",    "src": "hda",    "uuid": "78acc113-bdb7-4353-9210-79a5ebee0658"   },   "ref": {    "id": "c660a4efdf8fad5f",    "src": "hda",    "uuid": "3a03f16f-699f-4a84-877a-19add9120a20"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699713084.0000000",    "title": "Job End Time",    "value": "2023-11-11 14:31:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699713084.0000000",    "title": "Job Start Time",    "value": "2023-11-11 14:31:24"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "e9bc1868b08147b9",    "src": "hda",    "uuid": "ee5ad8f8-1e76-406a-9f17-fce94ec689bd"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-11T14:31:35.522282",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpakupogqnalnqual-out1.bam v. /tmp/tmpt40s8_g5alnqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 129.4935700893402, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="123.91312789916992">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-B",  "reads": {   "id": "f919604893f612d3",   "src": "hda"  },  "reference_source|ref": {   "id": "249a5c6fab5fb08a",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/4/8/dataset_e4836918-3858-4d5f-8d55-aa6feef19b1b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -B  \u0027/galaxy/server/database/objects/d/3/6/dataset_d369a20a-85e0-420a-aff1-a9b9cdd864eb.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/c/b/d/dataset_cbd7950b-1341-48bb-89ae-1a7dd78a881c.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-11-11T14:31:48.171551",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bx7v7",  "galaxy_version": "21.09",  "history_id": "a84ef7be58ecd2db",  "id": "22c93674a0c0a0d7",  "inputs": {   "reads": {    "id": "f919604893f612d3",    "src": "hda",    "uuid": "d369a20a-85e0-420a-aff1-a9b9cdd864eb"   },   "ref": {    "id": "249a5c6fab5fb08a",    "src": "hda",    "uuid": "e4836918-3858-4d5f-8d55-aa6feef19b1b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699713210.0000000",    "title": "Job End Time",    "value": "2023-11-11 14:33:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699713210.0000000",    "title": "Job Start Time",    "value": "2023-11-11 14:33:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "dfd1dc6304a701dd",    "src": "hda",    "uuid": "cbd7950b-1341-48bb-89ae-1a7dd78a881c"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-11T14:33:39.676946",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpc6q29q8palnqual-out2.bam v. /tmp/tmpgh1s6yykalnqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 123.91312789916992, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="124.38399171829224">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "bac90fd2d9199cf0",   "src": "hda"  },  "reference_source|ref": {   "id": "c7e2d49a2b6a4f9b",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/7/7/dataset_277ac88d-783d-4892-8527-183308c62bf5.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/a/8/2/dataset_a82aa2b8-a6b0-4d5d-a6b7-e3219b318720.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/3/3/9/dataset_33953a3d-9a28-4330-9b5b-6167a042b504.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-11-11T14:33:51.753058",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-z2wlk",  "galaxy_version": "21.09",  "history_id": "a84ef7be58ecd2db",  "id": "62b8a4cdb6e48e7b",  "inputs": {   "reads": {    "id": "bac90fd2d9199cf0",    "src": "hda",    "uuid": "a82aa2b8-a6b0-4d5d-a6b7-e3219b318720"   },   "ref": {    "id": "c7e2d49a2b6a4f9b",    "src": "hda",    "uuid": "277ac88d-783d-4892-8527-183308c62bf5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699713335.0000000",    "title": "Job End Time",    "value": "2023-11-11 14:35:35"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699713334.0000000",    "title": "Job Start Time",    "value": "2023-11-11 14:35:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "5a39d0da00134a12",    "src": "hda",    "uuid": "33953a3d-9a28-4330-9b5b-6167a042b504"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 181, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-11T14:35:44.138748",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmptcdh6ewwalnqual-out3.bam v. /tmp/tmpeus8gjqsalnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 124.38399171829224, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="123.29189324378967">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "0ce65324c289542c",   "src": "hda"  },  "reference_source|ref": {   "id": "0a88fab453f6d878",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/4/c/5/dataset_4c506195-cad1-47d3-8585-d642d62d0b89.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/f/5/7/dataset_f572b9e1-b0c2-466a-b237-5effa241c7c7.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/b/2/8/dataset_b28afae6-c2a2-4a8c-98df-b78de4ad205f.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-11-11T14:35:56.584519",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wfr4g",  "galaxy_version": "21.09",  "history_id": "a84ef7be58ecd2db",  "id": "9f1bc027ad69c2f9",  "inputs": {   "reads": {    "id": "0ce65324c289542c",    "src": "hda",    "uuid": "f572b9e1-b0c2-466a-b237-5effa241c7c7"   },   "ref": {    "id": "0a88fab453f6d878",    "src": "hda",    "uuid": "4c506195-cad1-47d3-8585-d642d62d0b89"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699713458.0000000",    "title": "Job End Time",    "value": "2023-11-11 14:37:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699713458.0000000",    "title": "Job Start Time",    "value": "2023-11-11 14:37:38"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "70b80c5bf627f2aa",    "src": "hda",    "uuid": "b28afae6-c2a2-4a8c-98df-b78de4ad205f"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"false\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-11T14:37:47.528329",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpgx3_06mpalnqual-out4.bam v. /tmp/tmp132okyvzalnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 123.29189324378967, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="123.4144606590271">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "3d5fbed43450a85c",   "src": "hda"  },  "reference_source|ref": {   "id": "1200775256d0bffd",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/c/b/a/dataset_cbafbaeb-e916-42f1-9e00-3eb30f31fce2.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/a/3/8/dataset_a385e0da-b7ce-44e3-a6a6-d08955097194.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/d/c/f/dataset_dcf9f969-705c-485e-9b40-86cbbbe03ec3.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-11-11T14:37:58.866878",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rl5sz",  "galaxy_version": "21.09",  "history_id": "a84ef7be58ecd2db",  "id": "e4f57340ced3d409",  "inputs": {   "reads": {    "id": "3d5fbed43450a85c",    "src": "hda",    "uuid": "a385e0da-b7ce-44e3-a6a6-d08955097194"   },   "ref": {    "id": "1200775256d0bffd",    "src": "hda",    "uuid": "cbafbaeb-e916-42f1-9e00-3eb30f31fce2"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699713582.0000000",    "title": "Job End Time",    "value": "2023-11-11 14:39:42"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699713581.0000000",    "title": "Job Start Time",    "value": "2023-11-11 14:39:41"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "d0eb402fd544fe1d",    "src": "hda",    "uuid": "dcf9f969-705c-485e-9b40-86cbbbe03ec3"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 187, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-11T14:39:50.947641",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp_6_c6qqwalnqual-out5.bam v. /tmp/tmp6581z3v7alnqual-out5.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 4, "time_seconds": 123.4144606590271, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_show_coords (Test #1)" name="0" time="136.53454971313477">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualpos (Test #1)" name="0" time="152.52295088768005">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:poreminion:Processing data...INFO:poreminion:Constructing box plot...INFO:poreminion:Writing plot to file...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualpos (Test #2)" name="1" time="123.27086591720581">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:poreminion:Processing data...INFO:poreminion:Constructing box plot...INFO:poreminion:Writing plot to file...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="121.56582856178284">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="121.76138615608215">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="125.05550479888916">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="128.15647506713867">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="125.35253024101257">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="126.83162999153137">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="128.32223391532898">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="124.32080149650574">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="125.77107548713684">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="128.48260235786438">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="122.29215693473816">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="121.84662342071533">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="123.07073497772217">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="127.01823806762695">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="125.14666271209717">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="126.01570224761963">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="124.4012336730957">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="125.96578097343445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="128.35230827331543">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="123.76108431816101">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="124.72095084190369">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #1)" name="0" time="156.414776802063">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/4/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera0CTGTCTCTTATA20.00smallRNA0TGGAATTCTCGG20.00Illumina0AGATCGGAAGAGC20.00Unable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count smallRNA: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/4/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (2749 us/read; 0.02 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #2)" name="1" time="138.5042712688446">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/6/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera0CTGTCTCTTATA20.00smallRNA0TGGAATTCTCGG20.00Illumina0AGATCGGAAGAGC20.00Unable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count smallRNA: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/6/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (7494 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #3)" name="2" time="133.21264719963074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/8/working/Writing report to '/galaxy/server/database/jobs_directory/000/8/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (1662 us/read; 0.04 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #4)" name="3" time="125.47595429420471">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/10/working/Writing report to '/galaxy/server/database/jobs_directory/000/10/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (7741 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #5)" name="4" time="122.4892566204071">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/12/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera0CTGTCTCTTATA20.00smallRNA0TGGAATTCTCGG20.00Illumina0AGATCGGAAGAGC20.00Unable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count smallRNA: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/12/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (1731 us/read; 0.03 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #6)" name="5" time="127.21426582336426">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/14/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera0CTGTCTCTTATA20.00Illumina0AGATCGGAAGAGC20.00smallRNA0TGGAATTCTCGG20.00Unable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count Illumina: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/14/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (7640 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #7)" name="6" time="123.38417673110962">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/17/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/17/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (53 us/read; 1.14 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/17/working/input_2.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (83 us/read; 0.73 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq and input_2_trimmed.fqfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fqWriting validated paired-end read 2 reads to input_2_val_2.fqTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #8)" name="7" time="124.42869782447815">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/20/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/20/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (168 us/read; 0.36 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/20/working/input_2.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (163 us/read; 0.37 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gzfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fq.gzWriting validated paired-end read 2 reads to input_2_val_2.fq.gzTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #9)" name="8" time="124.46858477592468">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/23/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29smallRNA0TGGAATTCTCGG990.00Illumina0AGATCGGAAGAGC990.00Using Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/23/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Cutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (56 us/read; 1.08 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/23/working/input_2.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Cutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (72 us/read; 0.83 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq and input_2_trimmed.fqfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fqWriting validated paired-end read 2 reads to input_2_val_2.fqWriting unpaired read 1 reads to input_1_unpaired_1.fqWriting unpaired read 2 reads to input_2_unpaired_2.fqTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #10)" name="9" time="125.34729337692261">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/26/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/26/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Output file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (166 us/read; 0.36 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/26/working/input_2.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Output file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (165 us/read; 0.36 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gzfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fq.gzWriting validated paired-end read 2 reads to input_2_val_2.fq.gzWriting unpaired read 1 reads to input_1_unpaired_1.fq.gzWriting unpaired read 2 reads to input_2_unpaired_2.fq.gzTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcheck (Test #1)" name="0" time="129.93149542808533">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfdistance (Test #1)" name="0" time="122.34076499938965">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>