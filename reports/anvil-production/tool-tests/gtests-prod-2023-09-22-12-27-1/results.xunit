<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="40"
           errors="0"
           failures="8"
           skip="0">
    
    <testcase classname="bcftools_cnv (Test #1)" name="0" time="143.69827890396118">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #2)" name="1" time="118.04964995384216">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #3)" name="2" time="123.30273485183716">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #4)" name="3" time="118.27584266662598">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #1)" name="0" time="125.27101969718933">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #2)" name="1" time="119.8180832862854">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #1)" name="0" time="123.09474444389343">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #2)" name="1" time="120.45119333267212">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #3)" name="2" time="118.14727330207825">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #4)" name="3" time="125.12482643127441">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #5)" name="4" time="124.6040427684784">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #6)" name="5" time="119.95185422897339">
        
            
            <system-out><![CDATA[
            Due to filtering, 51.08108108108108% of the aforementioned alignments will be used 1115.6108108108108
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000filter_strand: reverseOffset: [1, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #7)" name="6" time="125.33281087875366">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: 242numberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 968filter_strand: NoneOffset: [-4, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #1)" name="0" time="155.800945520401">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #2)" name="1" time="126.09093046188354">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #3)" name="2" time="121.47494578361511">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="139.00688791275024">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="125.0836009979248">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="127.48710560798645">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="123.15781950950623">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="123.60951280593872">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="129.27744841575623">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="128.4109752178192">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="126.49874210357666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="132.1475191116333">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "b5fcbc5aec6e264f",   "src": "hda"  },  "strategy|deletions": "30",  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20,30 -o output.bam /galaxy/server/database/objects/f/b/5/dataset_fb54cbec-32a4-495f-9cf8-894446156e09.dat",  "command_version": "2.1.5",  "create_time": "2023-09-22T14:00:21.512141",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qw7cq",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "70235449458e51af",  "inputs": {   "reads": {    "id": "b5fcbc5aec6e264f",    "src": "hda",    "uuid": "fb54cbec-32a4-495f-9cf8-894446156e09"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695391333.0000000",    "title": "Job End Time",    "value": "2023-09-22 14:02:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695391332.0000000",    "title": "Job Start Time",    "value": "2023-09-22 14:02:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "fb6a482782031ba7",    "src": "hda",    "uuid": "f6b2006f-b8e4-42aa-a74c-c02d91e041e2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"30\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T14:02:23.081927",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmptzfbz_yvindelqual-out1.bam v. /tmp/tmp_fbrwofnindelqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 132.1475191116333, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="120.56507635116577">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "68d024370970fae9",   "src": "hda"  },  "strategy|reference_source|ref": {   "id": "4429bbf5be7dc1f5",   "src": "hda"  },  "strategy|reference_source|ref_selector": "history",  "strategy|selector": "dindel" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/5/a/dataset_05ab2a88-9eab-4612-aa2e-1f65cc712329.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq indelqual --dindel --ref reference.fa -o output.bam /galaxy/server/database/objects/a/5/9/dataset_a59447a2-fb08-430b-b4fd-0a7822998de4.dat",  "command_version": "2.1.5",  "create_time": "2023-09-22T14:02:34.829772",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kl95x",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "6e91a061628f5c0a",  "inputs": {   "reads": {    "id": "68d024370970fae9",    "src": "hda",    "uuid": "a59447a2-fb08-430b-b4fd-0a7822998de4"   },   "strategy|ref": {    "id": "4429bbf5be7dc1f5",    "src": "hda",    "uuid": "05ab2a88-9eab-4612-aa2e-1f65cc712329"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695391454.0000000",    "title": "Job End Time",    "value": "2023-09-22 14:04:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695391454.0000000",    "title": "Job Start Time",    "value": "2023-09-22 14:04:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "bc3ec60153a086c3",    "src": "hda",    "uuid": "77b93180-4410-468b-8cb7-5efac0257276"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 1, \"reference_source\": {\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 103, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}, \"selector\": \"dindel\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T14:04:23.616024",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp3v20tuzlindelqual-out2.bam v. /tmp/tmphdz8ze03indelqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 120.56507635116577, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="121.97843217849731">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "d1d63b1b34e96514",   "src": "hda"  },  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/b/6/8/dataset_b6817802-7183-4d5a-9912-e29c184f89b1.dat",  "command_version": "2.1.5",  "create_time": "2023-09-22T14:04:34.685840",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-c465s",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "1626816e88009f2a",  "inputs": {   "reads": {    "id": "d1d63b1b34e96514",    "src": "hda",    "uuid": "b6817802-7183-4d5a-9912-e29c184f89b1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695391577.0000000",    "title": "Job End Time",    "value": "2023-09-22 14:06:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695391577.0000000",    "title": "Job Start Time",    "value": "2023-09-22 14:06:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "47a63cc4045626e8",    "src": "hda",    "uuid": "675bebb6-03a4-4ec2-b7d8-9a30221babb6"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T14:06:25.827032",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpt8ckt3aaindelqual-out3.bam v. /tmp/tmp9b5ajqikindelqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 121.97843217849731, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="149.8930470943451">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="149.90473127365112">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="132.4089903831482">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="122.09969210624695">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="124.84233951568604">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "51abd7963870c407",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/f/b/3/dataset_fb3a722d-97cc-4a1d-b6c8-7aec082bf711.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/f/9/8/dataset_f98d0bb5-8ff7-454c-befb-c34d5e926229.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-09-22T13:04:00.485056",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xhkdb",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "ccbe94f9fdf87c33",  "inputs": {   "bamfile": {    "id": "51abd7963870c407",    "src": "hda",    "uuid": "fb3a722d-97cc-4a1d-b6c8-7aec082bf711"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695387946.0000000",    "title": "Job Start Time",    "value": "2023-09-22 13:05:46"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695387946.0000000",    "title": "Job End Time",    "value": "2023-09-22 13:05:46"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "2ed85d5529a17e43",    "src": "hda",    "uuid": "f98d0bb5-8ff7-454c-befb-c34d5e926229"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T13:05:55.445077",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 124.84233951568604, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="118.04133224487305">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "03cb8948a5f3e634",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/2/b/1/dataset_2b1ac772-ddf3-4cbd-9b7a-51fce2080af9.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/5/4/f/dataset_54f6cfd3-4a8d-44b5-b411-01f6bac10497.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-09-22T13:06:05.628450",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-tb8m4",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "15d6a56298569e93",  "inputs": {   "bamfile": {    "id": "03cb8948a5f3e634",    "src": "hda",    "uuid": "2b1ac772-ddf3-4cbd-9b7a-51fce2080af9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695388064.0000000",    "title": "Job Start Time",    "value": "2023-09-22 13:07:44"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695388064.0000000",    "title": "Job End Time",    "value": "2023-09-22 13:07:44"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0f09f77e73fd2bfd",    "src": "hda",    "uuid": "54f6cfd3-4a8d-44b5-b411-01f6bac10497"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"true\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T13:07:53.770172",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 118.04133224487305, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="121.33174324035645">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "025b4a6c66622c0f",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/3/a/d/dataset_3ad7ae30-8886-48a3-a9a4-cff1c901ec00.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/2/d/6/dataset_2d6728d3-8f9b-4eaf-824b-a28e7367e948.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-09-22T13:08:04.052944",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bn5bn",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "7332fa834899290b",  "inputs": {   "bamfile": {    "id": "025b4a6c66622c0f",    "src": "hda",    "uuid": "3ad7ae30-8886-48a3-a9a4-cff1c901ec00"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695388185.0000000",    "title": "Job Start Time",    "value": "2023-09-22 13:09:45"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695388185.0000000",    "title": "Job End Time",    "value": "2023-09-22 13:09:45"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0f495e84443d49e8",    "src": "hda",    "uuid": "2d6728d3-8f9b-4eaf-824b-a28e7367e948"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"true\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T13:09:55.091313",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 121.33174324035645, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="123.60549640655518">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "e88dc1a40e230cfc",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/b/c/d/dataset_bcd552ad-3d5b-4079-9ed1-369549c792bd.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/1/d/9/dataset_1d95f9ba-0cb1-44c4-9a9a-28b16ec431c8.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/a/7/7/dataset_a77cb342-b9ba-4e1b-b1e6-5014f7b97f3f.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-09-22T13:10:04.830412",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jq2l4",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "03cf49d9466c9da7",  "inputs": {   "bamfile": {    "id": "e88dc1a40e230cfc",    "src": "hda",    "uuid": "bcd552ad-3d5b-4079-9ed1-369549c792bd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695388308.0000000",    "title": "Job Start Time",    "value": "2023-09-22 13:11:48"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695388309.0000000",    "title": "Job End Time",    "value": "2023-09-22 13:11:49"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "816625ff69ef4d7d",    "src": "hda",    "uuid": "1d95f9ba-0cb1-44c4-9a9a-28b16ec431c8"   },   "stats_output": {    "id": "e5beebfe1958168b",    "src": "hda",    "uuid": "a77cb342-b9ba-4e1b-b1e6-5014f7b97f3f"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"true\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T13:11:58.538040",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmpr47ogtjhstats.txt v. /tmp/tmpwx9vq60fstats.txt )\n--- local_file\n+++ history_data\n@@ -1,16 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -s coordsort.sam /tmp/tmpea8lprdd/files/2/2/4/dataset_224df993-f6bf-4c7d-99a1-2e9dd51c2a57.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 123.60549640655518, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sqlite_to_tabular (Test #1)" name="0" time="129.13766264915466">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #1)" name="0" time="124.77262377738953">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #2)" name="1" time="83.63725066184998">
        
            
                <error type="error" message="Tool exit code: 127"><![CDATA[
                    { "inputs": {  "bed_vs_interval|bed_vs_interval_selector": "interval",  "bed_vs_interval|int_input": "20:1-30000",  "invert": false,  "vcf_input": {   "id": "ab87f66ef7c0c49e",   "src": "hda"  } }, "job": {  "command_line": "vcfintersect -R \u002720:1-30000\u0027  \u0027/galaxy/server/database/objects/5/a/7/dataset_5a77eb8b-64dc-487b-a4e9-8ffc4a81410d.dat\u0027 \u003e \u0027/galaxy/server/database/objects/8/e/f/dataset_8efb1509-ac48-4eb0-839e-c3560ef7e0ff.dat\u0027",  "command_version": "",  "create_time": "2023-09-22T13:26:46.243343",  "dependencies": [],  "exit_code": 127,  "external_id": "gxy-rv2qt",  "galaxy_version": "21.09",  "history_id": "0b3f50bd4e0b607f",  "id": "7eb20895f871104d",  "inputs": {   "vcf_input": {    "id": "ab87f66ef7c0c49e",    "src": "hda",    "uuid": "5a77eb8b-64dc-487b-a4e9-8ffc4a81410d"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 127 ()",    "error_level": 3,    "exit_code": 127,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1695389272.0000000",    "title": "Job Start Time",    "value": "2023-09-22 13:27:52"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1695389272.0000000",    "title": "Job End Time",    "value": "2023-09-22 13:27:52"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "/galaxy/server/database/jobs_directory/000/47/tool_script.sh: line 22: vcfintersect: command not found\n",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file1": {    "id": "756ba49de1458e92",    "src": "hda",    "uuid": "8efb1509-ac48-4eb0-839e-c3560ef7e0ff"   }  },  "params": {   "__input_ext": "\"vcf\"",   "bed_vs_interval": "{\"__current_case__\": 1, \"bed_vs_interval_selector\": \"interval\", \"int_input\": \"20:1-30000\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "invert": "\"false\""  },  "state": "error",  "stderr": "\n/galaxy/server/database/jobs_directory/000/47/tool_script.sh: line 22: vcfintersect: command not found\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfbedintersect/vcfbedintersect/1.0.0_rc3+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-09-22T13:28:00.710314",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfbedintersect/vcfbedintersect/1.0.0_rc3+galaxy0, exit_code: 127, stderr: \n/galaxy/server/database/jobs_directory/000/47/tool_script.sh: line 22: vcfintersect: command not found\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfbedintersect/vcfbedintersect/1.0.0_rc3+galaxy0, exit_code: 127, stderr: \n/galaxy/server/database/jobs_directory/000/47/tool_script.sh: line 22: vcfintersect: command not found\n." ], "status": "failure", "test_index": 1, "time_seconds": 83.63725066184998, "tool_id": "vcfbedintersect", "tool_version": "1.0.0_rc3+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            /galaxy/server/database/jobs_directory/000/47/tool_script.sh: line 22: vcfintersect: command not found
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #1)" name="0" time="134.5322241783142">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #2)" name="1" time="124.30461502075195">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>