<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="61"
           errors="1"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_plugin_counts (Test #1)" name="0" time="122.3672227859497">
        
            
            <system-out><![CDATA[
            Number of samples: 3Number of SNPs:    11Number of INDELs:  3Number of MNPs:    0Number of others:  0Number of sites:   15
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #1)" name="0" time="117.04288363456726">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #2)" name="1" time="109.92976236343384">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #11)" name="10" time="109.39904356002808">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #3)" name="2" time="112.30163192749023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #4)" name="3" time="111.23214745521545">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #5)" name="4" time="110.15190196037292">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #6)" name="5" time="111.00132775306702">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #7)" name="6" time="111.55104470252991">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #8)" name="7" time="110.24576783180237">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #9)" name="8" time="113.68073320388794">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #10)" name="9" time="114.25656366348267">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_transpose (Test #1)" name="0" time="113.83215880393982">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #1)" name="0" time="141.356849193573">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 5numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 5center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #2)" name="1" time="113.0814049243927">
        
            
            <system-out><![CDATA[
            Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 10numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #1)" name="0" time="119.92124342918396">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 200,"n_pseudoaligned": 200,"n_unique": 200,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Aug 12 14:29:40 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . --batch /galaxy/server/database/jobs_directory/000/125/configs/tmpa4nk_tph --umi"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/a/d/c/dataset_adc79a4e-dee8-4186-8abf-a90645532a36.dat[quant] will process file 1: /galaxy/server/database/objects/a/d/c/dataset_adc79a4e-dee8-4186-8abf-a90645532a36.dat[quant] finding pseudoalignments for all files ... done[quant] processed 200 reads, 200 reads pseudoaligned, 200 unique UMIs mapped
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #2)" name="1" time="117.77355360984802">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Aug 12 14:31:38 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . /galaxy/server/database/objects/9/f/4/dataset_9f417ae9-5896-4431-9b04-7426959ad286.dat /galaxy/server/database/objects/3/f/a/dataset_3fa1cbd7-55b6-4d45-a154-be080509ddc8.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/9/f/4/dataset_9f417ae9-5896-4431-9b04-7426959ad286.dat                             /galaxy/server/database/objects/3/f/a/dataset_3fa1cbd7-55b6-4d45-a154-be080509ddc8.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #3)" name="2" time="115.17259693145752">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Aug 12 14:33:33 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . --single --fragment-length 200 --sd 20 /galaxy/server/database/objects/f/0/c/dataset_f0cadea0-7e87-461e-8f39-134a10d6bb0f.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/f/0/c/dataset_f0cadea0-7e87-461e-8f39-134a10d6bb0f.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #4)" name="3" time="118.54686331748962">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 200,"n_pseudoaligned": 0,"n_unique": 0,"p_pseudoaligned": 0.0,"p_unique": 0.0,"kallisto_version": "0.46.0","index_version": 10,"start_time": "Sat Aug 12 14:35:32 2023","call": "kallisto pseudo -i reference.kallisto --threads 1 -o . /galaxy/server/database/objects/6/8/6/dataset_6860f8b1-6087-45e0-8e83-5ee818dab9bc.dat /galaxy/server/database/objects/a/3/f/dataset_a3fb63cd-2b06-4566-bb8c-04b383a0b1e9.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 15 contigs and contains 16670 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,670[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/6/8/6/dataset_6860f8b1-6087-45e0-8e83-5ee818dab9bc.dat                             /galaxy/server/database/objects/a/3/f/dataset_a3fb63cd-2b06-4566-bb8c-04b383a0b1e9.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 200 reads, 200 reads pseudoaligned
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_pseudo (Test #5)" name="4" time="10.66778039932251">
        
            <error type="error" message="parameter 'index': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027index\u0027: an invalid option (None) was selected, please verify", "inputs": {  "single_paired|collection|collection_selector": "datasets",  "single_paired|collection|fastq_umi|forward": {   "id": "248cc7c2f422fb8f",   "src": "hda"  },  "single_paired|collection|fastq_umi|reverse": {   "id": "77dca93bd7785d7f",   "src": "hda"  },  "single_paired|collection|fastq_umi|umi": "yes",  "single_paired|single_paired_selector": "paired" }, "status": "error", "test_index": 4, "time_seconds": 10.66778039932251, "tool_id": "kallisto_pseudo", "tool_version": "0.46.0.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="119.02954387664795">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "3d97476876be53db",   "src": "hda"  },  "reference_source|ref": {   "id": "e7a11ec8e828509e",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/2/a/dataset_52a7af22-fe2d-4c04-a0dd-8c25cfb4c71d.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/4/0/2/dataset_40260d8d-9a3a-421b-894b-0eb6a2262384.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/b/2/2/dataset_b2288cce-f007-4d77-a639-a143319b264c.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-08-12T14:18:26.714231",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-v2rz5",  "galaxy_version": "21.09",  "history_id": "c520fc4c9e4b47e7",  "id": "5ec17af483051ff1",  "inputs": {   "reads": {    "id": "3d97476876be53db",    "src": "hda",    "uuid": "40260d8d-9a3a-421b-894b-0eb6a2262384"   },   "ref": {    "id": "e7a11ec8e828509e",    "src": "hda",    "uuid": "52a7af22-fe2d-4c04-a0dd-8c25cfb4c71d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1691850002.0000000",    "title": "Job End Time",    "value": "2023-08-12 14:20:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1691850002.0000000",    "title": "Job Start Time",    "value": "2023-08-12 14:20:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "30a2b95d72a8907a",    "src": "hda",    "uuid": "b2288cce-f007-4d77-a639-a143319b264c"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-08-12T14:20:13.244901",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpvsr93u10alnqual-out1.bam v. /tmp/tmpd2qinqmwalnqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 119.02954387664795, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="115.03878474235535">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-B",  "reads": {   "id": "32e19a6413b522ff",   "src": "hda"  },  "reference_source|ref": {   "id": "ca25fbdd553b0666",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/c/6/dataset_5c650e81-7763-4362-ab55-7aa9e9f6472a.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -B  \u0027/galaxy/server/database/objects/e/6/6/dataset_e6685137-73fc-4e13-b713-d6d36ef434d5.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/d/b/3/dataset_db334eb0-0ba1-40dd-9c6e-fc6d1f0444f7.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-08-12T14:20:26.994439",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xvlxg",  "galaxy_version": "21.09",  "history_id": "c520fc4c9e4b47e7",  "id": "6e7bbb79c0f95cf7",  "inputs": {   "reads": {    "id": "32e19a6413b522ff",    "src": "hda",    "uuid": "e6685137-73fc-4e13-b713-d6d36ef434d5"   },   "ref": {    "id": "ca25fbdd553b0666",    "src": "hda",    "uuid": "5c650e81-7763-4362-ab55-7aa9e9f6472a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1691850119.0000000",    "title": "Job End Time",    "value": "2023-08-12 14:21:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1691850119.0000000",    "title": "Job Start Time",    "value": "2023-08-12 14:21:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3733b5977917aea2",    "src": "hda",    "uuid": "db334eb0-0ba1-40dd-9c6e-fc6d1f0444f7"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 178, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-08-12T14:22:08.521574",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpjpe5r27galnqual-out2.bam v. /tmp/tmpa7zh3pm0alnqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 115.03878474235535, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="114.61193895339966">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "be3ef15a96b91a2c",   "src": "hda"  },  "reference_source|ref": {   "id": "66dc1b592797f9e2",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/c/a/dataset_bca9822c-bbbb-415c-bbc7-628dbf6b9541.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/4/a/d/dataset_4ad33a61-62c2-45ba-a132-d7f35d78756b.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/3/4/e/dataset_34ecd1b6-8457-4481-9a2a-6c39acbb0f40.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-08-12T14:22:21.593503",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5tmsd",  "galaxy_version": "21.09",  "history_id": "c520fc4c9e4b47e7",  "id": "a9aa94f4fb371283",  "inputs": {   "reads": {    "id": "be3ef15a96b91a2c",    "src": "hda",    "uuid": "4ad33a61-62c2-45ba-a132-d7f35d78756b"   },   "ref": {    "id": "66dc1b592797f9e2",    "src": "hda",    "uuid": "bca9822c-bbbb-415c-bbc7-628dbf6b9541"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1691850233.0000000",    "title": "Job End Time",    "value": "2023-08-12 14:23:53"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1691850233.0000000",    "title": "Job Start Time",    "value": "2023-08-12 14:23:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "491e76e7421f814b",    "src": "hda",    "uuid": "34ecd1b6-8457-4481-9a2a-6c39acbb0f40"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 181, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-08-12T14:24:02.920154",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpsc_wxp_2alnqual-out3.bam v. /tmp/tmpib3ywvpkalnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 114.61193895339966, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="113.07477259635925">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "b51cbdd27d56b39e",   "src": "hda"  },  "reference_source|ref": {   "id": "1742a7b21f497bec",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/4/6/3/dataset_463e14ad-4eed-4790-831b-c9ae99fa8c06.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/b/3/b/dataset_b3b7463b-1597-47a4-9821-603c7f144782.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/f/3/f/dataset_f3f6c4bb-859e-480a-ac59-83eda89e2682.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-08-12T14:24:16.013058",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8rkgt",  "galaxy_version": "21.09",  "history_id": "c520fc4c9e4b47e7",  "id": "22c96d25924af0c1",  "inputs": {   "reads": {    "id": "b51cbdd27d56b39e",    "src": "hda",    "uuid": "b3b7463b-1597-47a4-9821-603c7f144782"   },   "ref": {    "id": "1742a7b21f497bec",    "src": "hda",    "uuid": "463e14ad-4eed-4790-831b-c9ae99fa8c06"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1691850346.0000000",    "title": "Job End Time",    "value": "2023-08-12 14:25:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1691850346.0000000",    "title": "Job Start Time",    "value": "2023-08-12 14:25:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "b80a49b7695aea23",    "src": "hda",    "uuid": "f3f6c4bb-859e-480a-ac59-83eda89e2682"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"false\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-08-12T14:25:56.197216",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp_e1ejnq1alnqual-out4.bam v. /tmp/tmpvp_ms079alnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 113.07477259635925, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="112.70502042770386">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "0472d5e7279d3183",   "src": "hda"  },  "reference_source|ref": {   "id": "5887340190de0692",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/4/7/dataset_9470c821-bc3d-496f-b209-01f4f579173c.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/6/0/6/dataset_6068b8e8-a46a-4202-99e9-e2ca1e012dd8.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/2/f/b/dataset_2fbb2c52-85fd-453c-b414-f6efb6617fa6.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-08-12T14:26:09.101789",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rhwp8",  "galaxy_version": "21.09",  "history_id": "c520fc4c9e4b47e7",  "id": "a94996b70bf6297a",  "inputs": {   "reads": {    "id": "0472d5e7279d3183",    "src": "hda",    "uuid": "6068b8e8-a46a-4202-99e9-e2ca1e012dd8"   },   "ref": {    "id": "5887340190de0692",    "src": "hda",    "uuid": "9470c821-bc3d-496f-b209-01f4f579173c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1691850460.0000000",    "title": "Job End Time",    "value": "2023-08-12 14:27:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1691850459.0000000",    "title": "Job Start Time",    "value": "2023-08-12 14:27:39"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "48ee280c391ca203",    "src": "hda",    "uuid": "2fbb2c52-85fd-453c-b414-f6efb6617fa6"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "\"false\"",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 187, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-08-12T14:27:49.480831",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpr8yrr70oalnqual-out5.bam v. /tmp/tmpzna9gcwpalnqual-out5.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 4, "time_seconds": 112.70502042770386, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_show_coords (Test #1)" name="0" time="115.35251927375793">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualpos (Test #1)" name="0" time="142.7270679473877">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:poreminion:Processing data...INFO:poreminion:Constructing box plot...INFO:poreminion:Writing plot to file...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualpos (Test #2)" name="1" time="113.42505478858948">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            INFO:poreminion:Processing data...INFO:poreminion:Constructing box plot...INFO:poreminion:Writing plot to file...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="114.20474600791931">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="112.57438611984253">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="114.11854982376099">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="115.45492839813232">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="115.9929678440094">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="115.15428256988525">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="115.38298535346985">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="114.25379776954651">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="116.85998702049255">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="117.34588956832886">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="112.36147332191467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="113.69568848609924">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="114.18226599693298">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="113.64756393432617">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="114.08605074882507">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="112.92403650283813">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="113.44227409362793">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="115.80410766601562">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="115.81078004837036">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="112.06896781921387">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="112.23996019363403">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #1)" name="0" time="130.32715606689453">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/4/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentagesmallRNA0TGGAATTCTCGG20.00Illumina0AGATCGGAAGAGC20.00Nextera0CTGTCTCTTATA20.00Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/4/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (1912 us/read; 0.03 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #2)" name="1" time="111.2151460647583">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/6/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentagesmallRNA0TGGAATTCTCGG20.00Nextera0CTGTCTCTTATA20.00Illumina0AGATCGGAAGAGC20.00Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Nextera: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/6/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (7344 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #3)" name="2" time="111.1836748123169">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/8/working/Writing report to '/galaxy/server/database/jobs_directory/000/8/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (1565 us/read; 0.04 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #4)" name="3" time="111.02782201766968">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/10/working/Writing report to '/galaxy/server/database/jobs_directory/000/10/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; user defined)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (7757 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #5)" name="4" time="111.08747816085815">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/12/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentagesmallRNA0TGGAATTCTCGG20.00Illumina0AGATCGGAAGAGC20.00Nextera0CTGTCTCTTATA20.00Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/12/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (1621 us/read; 0.04 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #6)" name="5" time="108.90575575828552">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/14/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera0CTGTCTCTTATA20.00Illumina0AGATCGGAAGAGC20.00smallRNA0TGGAATTCTCGG20.00Unable to auto-detect most prominent adapter from the first specified file (count Nextera: 0, count Illumina: 0)Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).Writing report to '/galaxy/server/database/jobs_directory/000/14/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: single-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length before a sequence gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (7206 us/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       2Reads with adapters:                         1 (50.0%)Reads written (passing filters):             2 (100.0%)Total basepairs processed:           188 bpQuality-trimmed:                      20 bp (10.6%)Total written (filtered):            167 bp (88.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times.No. of allowed errors:0-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts110.501RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================2 sequences processed in totalSequences removed because they became shorter than the length cutoff of 20 bp:0 (0.0%)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #7)" name="6" time="112.76156425476074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/17/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/17/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (44 us/read; 1.38 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/17/working/input_2.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (71 us/read; 0.85 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq and input_2_trimmed.fqfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fqWriting validated paired-end read 2 reads to input_2_val_2.fqTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #8)" name="7" time="114.84821653366089">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/20/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29smallRNA0TGGAATTCTCGG990.00Illumina0AGATCGGAAGAGC990.00Using Nextera adapter for trimming (count: 29). Second best hit was smallRNA (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/20/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (165 us/read; 0.36 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/20/working/input_2.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpOutput file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (164 us/read; 0.37 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gzfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fq.gzWriting validated paired-end read 2 reads to input_2_val_2.fq.gzTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #9)" name="8" time="116.07199692726135">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/23/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/23/working/input_1.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Cutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.00 s (49 us/read; 1.21 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/23/working/input_2.fastq_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastqTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Cutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastqProcessing reads on 1 core in single-end mode ...Finished in 0.01 s (65 us/read; 0.92 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq and input_2_trimmed.fqfile_1: input_1_trimmed.fq, file_2: input_2_trimmed.fq>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq and input_2_trimmed.fq <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fqWriting validated paired-end read 2 reads to input_2_val_2.fqWriting unpaired read 1 reads to input_1_unpaired_1.fqWriting unpaired read 2 reads to input_2_unpaired_2.fqTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq and input_2_trimmed.fq====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trim_galore (Test #10)" name="9" time="116.75959157943726">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Multicore support not enabled. Proceeding with single-core trimming.Path to Cutadapt set as: 'cutadapt' (default)Cutadapt seems to be working fine (tested command 'cutadapt --version')Cutadapt version: 2.3single-core operation.Output will be written into the directory: /galaxy/server/database/jobs_directory/000/26/working/AUTO-DETECTING ADAPTER TYPE===========================Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)Found perfect matches for the following adapter sequences:Adapter typeCountSequenceSequences analysedPercentageNextera29CTGTCTCTTATA9929.29Illumina0AGATCGGAAGAGC990.00smallRNA0TGGAATTCTCGG990.00Using Nextera adapter for trimming (count: 29). Second best hit was Illumina (count: 0)Writing report to '/galaxy/server/database/jobs_directory/000/26/working/input_1.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_1.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Output file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j 1Writing final adapter and quality trimmed output to input_1_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_1.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_1.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (165 us/read; 0.36 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        52 (52.5%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     205 bp (0.8%)Total written (filtered):         23,339 bp (93.9%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 52 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 9.6%  C: 38.5%  G: 23.1%  T: 28.8%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11124.8011256.205331.503430.4031210.0111320.0121410.0111610.0111710.010 12020.0122110.0112410.0112620.0123110.0113310.0114120.0124910.0115010.0115410.0115610.0115820.0126010.0116720.0126810.0116910.0117310.0118010.0118610.011RUN STATISTICS FOR INPUT FILE: input_1.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Writing report to '/galaxy/server/database/jobs_directory/000/26/working/input_2.fastq.gz_trimming_report.txt'SUMMARISING RUN PARAMETERS==========================Input filename: input_2.fastq.gzTrimming mode: paired-endTrim Galore version: 0.6.3Cutadapt version: 2.3Number of cores used for trimming: 1Quality Phred score cutoff: 20Quality encoding type selected: ASCII+33Adapter sequence: 'CTGTCTCTTATA' (Nextera Transposase sequence; auto-detected)Maximum trimming error rate: 0.1 (default)Minimum required adapter overlap (stringency): 1 bpMinimum required sequence length for both reads before a sequence pair gets removed: 20 bpLength cut-off for read 1: 35 bp (default)Length cut-off for read 2: 35 bb (default)Output file(s) will be GZIP compressedCutadapt seems to be fairly up-to-date (version 2.3). Setting -j -j 1Writing final adapter and quality trimmed output to input_2_trimmed.fq.gz  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'CTGTCTCTTATA' from file input_2.fastq.gz <<< This is cutadapt 2.3 with Python 3.7.3Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a CTGTCTCTTATA input_2.fastq.gzProcessing reads on 1 core in single-end mode ...Finished in 0.02 s (174 us/read; 0.34 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                        58 (58.6%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     745 bp (3.0%)Total written (filtered):         23,035 bp (92.7%)=== Adapter 1 ===Sequence: CTGTCTCTTATA; Type: regular 3'; Length: 12; Trimmed: 58 times.No. of allowed errors:0-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 12.1%  C: 37.9%  G: 8.6%  T: 41.4%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts11624.8016276.207311.501420.402620.002910.0011010.0111310.0111420.0121510.0111610.0111710.0111920.0122110.0112510.0113010.0113220.0123410.0113620.0123810.0114010.0114110.0114210.0114310.0114910.0115110.0115610.0115710.0116010.0116710.0118010.011RUN STATISTICS FOR INPUT FILE: input_2.fastq.gz=============================================99 sequences processed in totalThe length threshold of paired-end sequences gets evaluated later on (in the validation step)Validate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gzfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<Writing validated paired-end read 1 reads to input_1_val_1.fq.gzWriting validated paired-end read 2 reads to input_2_val_2.fq.gzWriting unpaired read 1 reads to input_1_unpaired_1.fq.gzWriting unpaired read 2 reads to input_2_unpaired_2.fq.gzTotal number of sequences analysed: 99Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1 (1.01%)Deleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz====================================================================================================
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcheck (Test #1)" name="0" time="118.99180674552917">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfdistance (Test #1)" name="0" time="113.48690414428711">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>