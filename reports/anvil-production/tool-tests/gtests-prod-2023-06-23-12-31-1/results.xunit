<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="40"
           errors="0"
           failures="7"
           skip="0">
    
    <testcase classname="bcftools_cnv (Test #1)" name="0" time="119.82079672813416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #2)" name="1" time="96.4646475315094">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #3)" name="2" time="100.26894521713257">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #4)" name="3" time="97.32705855369568">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #1)" name="0" time="104.29751753807068">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #2)" name="1" time="94.94369649887085">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8888Number of lines filtered/no AF/not biallelic/dup: 0/0/1/1
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #1)" name="0" time="98.63659763336182">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #2)" name="1" time="97.65347743034363">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #3)" name="2" time="97.52502369880676">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #4)" name="3" time="97.29405498504639">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #5)" name="4" time="95.91167521476746">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #6)" name="5" time="97.6350998878479">
        
            
            <system-out><![CDATA[
            Due to filtering, 51.08108108108108% of the aforementioned alignments will be used 1115.6108108108108
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000filter_strand: reverseOffset: [1, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #7)" name="6" time="96.30122780799866">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: 242numberOfProcessors: 4verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 968filter_strand: NoneOffset: [-4, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #1)" name="0" time="124.52719831466675">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #2)" name="1" time="99.3657078742981">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #3)" name="2" time="98.3033607006073">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="116.54482507705688">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="102.07270979881287">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="106.38576340675354">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="102.09693574905396">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="102.75811862945557">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="104.08253812789917">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="103.29956412315369">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="102.58457088470459">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="102.06927514076233">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "57e1d92d391a524a",   "src": "hda"  },  "strategy|deletions": "30",  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20,30 -o output.bam /galaxy/server/database/objects/4/c/e/dataset_4ce1ef8c-02de-493d-a0eb-1281c1ef7d58.dat",  "command_version": "2.1.5",  "create_time": "2023-06-23T13:51:00.069499",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p9c84",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "22cd3bbae18026b3",  "inputs": {   "reads": {    "id": "57e1d92d391a524a",    "src": "hda",    "uuid": "4ce1ef8c-02de-493d-a0eb-1281c1ef7d58"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687528343.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:52:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687528343.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:52:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "1fa93d09fa208d9e",    "src": "hda",    "uuid": "f75e4d66-8aae-48d2-89b2-18afed72f185"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"30\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:52:32.922709",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpf1w7lyctindelqual-out1.bam v. /tmp/tmpu_oo0rubindelqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 102.06927514076233, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="97.2415759563446">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "2e2ac3a954239a69",   "src": "hda"  },  "strategy|reference_source|ref": {   "id": "3e7c660102014fce",   "src": "hda"  },  "strategy|reference_source|ref_selector": "history",  "strategy|selector": "dindel" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/8/9/dataset_6893331f-6d69-4641-a5c7-c8dd86df7142.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq indelqual --dindel --ref reference.fa -o output.bam /galaxy/server/database/objects/3/1/9/dataset_319626cc-6eb9-4271-80fe-8241736910d8.dat",  "command_version": "2.1.5",  "create_time": "2023-06-23T13:52:43.365427",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b5jsh",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "e46b43e466e8e490",  "inputs": {   "reads": {    "id": "2e2ac3a954239a69",    "src": "hda",    "uuid": "319626cc-6eb9-4271-80fe-8241736910d8"   },   "strategy|ref": {    "id": "3e7c660102014fce",    "src": "hda",    "uuid": "6893331f-6d69-4641-a5c7-c8dd86df7142"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687528442.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:54:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687528442.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:54:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "68ed5bbc5d69a267",    "src": "hda",    "uuid": "af137f99-5c3c-46bd-a25a-2c9d151ed56b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 1, \"reference_source\": {\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 103, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}, \"selector\": \"dindel\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:54:10.429580",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmprhs_4pjhindelqual-out2.bam v. /tmp/tmpehb3cjszindelqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 97.2415759563446, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="95.03816986083984">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "039c490a3d4364ab",   "src": "hda"  },  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/b/9/9/dataset_b992e45c-dbb7-43d5-9063-e75205665a45.dat",  "command_version": "2.1.5",  "create_time": "2023-06-23T13:54:19.400390",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cvpr9",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "4d9ea57ad581a83f",  "inputs": {   "reads": {    "id": "039c490a3d4364ab",    "src": "hda",    "uuid": "b992e45c-dbb7-43d5-9063-e75205665a45"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687528537.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:55:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687528537.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:55:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "10c47f56550f5b3a",    "src": "hda",    "uuid": "98429110-4c1b-4f2f-a85b-75c898cc01b3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:55:45.531945",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmppsuzu5tdindelqual-out3.bam v. /tmp/tmpqd7b5u6lindelqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 95.03816986083984, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="122.38027429580688">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="124.69352698326111">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="97.1296877861023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="99.31309533119202">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="100.61407709121704">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "1c6f3a6f0b59946a",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/c/e/5/dataset_ce555cf0-9b30-4708-a1e1-a857a76d1fc8.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/1/f/8/dataset_1f826209-6668-4243-a864-ff5c9a68ae66.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-06-23T13:05:20.438933",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-66zxn",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "fe7eded5de29d42f",  "inputs": {   "bamfile": {    "id": "1c6f3a6f0b59946a",    "src": "hda",    "uuid": "ce555cf0-9b30-4708-a1e1-a857a76d1fc8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687525602.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:06:42"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687525602.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:06:42"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "aef515323f952fd2",    "src": "hda",    "uuid": "1f826209-6668-4243-a864-ff5c9a68ae66"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:06:52.020345",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 100.61407709121704, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="96.96816730499268">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "b84345cde8fef2d7",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/e/3/7/dataset_e3700b8b-e885-4eb3-8839-940237511eed.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/8/0/3/dataset_80354add-4f66-473e-bc9a-ca363705cd23.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-06-23T13:07:01.992869",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dk8s7",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "9959b4d511d450cb",  "inputs": {   "bamfile": {    "id": "b84345cde8fef2d7",    "src": "hda",    "uuid": "e3700b8b-e885-4eb3-8839-940237511eed"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687525701.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:08:21"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687525701.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:08:21"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "8e24ddcf7914efb4",    "src": "hda",    "uuid": "80354add-4f66-473e-bc9a-ca363705cd23"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"true\"",   "stats": "\"false\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:08:29.210050",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 96.96816730499268, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="96.23145318031311">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "cc20ddfeea8a75af",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/b/d/d/dataset_bddcb12b-5b6d-4eec-9f91-da80891a5bc6.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/4/7/c/dataset_47cf4e13-0e77-407f-998a-ae50d14c9ae5.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-06-23T13:08:38.669947",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jg8bc",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "4c3e7df17c29b1ec",  "inputs": {   "bamfile": {    "id": "cc20ddfeea8a75af",    "src": "hda",    "uuid": "bddcb12b-5b6d-4eec-9f91-da80891a5bc6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687525796.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:09:56"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687525796.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:09:56"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "8fa5e584e1e6f7ac",    "src": "hda",    "uuid": "47cf4e13-0e77-407f-998a-ae50d14c9ae5"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"false\"",   "supp": "\"true\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:10:05.413130",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 96.23145318031311, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="97.12166237831116">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "ab569be56b0ec44b",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/e/5/e/dataset_e5efb8e2-41f3-4df1-99b5-72b57c88ad93.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/7/e/3/dataset_7e3ad6e8-419f-4c9e-b09c-586aca254ed2.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/1/a/4/dataset_1a452c0a-e8e0-401a-9c30-f5d29f416388.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "create_time": "2023-06-23T13:10:14.274829",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-crv9t",  "galaxy_version": "21.09",  "history_id": "9972e25c10e77a06",  "id": "fdf9d7482d6ab4ae",  "inputs": {   "bamfile": {    "id": "ab569be56b0ec44b",    "src": "hda",    "uuid": "e5efb8e2-41f3-4df1-99b5-72b57c88ad93"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2000.0000000",    "title": "Memory Allocated (MB)",    "value": "2000"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1687525893.0000000",    "title": "Job Start Time",    "value": "2023-06-23 13:11:33"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1687525893.0000000",    "title": "Job End Time",    "value": "2023-06-23 13:11:33"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "389f9231e35b119a",    "src": "hda",    "uuid": "7e3ad6e8-419f-4c9e-b09c-586aca254ed2"   },   "stats_output": {    "id": "e114d4f84008d712",    "src": "hda",    "uuid": "1a452c0a-e8e0-401a-9c30-f5d29f416388"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "\"false\"",   "stats": "\"true\"",   "supp": "\"false\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-06-23T13:11:42.608286",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmpebwe82alstats.txt v. /tmp/tmpyfc0mmtcstats.txt )\n--- local_file\n+++ history_data\n@@ -1,16 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -s coordsort.sam /tmp/tmpea8lprdd/files/2/2/4/dataset_224df993-f6bf-4c7d-99a1-2e9dd51c2a57.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 97.12166237831116, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sqlite_to_tabular (Test #1)" name="0" time="103.74379754066467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #1)" name="0" time="101.5652163028717">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #2)" name="1" time="97.29393196105957">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #1)" name="0" time="100.96809840202332">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #2)" name="1" time="100.59988856315613">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>