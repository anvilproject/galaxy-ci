{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 53, "errors": 8, "failures": 4, "skips": 1}, "tests": [{"id": "bamtools_split/2.5.2+galaxy0-0", "has_data": true, "data": {"tool_id": "bamtools_split", "tool_version": "2.5.2+galaxy0", "test_index": 0, "time_seconds": 30.70618486404419, "inputs": {"input_bams": {"src": "hda", "id": "ce35188459935976"}, "analysis_type|analysis_type_selector": "-mapped"}, "job": {"model_class": "Job", "id": "29022d0878de6e6e", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:54:10.589120", "create_time": "2024-11-06T00:53:56.123746", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bamtools_split/bamtools_split/2.5.2+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-blfpl", "command_line": "echo \"BAM\" > /galaxy/server/database/objects/5/f/b/dataset_5fba83a1-19e6-47fe-a54c-975509deec2f.dat && ln -s \"/galaxy/server/database/objects/4/7/2/dataset_4723c370-a8b2-4be2-b961-fd0be214ec3a.dat\" \"localbam_0.bam\" && ln -s \"/galaxy/server/database/objects/_metadata_files/9/2/4/metadata_9244bd58-933a-4bbf-9738-833a1c26e04e.dat\" \"localbam_0.bam.bai\" && bamtools split -mapped -stub split_bam -in \"localbam_0.bam\"", "traceback": null, "params": {"analysis_type": "{\"__current_case__\": 0, \"analysis_type_selector\": \"-mapped\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input_bams": {"id": "ce35188459935976", "src": "hda", "uuid": "4723c370-a8b2-4be2-b961-fd0be214ec3a"}, "input_bams1": {"id": "ce35188459935976", "src": "hda", "uuid": "4723c370-a8b2-4be2-b961-fd0be214ec3a"}}, "outputs": {"__new_primary_file_report|MAPPED__": {"id": "65ef739e0e27cd25", "src": "hda", "uuid": "52682e77-ead1-45f9-bbe8-b512c1810380"}, "report": {"id": "10582f3dd9e31a8b", "src": "hda", "uuid": "5fba83a1-19e6-47fe-a54c-975509deec2f"}, "__new_primary_file_report|UNMAPPED__": {"id": "7196e90de7c40fc6", "src": "hda", "uuid": "965a774f-7436-4881-aa21-49ed9ec34e54"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:54:00", "plugin": "core", "name": "end_epoch", "raw_value": "1730854440.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:54:00", "plugin": "core", "name": "start_epoch", "raw_value": "1730854440.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bamtools_split/2.5.2+galaxy0-1", "has_data": true, "data": {"tool_id": "bamtools_split", "tool_version": "2.5.2+galaxy0", "test_index": 1, "time_seconds": 27.678641080856323, "inputs": {"input_bams": {"src": "hda", "id": "4bc81e5dd9041d3d"}, "analysis_type|analysis_type_selector": "-reference"}, "job": {"model_class": "Job", "id": "977a6d34ea5684df", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:54:38.224989", "create_time": "2024-11-06T00:54:25.859743", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bamtools_split/bamtools_split/2.5.2+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-rvv6k", "command_line": "echo \"BAM\" > /galaxy/server/database/objects/a/8/c/dataset_a8c55d14-df81-4346-8a47-8fda0d200c8f.dat && ln -s \"/galaxy/server/database/objects/1/2/a/dataset_12aba640-d945-44d9-93cb-3989d67e67a5.dat\" \"localbam_0.bam\" && ln -s \"/galaxy/server/database/objects/_metadata_files/5/0/1/metadata_5012e70b-203f-4da8-9dd0-6540e4007634.dat\" \"localbam_0.bam.bai\" && bamtools split -reference -stub split_bam -in \"localbam_0.bam\"", "traceback": null, "params": {"analysis_type": "{\"__current_case__\": 2, \"analysis_type_selector\": \"-reference\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"bam\""}, "inputs": {"input_bams": {"id": "4bc81e5dd9041d3d", "src": "hda", "uuid": "12aba640-d945-44d9-93cb-3989d67e67a5"}, "input_bams1": {"id": "4bc81e5dd9041d3d", "src": "hda", "uuid": "12aba640-d945-44d9-93cb-3989d67e67a5"}}, "outputs": {"__new_primary_file_report|REF_chr1__": {"id": "5ac57e44b7583dbb", "src": "hda", "uuid": "845c423a-5c1f-4368-81d0-5b5c514dc657"}, "__new_primary_file_report|REF_chr10__": {"id": "b4f646c52adfb03d", "src": "hda", "uuid": "2a65b39a-7b8a-47b0-8dd1-e35cc1c2b54b"}, "__new_primary_file_report|REF_chr11__": {"id": "ce310e6edd7aca5a", "src": "hda", "uuid": "f6f5991f-0582-4496-9a94-0adf27697901"}, "__new_primary_file_report|REF_chr12__": {"id": "5ba6354d353c6145", "src": "hda", "uuid": "3a75d0cc-e9e4-41bb-97a2-f716221b4313"}, "__new_primary_file_report|REF_chr13__": {"id": "4977eb3e9fbe0b1c", "src": "hda", "uuid": "1ce33f62-3ac9-4e4a-abf4-abff1b2e43eb"}, "__new_primary_file_report|REF_chr14__": {"id": "8ab314b487505ebe", "src": "hda", "uuid": "961d84a0-9349-438f-a1e7-421e88d91138"}, "__new_primary_file_report|REF_chr15__": {"id": "edc967d0e63fa5f0", "src": "hda", "uuid": "9fdf1b96-e0c7-492a-8be1-12a51f7d6789"}, "__new_primary_file_report|REF_chr16__": {"id": "4df030ed7ea23c8f", "src": "hda", "uuid": "b99b332d-84ca-432e-b83d-ea82c933275d"}, "__new_primary_file_report|REF_chr17__": {"id": "7d3c008e50e21986", "src": "hda", "uuid": "6f30da02-4479-41a6-9a75-9b2e51438fa5"}, "__new_primary_file_report|REF_chr18__": {"id": "1fdc7f4a26a816e9", "src": "hda", "uuid": "e2df7788-0867-46f7-be71-5fcb1744eb96"}, "__new_primary_file_report|REF_chr19__": {"id": "8c322b715cdecee6", "src": "hda", "uuid": "66389a79-6e8d-4954-bdca-7c7ff1a2a4dd"}, "__new_primary_file_report|REF_chr2__": {"id": "afd02bf82b7a5cee", "src": "hda", "uuid": "8ea7bafc-6d4d-4644-9767-f2c6859d1129"}, "__new_primary_file_report|REF_chr20__": {"id": "7f54ecc19b264fe3", "src": "hda", "uuid": "9d9bf16a-d5a9-4cc3-a3e0-f42c679cfd34"}, "__new_primary_file_report|REF_chr21__": {"id": "6497b649f6de55d0", "src": "hda", "uuid": "445c3f81-a0af-4a64-99b8-12c20f708499"}, "__new_primary_file_report|REF_chr22__": {"id": "3fafc03bcc4a465e", "src": "hda", "uuid": "9d1d1d52-68d6-44d5-870b-480cb12fe733"}, "__new_primary_file_report|REF_chr3__": {"id": "a0b1a8abc84d2ef0", "src": "hda", "uuid": "20d940ae-aea0-4517-ac5b-4c7444f055ae"}, "__new_primary_file_report|REF_chr4__": {"id": "deff2581ceb94306", "src": "hda", "uuid": "be2ec1b2-3309-47dc-8356-7f4b96f1a6e8"}, "__new_primary_file_report|REF_chr5__": {"id": "21686a009afb8eb5", "src": "hda", "uuid": "3ce8d049-400d-4d39-8445-6a6b2a6b9e29"}, "__new_primary_file_report|REF_chr6__": {"id": "b3ec0689ec5eaef5", "src": "hda", "uuid": "de0c3697-114e-401e-8745-df86981b3e3a"}, "__new_primary_file_report|REF_chr7__": {"id": "16357df78f606787", "src": "hda", "uuid": "daf37526-3b05-42ca-adc0-fa1e7eb6f92b"}, "report": {"id": "c647bd03451665d8", "src": "hda", "uuid": "a8c55d14-df81-4346-8a47-8fda0d200c8f"}, "__new_primary_file_report|REF_chr8__": {"id": "bb73c71dc50e10b3", "src": "hda", "uuid": "15dfe2d1-542b-47c7-ac3a-f7f07073357c"}, "__new_primary_file_report|REF_chr9__": {"id": "1bf0bb7459f3f4a4", "src": "hda", "uuid": "e1d62cc2-abf5-412d-a600-1cf47600c10d"}, "__new_primary_file_report|REF_chrX__": {"id": "fce2b3877c908dbc", "src": "hda", "uuid": "e7705b86-e13b-44f2-a02e-745115f137bc"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:54:27", "plugin": "core", "name": "start_epoch", "raw_value": "1730854467.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:54:27", "plugin": "core", "name": "end_epoch", "raw_value": "1730854467.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_plugin_fixploidy/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_plugin_fixploidy", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 34.94127798080444, "inputs": {"input_file": {"src": "hda", "id": "a0adee502c0141c2"}, "sec_plugin|ploidy_file": {"src": "hda", "id": "94db81cb144209a4"}, "sec_plugin|sex": {"src": "hda", "id": "e0b63d6148c182e3"}, "output_type": "v"}, "job": {"model_class": "Job", "id": "4bc81e5dd9041d3d", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:56:30.834627", "create_time": "2024-11-06T00:56:14.908359", "galaxy_version": "23.1", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_fixploidy/bcftools_plugin_fixploidy/1.15.1+galaxy4", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-twvjx", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/b/0/5/dataset_b053eb12-123a-4de6-a6ce-98a485a46bcf.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools plugin fixploidy                 --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz   --  --ploidy \"/galaxy/server/database/objects/7/f/a/dataset_7fa47e76-8d82-4dbe-82f2-323a1fa580f5.dat\"  --sex \"/galaxy/server/database/objects/6/6/e/dataset_66e0fbd6-abcd-4853-ac13-945ac98270f9.dat\" --tags \"GT\" > '/galaxy/server/database/objects/8/0/c/dataset_80cf1b1c-399a-42e6-8d10-3365441d89b1.dat'", "traceback": null, "params": {"sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "sec_plugin": "{\"ploidy_file\": {\"values\": [{\"id\": 57, \"src\": \"hda\"}]}, \"sex\": {\"values\": [{\"id\": 58, \"src\": \"hda\"}]}, \"tags\": \"GT\"}", "output_type": "\"v\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"input_file": {"id": "a0adee502c0141c2", "src": "hda", "uuid": "b053eb12-123a-4de6-a6ce-98a485a46bcf"}, "sec_plugin|ploidy_file": {"id": "94db81cb144209a4", "src": "hda", "uuid": "7fa47e76-8d82-4dbe-82f2-323a1fa580f5"}, "sec_plugin|sex": {"id": "e0b63d6148c182e3", "src": "hda", "uuid": "66e0fbd6-abcd-4853-ac13-945ac98270f9"}}, "outputs": {"output_file": {"id": "fd67b87ade193bd1", "src": "hda", "uuid": "80cf1b1c-399a-42e6-8d10-3365441d89b1"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:56:21", "plugin": "core", "name": "start_epoch", "raw_value": "1730854581.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:56:21", "plugin": "core", "name": "end_epoch", "raw_value": "1730854581.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "bcftools_stats/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 10.256080389022827, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_stats/1.15.1+galaxy4-1", "has_data": true, "data": {"tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4", "test_index": 1, "status": "skip"}}, {"id": "bcftools_stats/1.15.1+galaxy4-2", "has_data": true, "data": {"tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4", "test_index": 2, "time_seconds": 77.84869480133057, "inputs": {"input_file": {"src": "hda", "id": "34610562ae8813c6"}, "plot_title": "Plot for mpileup.vcf"}, "job": {"model_class": "Job", "id": "ce310e6edd7aca5a", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:57:59.557128", "create_time": "2024-11-06T00:56:56.798453", "galaxy_version": "23.1", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-9pbbh", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/f/8/1/dataset_f8189213-312d-4fd7-9499-fed11817a60f.dat' > input0.vcf.gz && bcftools index input0.vcf.gz && echo 'input0.vcf.gz' >> vcfs_list &&                     bcftools stats                               input0.vcf.gz  > '/galaxy/server/database/objects/2/b/5/dataset_2b52aca2-c3ca-483b-a8b6-b3ccf5d97e10.dat' && plot-vcfstats -p 'plot_tmp/' -T 'Plot for mpileup.vcf' -s '/galaxy/server/database/objects/2/b/5/dataset_2b52aca2-c3ca-483b-a8b6-b3ccf5d97e10.dat' || (printf \"The content of plot_tmp/plot-vcfstats.log is:\\n\" >&2 && cat plot_tmp/plot-vcfstats.log >&2 && exit 1)", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_title": "\"Plot for mpileup.vcf\"", "sec_default": "{\"af_tag\": \"\", \"afbins\": {\"__current_case__\": 0, \"afbins_select\": \"default\"}, \"depth\": {\"__current_case__\": 0, \"set_depth\": \"no\"}, \"exons_file\": null, \"first_allele_only\": false, \"reference_source\": {\"__current_case__\": 0, \"reference_source_selector\": \"\"}, \"split_by_ID\": false, \"user_tstv\": \"\", \"verbose\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": null, \"include\": null, \"invert_samples\": false, \"invert_samples_file\": false, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"samples\": \"\", \"samples_file\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "inputB_file": null}, "inputs": {"input_file": {"id": "34610562ae8813c6", "src": "hda", "uuid": "f8189213-312d-4fd7-9499-fed11817a60f"}}, "outputs": {"output_pdf": {"id": "e1bf8c808d0b3743", "src": "hda", "uuid": "025bfc1a-5b89-4889-9bd5-d13467fa1be5"}, "output_file": {"id": "3628bfd50e168a04", "src": "hda", "uuid": "2b52aca2-c3ca-483b-a8b6-b3ccf5d97e10"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Parsing bcftools stats output: /galaxy/server/database/objects/2/b/5/dataset_2b52aca2-c3ca-483b-a8b6-b3ccf5d97e10.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1\nFinished: plot_tmp//summary.pdf\n", "job_stdout": "", "job_stderr": "", "stderr": "Parsing bcftools stats output: /galaxy/server/database/objects/2/b/5/dataset_2b52aca2-c3ca-483b-a8b6-b3ccf5d97e10.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1\nFinished: plot_tmp//summary.pdf\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:57:22", "plugin": "core", "name": "start_epoch", "raw_value": "1730854642.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:57:45", "plugin": "core", "name": "end_epoch", "raw_value": "1730854665.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "23 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "23.0000000"}]}, "status": "success"}}, {"id": "bcftools_stats/1.15.1+galaxy4-3", "has_data": true, "data": {"tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4", "test_index": 3, "time_seconds": 25.897814512252808, "inputs": {"input_file": {"src": "hda", "id": "136c297365c28c24"}, "inputB_file": {"src": "hda", "id": "986de4468a644fb3"}, "sec_restrict|regions_overlap": "1"}, "job": {"model_class": "Job", "id": "8ab314b487505ebe", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:58:25.973661", "create_time": "2024-11-06T00:58:15.464497", "galaxy_version": "23.1", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-jb4pq", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/7/7/dataset_277019b7-2f1b-4958-a056-f8a3f1491f14.dat' > input0.vcf.gz && bcftools index input0.vcf.gz && echo 'input0.vcf.gz' >> vcfs_list &&  bgzip -c '/galaxy/server/database/objects/9/e/c/dataset_9ec2835f-caa8-4b07-a780-8e7f0f5084eb.dat' > input1.vcf.gz && bcftools index input1.vcf.gz && echo 'input1.vcf.gz' >> vcfs_list &&                     bcftools stats               --regions-overlap 1                input0.vcf.gz input1.vcf.gz  > '/galaxy/server/database/objects/e/7/b/dataset_e7bde3aa-0ff1-40e4-81f2-8dd659c05a23.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_title": "\"\"", "sec_default": "{\"af_tag\": \"\", \"afbins\": {\"__current_case__\": 0, \"afbins_select\": \"default\"}, \"depth\": {\"__current_case__\": 0, \"set_depth\": \"no\"}, \"exons_file\": null, \"first_allele_only\": false, \"reference_source\": {\"__current_case__\": 0, \"reference_source_selector\": \"\"}, \"split_by_ID\": false, \"user_tstv\": \"\", \"verbose\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": null, \"include\": null, \"invert_samples\": false, \"invert_samples_file\": false, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": \"1\", \"samples\": \"\", \"samples_file\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "136c297365c28c24", "src": "hda", "uuid": "277019b7-2f1b-4958-a056-f8a3f1491f14"}, "inputB_file": {"id": "986de4468a644fb3", "src": "hda", "uuid": "9ec2835f-caa8-4b07-a780-8e7f0f5084eb"}}, "outputs": {"output_file": {"id": "5e536259e52c0405", "src": "hda", "uuid": "e7bde3aa-0ff1-40e4-81f2-8dd659c05a23"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:58:17", "plugin": "core", "name": "start_epoch", "raw_value": "1730854697.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:58:18", "plugin": "core", "name": "end_epoch", "raw_value": "1730854698.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_stats/1.15.1+galaxy4-4", "has_data": true, "data": {"tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4", "test_index": 4, "time_seconds": 26.762089490890503, "inputs": {"input_file": {"src": "hda", "id": "b59ece88fe3923a9"}, "sec_restrict|samples": "-"}, "job": {"model_class": "Job", "id": "4df030ed7ea23c8f", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:58:52.721401", "create_time": "2024-11-06T00:58:41.625258", "galaxy_version": "23.1", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-4vjft", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/1/9/6/dataset_196ee930-8184-41e0-9f9a-910a0db6a28f.dat' > input0.vcf.gz && bcftools index input0.vcf.gz && echo 'input0.vcf.gz' >> vcfs_list &&                     bcftools stats                    --samples '-'            input0.vcf.gz  > '/galaxy/server/database/objects/9/f/8/dataset_9f8403ab-1b69-452f-8063-39ba8b8520f8.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_title": "\"\"", "sec_default": "{\"af_tag\": \"\", \"afbins\": {\"__current_case__\": 0, \"afbins_select\": \"default\"}, \"depth\": {\"__current_case__\": 0, \"set_depth\": \"no\"}, \"exons_file\": null, \"first_allele_only\": false, \"reference_source\": {\"__current_case__\": 0, \"reference_source_selector\": \"\"}, \"split_by_ID\": false, \"user_tstv\": \"\", \"verbose\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": null, \"include\": null, \"invert_samples\": false, \"invert_samples_file\": false, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"samples\": \"-\", \"samples_file\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}", "inputB_file": null}, "inputs": {"input_file": {"id": "b59ece88fe3923a9", "src": "hda", "uuid": "196ee930-8184-41e0-9f9a-910a0db6a28f"}}, "outputs": {"output_file": {"id": "79a4cfe8e11d223d", "src": "hda", "uuid": "9f8403ab-1b69-452f-8063-39ba8b8520f8"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:58:43", "plugin": "core", "name": "start_epoch", "raw_value": "1730854723.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:58:43", "plugin": "core", "name": "end_epoch", "raw_value": "1730854723.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "collection_element_identifiers/0.0.2-0", "has_data": true, "data": {"tool_id": "collection_element_identifiers", "tool_version": "0.0.2", "test_index": 0, "time_seconds": 40.875614404678345, "inputs": {"input_collection": {"src": "hdca", "id": "1b7b36fc584f75c7"}}, "job": {"model_class": "Job", "id": "83131a8d6f571d69", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:51:11.445824", "create_time": "2024-11-06T00:51:00.658788", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-dtw2m", "command_line": "mv '/galaxy/server/database/jobs_directory/000/2/configs/tmpitoeugg1' '/galaxy/server/database/objects/a/b/d/dataset_abd82eb0-f0d6-4267-89be-22c837cdf470.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "1b7b36fc584f75c7", "src": "hda", "uuid": "71665628-e868-4430-ab96-f2bac2afdb51"}}, "outputs": {"output": {"id": "83131a8d6f571d69", "src": "hda", "uuid": "abd82eb0-f0d6-4267-89be-22c837cdf470"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:51:02", "plugin": "core", "name": "end_epoch", "raw_value": "1730854262.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:51:02", "plugin": "core", "name": "start_epoch", "raw_value": "1730854262.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "collection_element_identifiers/0.0.2-1", "has_data": true, "data": {"tool_id": "collection_element_identifiers", "tool_version": "0.0.2", "test_index": 1, "time_seconds": 26.488404512405396, "inputs": {"input_collection": {"src": "hdca", "id": "83131a8d6f571d69"}}, "job": {"model_class": "Job", "id": "e09f5f54f33e6a3d", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:51:37.762708", "create_time": "2024-11-06T00:51:26.335292", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/collection_element_identifiers/collection_element_identifiers/0.0.2", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-lcdqv", "command_line": "mv '/galaxy/server/database/jobs_directory/000/4/configs/tmp233pqq78' '/galaxy/server/database/objects/5/8/6/dataset_5864c7d0-5160-4f59-964c-8c515e062b53.dat'", "traceback": null, "params": {"__input_ext": "\"txt\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "input_collection": "{\"values\": [{\"id\": 2, \"src\": \"hdca\"}]}"}, "inputs": {"input_collection1": {"id": "85bdf0f5ac3f7f57", "src": "hda", "uuid": "05613f88-d543-4c2d-b918-33d82c7ecef3"}}, "outputs": {"output": {"id": "e09f5f54f33e6a3d", "src": "hda", "uuid": "5864c7d0-5160-4f59-964c-8c515e062b53"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:51:28", "plugin": "core", "name": "end_epoch", "raw_value": "1730854288.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:51:28", "plugin": "core", "name": "start_epoch", "raw_value": "1730854288.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "deeptools_plot_correlation/3.5.4+galaxy0-0", "has_data": true, "data": {"tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0", "test_index": 0, "time_seconds": 45.047712087631226, "inputs": {"corData": {"src": "hda", "id": "e83c6f91f1b5b73f"}, "outFileFormat": "png", "outFileCorMatrix": true}, "job": {"model_class": "Job", "id": "34610562ae8813c6", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:06:53.757914", "create_time": "2024-11-06T01:06:23.855564", "galaxy_version": "23.1", "command_version": "plotCorrelation 3.5.4", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-r8x9v", "command_line": "plotCorrelation --corData '/galaxy/server/database/objects/8/f/d/dataset_8fdb6271-9350-4f8a-8136-be71e06541e7.dat' --plotFile '/galaxy/server/database/objects/f/e/5/dataset_fe54ca9f-815e-4d1a-afc5-d751d23b302a.dat' --corMethod 'spearman' --whatToPlot 'heatmap'  --colorMap 'RdYlBu'  --plotTitle ''  --plotWidth 11.0 --plotHeight 9.5  --plotFileFormat 'png'  --outFileCorMatrix '/galaxy/server/database/objects/0/c/c/dataset_0ccc010c-1f7f-442c-9b6b-efbef5c43c81.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "outFileCorMatrix": "true", "removeOutliers": "false", "outFileFormat": "\"png\"", "skipZeros": "false", "plotting_type": "{\"__current_case__\": 0, \"colorMap\": \"RdYlBu\", \"plotHeight\": \"9.5\", \"plotNumbers\": false, \"plotTitle\": \"\", \"plotWidth\": \"11.0\", \"whatToPlot\": \"heatmap\", \"zMax\": \"\", \"zMin\": \"\"}", "corMethod": "\"spearman\""}, "inputs": {"corData": {"id": "e83c6f91f1b5b73f", "src": "hda", "uuid": "8fdb6271-9350-4f8a-8136-be71e06541e7"}}, "outputs": {"outFileName": {"id": "a3cea7ec23a652ae", "src": "hda", "uuid": "fe54ca9f-815e-4d1a-afc5-d751d23b302a"}, "matrix": {"id": "4c47111b96f327fb", "src": "hda", "uuid": "0ccc010c-1f7f-442c-9b6b-efbef5c43c81"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:06:42", "plugin": "core", "name": "end_epoch", "raw_value": "1730855202.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:06:39", "plugin": "core", "name": "start_epoch", "raw_value": "1730855199.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "deeptools_plot_correlation/3.5.4+galaxy0-1", "has_data": true, "data": {"tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0", "test_index": 1, "time_seconds": 28.90104842185974, "inputs": {"corData": {"src": "hda", "id": "0093155d29911e5c"}, "plotting_type|plotTitle": "Test Plot", "plotting_type|whatToPlot": "scatterplot", "outFileFormat": "png", "removeOutliers": true}, "job": {"model_class": "Job", "id": "e1bf8c808d0b3743", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:07:23.341641", "create_time": "2024-11-06T01:07:10.499058", "galaxy_version": "23.1", "command_version": "plotCorrelation 3.5.4", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-6kjsp", "command_line": "plotCorrelation --corData '/galaxy/server/database/objects/1/4/4/dataset_144b43d5-0675-4386-abc0-9df1184f6834.dat' --plotFile '/galaxy/server/database/objects/8/d/3/dataset_8d3a6362-09b3-4d0d-a1e6-032bd8226a69.dat' --corMethod 'spearman' --whatToPlot 'scatterplot' --plotTitle 'Test Plot'   --plotFileFormat 'png' --removeOutliers", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "outFileCorMatrix": "false", "removeOutliers": "true", "outFileFormat": "\"png\"", "skipZeros": "false", "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}", "corMethod": "\"spearman\""}, "inputs": {"corData": {"id": "0093155d29911e5c", "src": "hda", "uuid": "144b43d5-0675-4386-abc0-9df1184f6834"}}, "outputs": {"outFileName": {"id": "549df6d66831a4e3", "src": "hda", "uuid": "8d3a6362-09b3-4d0d-a1e6-032bd8226a69"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:07:14", "plugin": "core", "name": "end_epoch", "raw_value": "1730855234.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:07:11", "plugin": "core", "name": "start_epoch", "raw_value": "1730855231.0000000"}, {"title": "Memory Allocated (MB)", "value": "21474", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "21474.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpg4zzdg8kplotCorrelation_result2.png v. /tmp/tmp0ccxijazplotCorrelation_result2.png )\nFiles /tmp/tmpg4zzdg8kplotCorrelation_result2.png=11943b but /tmp/tmp0ccxijazplotCorrelation_result2.png=12341b - compare by size (delta=300) failed"], "status": "failure"}}, {"id": "fastq_paired_end_deinterlacer/1.1.5-0", "has_data": true, "data": {"tool_id": "fastq_paired_end_deinterlacer", "tool_version": "1.1.5", "test_index": 0, "time_seconds": 57.9970383644104, "inputs": {"input_file": {"src": "hda", "id": "4267ef744c0675c2"}}, "job": {"model_class": "Job", "id": "fca1195e121c28e3", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:52:36.183975", "create_time": "2024-11-06T00:51:53.841713", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.5", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-sf6sc", "command_line": "gx-fastq-paired-end-deinterlacer '/galaxy/server/database/objects/2/4/5/dataset_24538c07-50d7-4a93-81f5-130acde7e58b.dat' 'sanger' '/galaxy/server/database/objects/8/3/5/dataset_8355a0f5-baf3-4812-9fab-0f0946ecc70c.dat' '/galaxy/server/database/objects/9/2/e/dataset_92eb2c23-8fba-4174-bed1-98f7c4022621.dat' '/galaxy/server/database/objects/5/c/b/dataset_5cb6804a-3f4f-45bf-a404-774f31cdb5de.dat' '/galaxy/server/database/objects/d/1/6/dataset_d16d84e2-da95-49c4-91f4-d013f4b58ca9.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_file": {"id": "4267ef744c0675c2", "src": "hda", "uuid": "24538c07-50d7-4a93-81f5-130acde7e58b"}}, "outputs": {"output2_singles_file": {"id": "5549ad089538fc4e", "src": "hda", "uuid": "d16d84e2-da95-49c4-91f4-d013f4b58ca9"}, "output1_singles_file": {"id": "0b5058b232486b8e", "src": "hda", "uuid": "5cb6804a-3f4f-45bf-a404-774f31cdb5de"}, "output2_pairs_file": {"id": "1b9ad2b1f69cb03c", "src": "hda", "uuid": "92eb2c23-8fba-4174-bed1-98f7c4022621"}, "output1_pairs_file": {"id": "fca1195e121c28e3", "src": "hda", "uuid": "8355a0f5-baf3-4812-9fab-0f0946ecc70c"}}, "output_collections": {}, "tool_stdout": "De-interlaced 5.0 pairs of sequences.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "De-interlaced 5.0 pairs of sequences.\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:52:25", "plugin": "core", "name": "end_epoch", "raw_value": "1730854345.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:52:25", "plugin": "core", "name": "start_epoch", "raw_value": "1730854345.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_paired_end_deinterlacer/1.1.5-1", "has_data": true, "data": {"tool_id": "fastq_paired_end_deinterlacer", "tool_version": "1.1.5", "test_index": 1, "time_seconds": 8.698991537094116, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "fastq_paired_end_deinterlacer/1.1.5-2", "has_data": true, "data": {"tool_id": "fastq_paired_end_deinterlacer", "tool_version": "1.1.5", "test_index": 2, "time_seconds": 26.90383505821228, "inputs": {"input_file": {"src": "hda", "id": "402349d8c65f96f6"}}, "job": {"model_class": "Job", "id": "5549ad089538fc4e", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:53:11.883961", "create_time": "2024-11-06T00:53:00.714867", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.5", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-8686z", "command_line": "gx-fastq-paired-end-deinterlacer '/galaxy/server/database/objects/2/b/2/dataset_2b2256f3-9c67-4a29-bee9-b8b4dd5283ef.dat' 'sanger.gz' '/galaxy/server/database/objects/b/2/b/dataset_b2b4df07-f29d-4682-a798-68a4017b5e60.dat' '/galaxy/server/database/objects/4/8/4/dataset_48439a51-4e9c-4775-ab55-daf7c5e9b1a6.dat' '/galaxy/server/database/objects/f/d/6/dataset_fd645705-5611-4356-bf10-2420541228b2.dat' '/galaxy/server/database/objects/b/d/e/dataset_bde2274c-8402-49a0-a8e9-09020a13be88.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_file": {"id": "402349d8c65f96f6", "src": "hda", "uuid": "2b2256f3-9c67-4a29-bee9-b8b4dd5283ef"}}, "outputs": {"output2_singles_file": {"id": "977a6d34ea5684df", "src": "hda", "uuid": "bde2274c-8402-49a0-a8e9-09020a13be88"}, "output1_singles_file": {"id": "b3524bddab330534", "src": "hda", "uuid": "fd645705-5611-4356-bf10-2420541228b2"}, "output2_pairs_file": {"id": "29022d0878de6e6e", "src": "hda", "uuid": "48439a51-4e9c-4775-ab55-daf7c5e9b1a6"}, "output1_pairs_file": {"id": "aaac9be39f158ca1", "src": "hda", "uuid": "b2b4df07-f29d-4682-a798-68a4017b5e60"}}, "output_collections": {}, "tool_stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:53:02", "plugin": "core", "name": "end_epoch", "raw_value": "1730854382.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:53:02", "plugin": "core", "name": "start_epoch", "raw_value": "1730854382.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_paired_end_deinterlacer/1.1.5-3", "has_data": true, "data": {"tool_id": "fastq_paired_end_deinterlacer", "tool_version": "1.1.5", "test_index": 3, "time_seconds": 25.862233877182007, "inputs": {"input_file": {"src": "hda", "id": "820808fbf08cc20b"}}, "job": {"model_class": "Job", "id": "402349d8c65f96f6", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:53:37.962460", "create_time": "2024-11-06T00:53:28.053522", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_deinterlacer/fastq_paired_end_deinterlacer/1.1.5", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-x48hk", "command_line": "gx-fastq-paired-end-deinterlacer '/galaxy/server/database/objects/1/d/b/dataset_1dbc10ce-21ab-487d-a904-c8ec714bade6.dat' 'sanger.bz2' '/galaxy/server/database/objects/c/1/2/dataset_c1217d79-bb20-41fa-9cc1-4beea1b2cf56.dat' '/galaxy/server/database/objects/2/8/1/dataset_2817801e-87ac-484c-ae80-7eec2a1f6b57.dat' '/galaxy/server/database/objects/3/3/a/dataset_33a882b8-0d8f-4b5e-87e0-cfaf9eb8635e.dat' '/galaxy/server/database/objects/2/1/f/dataset_21fc291f-a50d-4301-85e5-f4c6b99d577f.dat'", "traceback": null, "params": {"chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastqsanger.bz2\""}, "inputs": {"input_file": {"id": "820808fbf08cc20b", "src": "hda", "uuid": "1dbc10ce-21ab-487d-a904-c8ec714bade6"}}, "outputs": {"output1_pairs_file": {"id": "d46f4f01bba9ee21", "src": "hda", "uuid": "c1217d79-bb20-41fa-9cc1-4beea1b2cf56"}, "output2_pairs_file": {"id": "27ff86d57983f318", "src": "hda", "uuid": "2817801e-87ac-484c-ae80-7eec2a1f6b57"}, "output1_singles_file": {"id": "3ccff8ff27cab51e", "src": "hda", "uuid": "33a882b8-0d8f-4b5e-87e0-cfaf9eb8635e"}, "output2_singles_file": {"id": "fe15788fda92af89", "src": "hda", "uuid": "21fc291f-a50d-4301-85e5-f4c6b99d577f"}}, "output_collections": {}, "tool_stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "There were 2 reads with no mate.\nDe-interlaced 4.0 pairs of sequences.\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 00:53:29", "plugin": "core", "name": "end_epoch", "raw_value": "1730854409.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:53:29", "plugin": "core", "name": "start_epoch", "raw_value": "1730854409.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "medaka_consensus_pipeline/1.7.2+galaxy1-0", "has_data": true, "data": {"tool_id": "medaka_consensus_pipeline", "tool_version": "1.7.2+galaxy1", "test_index": 0, "time_seconds": 79.0632176399231, "inputs": {"i": {"src": "hda", "id": "fba84ec29c8944d1"}, "d": {"src": "hda", "id": "fab55c5eeaa73885"}}, "job": {"model_class": "Job", "id": "bb73c71dc50e10b3", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:02:28.039085", "create_time": "2024-11-06T01:01:26.588117", "galaxy_version": "23.1", "command_version": "medaka 1.7.2", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus_pipeline/medaka_consensus_pipeline/1.7.2+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-ksd7w", "command_line": "cp '/galaxy/server/database/objects/3/b/3/dataset_3b361814-1208-4abc-a1ad-23de7418b981.dat' 'input_assembly.fa' && medaka_consensus -m r941_min_high_g360 -b 100 -o results -t ${GALAXY_SLOTS:-4} -i '/galaxy/server/database/objects/9/3/b/dataset_93ba1d6e-8aa1-4439-85d3-22f1eb477ee7.dat' -d 'input_assembly.fa'  2>&1 | tee 'XXXX'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "out": "[\"consensus\", \"probs\", \"calls\"]", "g": "false", "b": "\"100\"", "m": "\"r941_min_high_g360\""}, "inputs": {"i": {"id": "fba84ec29c8944d1", "src": "hda", "uuid": "93ba1d6e-8aa1-4439-85d3-22f1eb477ee7"}, "d": {"id": "fab55c5eeaa73885", "src": "hda", "uuid": "3b361814-1208-4abc-a1ad-23de7418b981"}}, "outputs": {"out_consensus": {"id": "dd1166e4599000a9", "src": "hda", "uuid": "7bd1e1d7-efc1-4a0f-a9ad-a195257e0ab7"}, "out_probs": {"id": "660d83fdc0d54544", "src": "hda", "uuid": "47fa3d9f-ed47-45dc-9c7b-9104729774eb"}, "out_calls": {"id": "dd86c7682aa9c96a", "src": "hda", "uuid": "0f8e4e26-1a9e-41c2-98ad-625256d0d1fa"}}, "output_collections": {}, "tool_stdout": "Checking program versions\nThis is medaka 1.7.2\nProgram    Version    Required   Pass     \nbcftools   1.15.1     1.11       True     \nbgzip      1.16       1.11       True     \nminimap2   2.24       2.11       True     \nsamtools   1.15.1     1.11       True     \ntabix      1.16       1.11       True     \nAligning basecalls to draft\nCreating fai index file /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.fai\nCreating mmi index file /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi\n[M::mm_idx_gen::0.003*1.05] collected minimizers\n[M::mm_idx_gen::0.004*1.04] sorted minimizers\n[M::main::0.005*1.03] loaded/built the index for 1 target sequence(s)\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*1.03] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa\n[M::main] Real time: 0.010 sec; CPU: 0.005 sec; Peak RSS: 0.003 GB\n[M::main::0.004*1.06] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*1.06] mid_occ = 10\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*1.06] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::worker_pipeline::0.033*3.90] mapped 125 sequences\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/9/3/b/dataset_93ba1d6e-8aa1-4439-85d3-22f1eb477ee7.dat\n[M::main] Real time: 0.034 sec; CPU: 0.128 sec; Peak RSS: 0.015 GB\nRunning medaka consensus\n[01:02:00 - Predict] Reducing threads to 2, anymore is a waste.\n[01:02:00 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.\n[01:02:00 - Predict] Setting tensorflow inter/intra-op threads to 2/1.\n[01:02:00 - Predict] Processing region(s): 4:0-3792\n[01:02:00 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5.\n[01:02:00 - Predict] Processing 1 long region(s) with batching.\n[01:02:00 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5\n[01:02:01 - BAMFile] Creating pool of 16 BAM file sets.\n[01:02:01 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:02:01 - PWorker] Running inference for 0.0M draft bases.\n[01:02:01 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:02:01 - Sampler] Took 0.24s to make features.\n[01:02:01 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.\n[01:02:01 - PWorker] Processed 0 batches\n[01:02:01 - PWorker] All done, 1 remainder regions.\n[01:02:01 - Predict] Processing 1 short region(s).\n[01:02:01 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5\n[01:02:02 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:02:02 - PWorker] Running inference for 0.0M draft bases.\n[01:02:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:02:02 - Sampler] Took 0.13s to make features.\n[01:02:16 - PWorker] Batches in cache: 1.\n[01:02:16 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 13.9s\n[01:02:16 - PWorker] Processed 1 batches\n[01:02:16 - PWorker] All done, 0 remainder regions.\n[01:02:16 - Predict] Finished processing all regions.\n[01:02:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[01:02:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\nPolished assembly written to results/consensus.fasta, have a nice day.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Checking program versions\nThis is medaka 1.7.2\nProgram    Version    Required   Pass     \nbcftools   1.15.1     1.11       True     \nbgzip      1.16       1.11       True     \nminimap2   2.24       2.11       True     \nsamtools   1.15.1     1.11       True     \ntabix      1.16       1.11       True     \nAligning basecalls to draft\nCreating fai index file /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.fai\nCreating mmi index file /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi\n[M::mm_idx_gen::0.003*1.05] collected minimizers\n[M::mm_idx_gen::0.004*1.04] sorted minimizers\n[M::main::0.005*1.03] loaded/built the index for 1 target sequence(s)\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*1.03] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa\n[M::main] Real time: 0.010 sec; CPU: 0.005 sec; Peak RSS: 0.003 GB\n[M::main::0.004*1.06] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*1.06] mid_occ = 10\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*1.06] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::worker_pipeline::0.033*3.90] mapped 125 sequences\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/47/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/9/3/b/dataset_93ba1d6e-8aa1-4439-85d3-22f1eb477ee7.dat\n[M::main] Real time: 0.034 sec; CPU: 0.128 sec; Peak RSS: 0.015 GB\nRunning medaka consensus\n[01:02:00 - Predict] Reducing threads to 2, anymore is a waste.\n[01:02:00 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.\n[01:02:00 - Predict] Setting tensorflow inter/intra-op threads to 2/1.\n[01:02:00 - Predict] Processing region(s): 4:0-3792\n[01:02:00 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5.\n[01:02:00 - Predict] Processing 1 long region(s) with batching.\n[01:02:00 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5\n[01:02:01 - BAMFile] Creating pool of 16 BAM file sets.\n[01:02:01 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:02:01 - PWorker] Running inference for 0.0M draft bases.\n[01:02:01 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:02:01 - Sampler] Took 0.24s to make features.\n[01:02:01 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.\n[01:02:01 - PWorker] Processed 0 batches\n[01:02:01 - PWorker] All done, 1 remainder regions.\n[01:02:01 - Predict] Processing 1 short region(s).\n[01:02:01 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_high_g360_model.hdf5\n[01:02:02 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:02:02 - PWorker] Running inference for 0.0M draft bases.\n[01:02:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:02:02 - Sampler] Took 0.13s to make features.\n[01:02:16 - PWorker] Batches in cache: 1.\n[01:02:16 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 13.9s\n[01:02:16 - PWorker] Processed 1 batches\n[01:02:16 - PWorker] All done, 0 remainder regions.\n[01:02:16 - Predict] Finished processing all regions.\n[01:02:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[01:02:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\nPolished assembly written to results/consensus.fasta, have a nice day.\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "32 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "32.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:02:19", "plugin": "core", "name": "end_epoch", "raw_value": "1730854939.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:01:47", "plugin": "core", "name": "start_epoch", "raw_value": "1730854907.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "medaka_consensus_pipeline/1.7.2+galaxy1-1", "has_data": true, "data": {"tool_id": "medaka_consensus_pipeline", "tool_version": "1.7.2+galaxy1", "test_index": 1, "time_seconds": 61.20136642456055, "inputs": {"i": {"src": "hda", "id": "8f96fcae24049d4a"}, "d": {"src": "hda", "id": "90b95855033973a0"}, "m": "r941_min_fast_g303", "b": "99", "out": ["consensus", "probs", "calls", "log", "gaps"]}, "job": {"model_class": "Job", "id": "14d8ac9f06698d01", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:03:28.701100", "create_time": "2024-11-06T01:02:46.158469", "galaxy_version": "23.1", "command_version": "medaka 1.7.2", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus_pipeline/medaka_consensus_pipeline/1.7.2+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-s424c", "command_line": "cp '/galaxy/server/database/objects/6/d/8/dataset_6d82efbf-a76c-4d91-8a28-a7884e0ac34d.dat' 'input_assembly.fa' && medaka_consensus -m r941_min_fast_g303 -b 99 -o results -t ${GALAXY_SLOTS:-4} -i '/galaxy/server/database/objects/3/0/3/dataset_30307090-5de2-45e7-8472-f20d62112133.dat' -d 'input_assembly.fa'  2>&1 | tee '/galaxy/server/database/objects/4/9/9/dataset_4992e5b6-5393-4c0b-8e9c-3688bdcc5977.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "out": "[\"consensus\", \"probs\", \"calls\", \"log\", \"gaps\"]", "g": "false", "b": "\"99\"", "m": "\"r941_min_fast_g303\""}, "inputs": {"i": {"id": "8f96fcae24049d4a", "src": "hda", "uuid": "30307090-5de2-45e7-8472-f20d62112133"}, "d": {"id": "90b95855033973a0", "src": "hda", "uuid": "6d82efbf-a76c-4d91-8a28-a7884e0ac34d"}}, "outputs": {"out_consensus": {"id": "283cf191c1bdc989", "src": "hda", "uuid": "1d9590af-cdc7-4b88-8ca4-0cd55702c113"}, "out_probs": {"id": "a57cd1c1c08928db", "src": "hda", "uuid": "a05c8ae9-d552-4980-8885-4bfe573a08aa"}, "out_calls": {"id": "cd89b2e3fa091884", "src": "hda", "uuid": "09cea4a8-a58e-4dad-9564-f62fb4dac9cb"}, "out_gaps": {"id": "9ad997bf97b41fad", "src": "hda", "uuid": "a9394a01-cf35-4957-97cb-48b92f3fffb0"}, "out_log": {"id": "dc542d2af3b9a1c8", "src": "hda", "uuid": "4992e5b6-5393-4c0b-8e9c-3688bdcc5977"}}, "output_collections": {}, "tool_stdout": "Checking program versions\nThis is medaka 1.7.2\nProgram    Version    Required   Pass     \nbcftools   1.15.1     1.11       True     \nbgzip      1.16       1.11       True     \nminimap2   2.24       2.11       True     \nsamtools   1.15.1     1.11       True     \ntabix      1.16       1.11       True     \nAligning basecalls to draft\nCreating fai index file /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.fai\nCreating mmi index file /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi\n[M::mm_idx_gen::0.003*0.93] collected minimizers\n[M::mm_idx_gen::0.004*1.09] sorted minimizers\n[M::main::0.005*1.07] loaded/built the index for 1 target sequence(s)\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*1.07] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa\n[M::main] Real time: 0.011 sec; CPU: 0.006 sec; Peak RSS: 0.003 GB\n[M::main::0.004*1.06] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*1.06] mid_occ = 10\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*1.06] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::worker_pipeline::0.031*3.62] mapped 125 sequences\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/3/0/3/dataset_30307090-5de2-45e7-8472-f20d62112133.dat\n[M::main] Real time: 0.033 sec; CPU: 0.114 sec; Peak RSS: 0.014 GB\nRunning medaka consensus\n[01:03:01 - Predict] Reducing threads to 2, anymore is a waste.\n[01:03:01 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.\n[01:03:01 - Predict] Setting tensorflow inter/intra-op threads to 2/1.\n[01:03:01 - Predict] Processing region(s): 4:0-3792\n[01:03:01 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.\n[01:03:01 - Predict] Processing 1 long region(s) with batching.\n[01:03:01 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5\n[01:03:01 - BAMFile] Creating pool of 16 BAM file sets.\n[01:03:01 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:03:01 - PWorker] Running inference for 0.0M draft bases.\n[01:03:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:03:02 - Sampler] Took 0.18s to make features.\n[01:03:02 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.\n[01:03:02 - PWorker] Processed 0 batches\n[01:03:02 - PWorker] All done, 1 remainder regions.\n[01:03:02 - Predict] Processing 1 short region(s).\n[01:03:02 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5\n[01:03:02 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:03:02 - PWorker] Running inference for 0.0M draft bases.\n[01:03:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:03:02 - Sampler] Took 0.22s to make features.\n[01:03:16 - PWorker] Batches in cache: 1.\n[01:03:16 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 14.1s\n[01:03:16 - PWorker] Processed 1 batches\n[01:03:16 - PWorker] All done, 0 remainder regions.\n[01:03:16 - Predict] Finished processing all regions.\n[01:03:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[01:03:19 - DataIndx] Loaded 1/1 (100.00%) sample files.\nPolished assembly written to results/consensus.fasta, have a nice day.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Checking program versions\nThis is medaka 1.7.2\nProgram    Version    Required   Pass     \nbcftools   1.15.1     1.11       True     \nbgzip      1.16       1.11       True     \nminimap2   2.24       2.11       True     \nsamtools   1.15.1     1.11       True     \ntabix      1.16       1.11       True     \nAligning basecalls to draft\nCreating fai index file /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.fai\nCreating mmi index file /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi\n[M::mm_idx_gen::0.003*0.93] collected minimizers\n[M::mm_idx_gen::0.004*1.09] sorted minimizers\n[M::main::0.005*1.07] loaded/built the index for 1 target sequence(s)\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.005*1.07] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -I 16G -x map-ont -d /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa\n[M::main] Real time: 0.011 sec; CPU: 0.006 sec; Peak RSS: 0.003 GB\n[M::main::0.004*1.06] loaded/built the index for 1 target sequence(s)\n[M::mm_mapopt_update::0.004*1.06] mid_occ = 10\n[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1\n[M::mm_idx_stat::0.004*1.06] distinct minimizers: 688 (100.00% are singletons); average occurrences: 1.000; average spacing: 5.512; total length: 3792\n[M::worker_pipeline::0.031*3.62] mapped 125 sequences\n[M::main] Version: 2.24-r1122\n[M::main] CMD: minimap2 -x map-ont --secondary=no -L --MD -A 2 -B 4 -O 4,24 -E 2,1 -t 8 -a /galaxy/server/database/jobs_directory/000/50/working/input_assembly.fa.map-ont.mmi /galaxy/server/database/objects/3/0/3/dataset_30307090-5de2-45e7-8472-f20d62112133.dat\n[M::main] Real time: 0.033 sec; CPU: 0.114 sec; Peak RSS: 0.014 GB\nRunning medaka consensus\n[01:03:01 - Predict] Reducing threads to 2, anymore is a waste.\n[01:03:01 - Predict] It looks like you are running medaka without a GPU and attempted to set a high number of threads. We have scaled this down to an optimal number. If you wish to improve performance please see https://nanoporetech.github.io/medaka/installation.html#improving-parallelism.\n[01:03:01 - Predict] Setting tensorflow inter/intra-op threads to 2/1.\n[01:03:01 - Predict] Processing region(s): 4:0-3792\n[01:03:01 - Predict] Using model: /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.\n[01:03:01 - Predict] Processing 1 long region(s) with batching.\n[01:03:01 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5\n[01:03:01 - BAMFile] Creating pool of 16 BAM file sets.\n[01:03:01 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:03:01 - PWorker] Running inference for 0.0M draft bases.\n[01:03:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:03:02 - Sampler] Took 0.18s to make features.\n[01:03:02 - Sampler] Region 4:0.0-3791.0 (7485 positions) is smaller than inference chunk length 10000, quarantining.\n[01:03:02 - PWorker] Processed 0 batches\n[01:03:02 - PWorker] All done, 1 remainder regions.\n[01:03:02 - Predict] Processing 1 short region(s).\n[01:03:02 - MdlStore] filepath /usr/local/lib/python3.8/site-packages/medaka/data/r941_min_fast_g303_model.hdf5\n[01:03:02 - Sampler] Initializing sampler for consensus of region 4:0-3792.\n[01:03:02 - PWorker] Running inference for 0.0M draft bases.\n[01:03:02 - Feature] Processed 4:0.0-3791.0 (median depth 78.0)\n[01:03:02 - Sampler] Took 0.22s to make features.\n[01:03:16 - PWorker] Batches in cache: 1.\n[01:03:16 - PWorker] 88.7% Done (0.0/0.0 Mbases) in 14.1s\n[01:03:16 - PWorker] Processed 1 batches\n[01:03:16 - PWorker] All done, 0 remainder regions.\n[01:03:16 - Predict] Finished processing all regions.\n[01:03:18 - DataIndx] Loaded 1/1 (100.00%) sample files.\n[01:03:19 - DataIndx] Loaded 1/1 (100.00%) sample files.\nPolished assembly written to results/consensus.fasta, have a nice day.\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "31 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "31.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:03:19", "plugin": "core", "name": "end_epoch", "raw_value": "1730854999.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:02:48", "plugin": "core", "name": "start_epoch", "raw_value": "1730854968.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "poretools_stats/0.6.1a1.0-0", "has_data": true, "data": {"tool_id": "poretools_stats", "tool_version": "0.6.1a1.0", "test_index": 0, "time_seconds": 49.87533378601074, "inputs": {"input": {"src": "hda", "id": "fcef95b2abf8d3fc"}, "detailed": true, "type": "fwd"}, "job": {"model_class": "Job", "id": "2a4dd6ceeae6804b", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:04:20.479114", "create_time": "2024-11-06T01:03:44.964320", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-ckl8j", "command_line": "poretools stats --type fwd --full-tsv '/galaxy/server/database/objects/d/f/6/dataset_df682857-35e1-4e88-a45b-361fd369b28a.dat' > '/galaxy/server/database/objects/2/d/e/dataset_2def1a11-9e4c-4916-bf0e-f4e5d4c6185d.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "type": "\"fwd\"", "detailed": "true"}, "inputs": {"input": {"id": "fcef95b2abf8d3fc", "src": "hda", "uuid": "df682857-35e1-4e88-a45b-361fd369b28a"}}, "outputs": {"output": {"id": "04f4975dc59c0878", "src": "hda", "uuid": "2def1a11-9e4c-4916-bf0e-f4e5d4c6185d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:04:03", "plugin": "core", "name": "end_epoch", "raw_value": "1730855043.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:04:03", "plugin": "core", "name": "start_epoch", "raw_value": "1730855043.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_stats/0.6.1a1.0-1", "has_data": true, "data": {"tool_id": "poretools_stats", "tool_version": "0.6.1a1.0", "test_index": 1, "time_seconds": 26.506669282913208, "inputs": {"input": {"src": "hda", "id": "37b29c450bd06db7"}, "detailed": false, "type": "rev"}, "job": {"model_class": "Job", "id": "962f6bd1f262b5bb", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:04:47.007977", "create_time": "2024-11-06T01:04:36.237626", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-ngsp5", "command_line": "poretools stats --type rev  '/galaxy/server/database/objects/f/0/e/dataset_f0e3a70e-7f85-4bef-a7ec-ef45f3902b90.dat' > '/galaxy/server/database/objects/8/4/4/dataset_844c148c-72a1-4fa6-9c51-8d783b3d9000.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "type": "\"rev\"", "detailed": "false"}, "inputs": {"input": {"id": "37b29c450bd06db7", "src": "hda", "uuid": "f0e3a70e-7f85-4bef-a7ec-ef45f3902b90"}}, "outputs": {"output": {"id": "d9a387bba7a40abe", "src": "hda", "uuid": "844c148c-72a1-4fa6-9c51-8d783b3d9000"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:04:38", "plugin": "core", "name": "end_epoch", "raw_value": "1730855078.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:04:37", "plugin": "core", "name": "start_epoch", "raw_value": "1730855077.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_stats/0.6.1a1.0-2", "has_data": true, "data": {"tool_id": "poretools_stats", "tool_version": "0.6.1a1.0", "test_index": 2, "time_seconds": 27.16874599456787, "inputs": {"input": {"src": "hda", "id": "7ce585b99adcf702"}, "detailed": true, "type": "2D"}, "job": {"model_class": "Job", "id": "a0adee502c0141c2", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:05:14.524542", "create_time": "2024-11-06T01:05:02.801560", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-7j8rd", "command_line": "poretools stats --type 2D --full-tsv '/galaxy/server/database/objects/2/a/c/dataset_2ac9659d-14c3-42ca-8ba9-3955f2a30c2d.dat' > '/galaxy/server/database/objects/8/e/a/dataset_8ead4591-058c-4448-a849-e9393a9c6101.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "type": "\"2D\"", "detailed": "true"}, "inputs": {"input": {"id": "7ce585b99adcf702", "src": "hda", "uuid": "2ac9659d-14c3-42ca-8ba9-3955f2a30c2d"}}, "outputs": {"output": {"id": "7746afdfcd141a6b", "src": "hda", "uuid": "8ead4591-058c-4448-a849-e9393a9c6101"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:05:05", "plugin": "core", "name": "end_epoch", "raw_value": "1730855105.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:05:04", "plugin": "core", "name": "start_epoch", "raw_value": "1730855104.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_stats/0.6.1a1.0-3", "has_data": true, "data": {"tool_id": "poretools_stats", "tool_version": "0.6.1a1.0", "test_index": 3, "time_seconds": 28.71186351776123, "inputs": {"input": {"src": "hda", "id": "c331ef5b90cefa15"}, "detailed": false, "type": "best"}, "job": {"model_class": "Job", "id": "e0b63d6148c182e3", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:05:43.097905", "create_time": "2024-11-06T01:05:31.285618", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-pctgf", "command_line": "poretools stats --type best  '/galaxy/server/database/objects/1/e/8/dataset_1e8b13e9-5595-4379-b8d7-54f8c16d0897.dat' > '/galaxy/server/database/objects/0/8/7/dataset_08721434-cd78-43fb-b879-1f2e0dd7eff7.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "type": "\"best\"", "detailed": "false"}, "inputs": {"input": {"id": "c331ef5b90cefa15", "src": "hda", "uuid": "1e8b13e9-5595-4379-b8d7-54f8c16d0897"}}, "outputs": {"output": {"id": "98ab42d43ed07049", "src": "hda", "uuid": "08721434-cd78-43fb-b879-1f2e0dd7eff7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:05:34", "plugin": "core", "name": "end_epoch", "raw_value": "1730855134.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:05:33", "plugin": "core", "name": "start_epoch", "raw_value": "1730855133.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_stats/0.6.1a1.0-4", "has_data": true, "data": {"tool_id": "poretools_stats", "tool_version": "0.6.1a1.0", "test_index": 4, "time_seconds": 25.051223039627075, "inputs": {"input": {"src": "hda", "id": "75c53c7ce527c0c6"}, "detailed": true, "type": "all"}, "job": {"model_class": "Job", "id": "684da9cecaeb2d47", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:06:08.285344", "create_time": "2024-11-06T01:05:57.355023", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_stats/poretools_stats/0.6.1a1.0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-6bsd2", "command_line": "poretools stats --type all --full-tsv '/galaxy/server/database/objects/8/5/d/dataset_85d0bda2-de83-4dd2-9fa7-b0d988f19cff.dat' > '/galaxy/server/database/objects/1/2/4/dataset_1247416b-49f3-4701-b95e-1c05c20d3589.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "type": "\"all\"", "detailed": "true"}, "inputs": {"input": {"id": "75c53c7ce527c0c6", "src": "hda", "uuid": "85d0bda2-de83-4dd2-9fa7-b0d988f19cff"}}, "outputs": {"output": {"id": "61f926159b31f327", "src": "hda", "uuid": "1247416b-49f3-4701-b95e-1c05c20d3589"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:05:59", "plugin": "core", "name": "end_epoch", "raw_value": "1730855159.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:05:58", "plugin": "core", "name": "start_epoch", "raw_value": "1730855158.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtool_filter2/1.8+galaxy1-0", "has_data": true, "data": {"tool_id": "samtool_filter2", "tool_version": "1.8+galaxy1", "test_index": 0, "time_seconds": 28.698724269866943, "inputs": {"input1": {"src": "hda", "id": "14d8ac9f06698d01"}, "header": "", "flag|reqBits": "0x0080", "flag|filter": "yes", "outputtype": "sam"}, "job": {"model_class": "Job", "id": "d46f4f01bba9ee21", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:55:08.142113", "create_time": "2024-11-06T00:54:54.084798", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtool_filter2/samtool_filter2/1.8+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-srxjq", "command_line": "ln -s '/galaxy/server/database/objects/7/b/3/dataset_7b30f4a4-91a2-473d-b25e-dd50d664727a.dat' input.sam && samtools view -o '/galaxy/server/database/objects/6/0/b/dataset_60ba6e53-4b62-479f-814f-dff4705b799f.dat'   -S   -f 0x80 input.sam", "traceback": null, "params": {"header": "\"\"", "mapq": "\"\"", "flag": "{\"__current_case__\": 1, \"filter\": \"yes\", \"reqBits\": \"0x0080\", \"skipBits\": null}", "library": "\"\"", "read_group": "\"\"", "bed_file": null, "possibly_select_inverse": "false", "regions": "\"\"", "outputtype": "\"sam\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input1": {"id": "14d8ac9f06698d01", "src": "hda", "uuid": "7b30f4a4-91a2-473d-b25e-dd50d664727a"}}, "outputs": {"output1": {"id": "f69ce5169236ed4f", "src": "hda", "uuid": "60ba6e53-4b62-479f-814f-dff4705b799f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:54:59", "plugin": "core", "name": "start_epoch", "raw_value": "1730854499.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:54:59", "plugin": "core", "name": "end_epoch", "raw_value": "1730854499.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "samtool_filter2/1.8+galaxy1-1", "has_data": true, "data": {"tool_id": "samtool_filter2", "tool_version": "1.8+galaxy1", "test_index": 1, "time_seconds": 26.20472002029419, "inputs": {"input1": {"src": "hda", "id": "2a4dd6ceeae6804b"}, "header": "", "flag|filter": "no", "read_group": "rg1", "outputtype": "sam"}, "job": {"model_class": "Job", "id": "3ccff8ff27cab51e", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:55:34.340532", "create_time": "2024-11-06T00:55:23.548235", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtool_filter2/samtool_filter2/1.8+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-4p64p", "command_line": "ln -s '/galaxy/server/database/objects/9/9/4/dataset_99443071-f8e5-4f12-866e-12c3aef054d1.dat' input.sam && samtools view -o '/galaxy/server/database/objects/9/1/7/dataset_9174a8e1-966c-4035-9fab-72e871fa84fd.dat'   -S   -r 'rg1' input.sam", "traceback": null, "params": {"header": "\"\"", "mapq": "\"\"", "flag": "{\"__current_case__\": 0, \"filter\": \"no\"}", "library": "\"\"", "read_group": "\"rg1\"", "bed_file": null, "possibly_select_inverse": "false", "regions": "\"\"", "outputtype": "\"sam\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input1": {"id": "2a4dd6ceeae6804b", "src": "hda", "uuid": "99443071-f8e5-4f12-866e-12c3aef054d1"}}, "outputs": {"output1": {"id": "5d9fbd086a30e708", "src": "hda", "uuid": "9174a8e1-966c-4035-9fab-72e871fa84fd"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:55:25", "plugin": "core", "name": "start_epoch", "raw_value": "1730854525.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:55:25", "plugin": "core", "name": "end_epoch", "raw_value": "1730854525.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "samtool_filter2/1.8+galaxy1-2", "has_data": true, "data": {"tool_id": "samtool_filter2", "tool_version": "1.8+galaxy1", "test_index": 2, "time_seconds": 20.650137186050415, "inputs": {"input1": {"src": "hda", "id": "962f6bd1f262b5bb"}, "header": "", "mapq": "250", "flag|skipBits": "0x0008", "flag|filter": "yes", "outputtype": "sam"}, "job": {"model_class": "Job", "id": "ce35188459935976", "state": "error", "exit_code": null, "update_time": "2024-11-06T00:55:55.264562", "create_time": "2024-11-06T00:55:49.752823", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtool_filter2/samtool_filter2/1.8+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-5zl5z", "command_line": "ln -s '/galaxy/server/database/objects/6/8/c/dataset_68c126fc-7762-445a-a401-3926ae2ce614.dat' input.sam && samtools view -o '/galaxy/server/database/objects/1/a/8/dataset_1a871876-b77e-4dea-bd61-10b8c96bd9ca.dat'   -S   -q 250 -F 0x8 input.sam", "traceback": null, "params": {"header": "\"\"", "mapq": "\"250\"", "flag": "{\"__current_case__\": 1, \"filter\": \"yes\", \"reqBits\": null, \"skipBits\": \"0x0008\"}", "library": "\"\"", "read_group": "\"\"", "bed_file": null, "possibly_select_inverse": "false", "regions": "\"\"", "outputtype": "\"sam\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"sam\""}, "inputs": {"input1": {"id": "962f6bd1f262b5bb", "src": "hda", "uuid": "68c126fc-7762-445a-a401-3926ae2ce614"}}, "outputs": {"output1": {"id": "062ad5c85ec61354", "src": "hda", "uuid": "1a871876-b77e-4dea-bd61-10b8c96bd9ca"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtool_filter2/samtool_filter2/1.8+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtool_filter2/samtool_filter2/1.8+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "snpeff_sars_cov_2/4.5covid19-0", "has_data": true, "data": {"tool_id": "snpeff_sars_cov_2", "tool_version": "4.5covid19", "test_index": 0, "time_seconds": 50.30788779258728, "inputs": {"input": {"src": "hda", "id": "ecb9ae989765cd64"}, "inputFormat": "vcf", "genome_version": "NC_045512.2", "outputConditional|outputFormat": "vcf", "udLength": "0", "generate_stats": false}, "job": {"model_class": "Job", "id": "a57cd1c1c08928db", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:13:08.428936", "create_time": "2024-11-06T01:12:33.189005", "galaxy_version": "23.1", "command_version": "SnpEff\t4.5covid19\t2020-04-15", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/snpeff_sars_cov_2/snpeff_sars_cov_2/4.5covid19", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-b5lqf", "command_line": "snpEff -Xmx${GALAXY_MEMORY_MB:-8192}m eff -i vcf -o vcf -upDownStreamLen 0 -noLog  NC_045512.2  '/galaxy/server/database/objects/b/6/0/dataset_b60279bf-27fe-41db-a4d6-f97ba7d6c8c9.dat' > '/galaxy/server/database/objects/a/6/2/dataset_a6292ca6-4f2e-4b6d-8867-958e3a7e2249.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "noLog": "true", "generate_stats": "false", "chr": null, "offset": "\"default\"", "filter": "{\"__current_case__\": 0, \"specificEffects\": \"no\"}", "filterOut": null, "transcripts": null, "intervals": null, "annotations": null, "udLength": "\"0\"", "csvStats": "false", "outputConditional": "{\"__current_case__\": 0, \"outputFormat\": \"vcf\"}", "genome_version": "\"NC_045512.2\"", "inputFormat": "\"vcf\""}, "inputs": {"input": {"id": "ecb9ae989765cd64", "src": "hda", "uuid": "b60279bf-27fe-41db-a4d6-f97ba7d6c8c9"}}, "outputs": {"snpeff_output": {"id": "098f748fe534de1e", "src": "hda", "uuid": "a6292ca6-4f2e-4b6d-8867-958e3a7e2249"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "6 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "6.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:12:55", "plugin": "core", "name": "end_epoch", "raw_value": "1730855575.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:12:49", "plugin": "core", "name": "start_epoch", "raw_value": "1730855569.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 49.75902724266052, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "b8eef4984fc62562"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "69173e6c9ae17354"}}, "job": {"model_class": "Job", "id": "5e536259e52c0405", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:08:13.392310", "create_time": "2024-11-06T01:07:40.169205", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-lkft7", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat --pe1-2 fastq:/galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat && python '/galaxy/server/database/jobs_directory/000/67/configs/tmp3l5oyua_' < contigs.fasta > '/galaxy/server/database/objects/4/e/a/dataset_4ea9dc6d-866e-42e4-8c7d-f74fd95f0cc6.dat' && python '/galaxy/server/database/jobs_directory/000/67/configs/tmp3l5oyua_' < scaffolds.fasta > '/galaxy/server/database/objects/1/9/a/dataset_19afa2a6-4a3d-4848-b2b6-ededf9b80ec6.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 107, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 108, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "b8eef4984fc62562", "src": "hda", "uuid": "fc2f9bcd-fce2-4af7-89f2-72629f590efa"}, "libraries_0|files_0|file_type|rev_reads": {"id": "69173e6c9ae17354", "src": "hda", "uuid": "ca450671-b5cb-40a1-b745-91f3030b019c"}}, "outputs": {"out_contig_stats": {"id": "3b4060f5f3f1562e", "src": "hda", "uuid": "4ea9dc6d-866e-42e4-8c7d-f74fd95f0cc6"}, "out_scaffold_stats": {"id": "05f16809dbd6e8ca", "src": "hda", "uuid": "19afa2a6-4a3d-4848-b2b6-ededf9b80ec6"}, "out_contigs": {"id": "869baa31a71c3298", "src": "hda", "uuid": "ea4909fc-dc26-492a-8b90-e453d59ac116"}, "out_scaffolds": {"id": "1841e7cec76c7b03", "src": "hda", "uuid": "be169a47-6346-452c-b3f2-a3d1fa155b2c"}, "out_log": {"id": "d1754535abb69c96", "src": "hda", "uuid": "19f46b15-49bd-4aef-8ab0-28bbcd1dfd48"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/67/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/67/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat']\n      right reads: ['/galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/67/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/67/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/67/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/67/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\n  0:00:01.192     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:02.309     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.323    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.924    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.947    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.972    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.974    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.977    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.978    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.987    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.987    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.987    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\n  0:00:03.002    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:03.016    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.016    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.016    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.029    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.030    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.041    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.041    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.041    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.041    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat and /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:03.084    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.087    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.091    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.135    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/67/working/corrected/corrected.yaml\n  0:00:03.140    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/67/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/67/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/67/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.224   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.239     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.369   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.501     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.501     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.501     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.501     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.502     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.502     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.502     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.120     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.130    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.130    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.323    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.323    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.444    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.444    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.444    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.445    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.445    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.445    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.673     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.688    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.312    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.335    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.360    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.360    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.363    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.363    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nsing short gaps\n  0:00:10.046    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.048    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.048    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.049    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.049    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.049    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.065    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.065    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.065    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/before_rr.fasta\n  0:00:10.070    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph.fastg\n  0:00:10.075    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/simplified_contigs.fasta\n  0:00:10.082    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/intermediate_contigs.fasta\n  0:00:10.089    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.089    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.089    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.187   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.354   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.604   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.604   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.625    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.733   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.738   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.741   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.758   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.762   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.793    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.793    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.793    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.793    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.793    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.793    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.793    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.793    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.795    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.795    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.796    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/before_rr.fasta\n  0:00:10.802    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph.fastg\n  0:00:10.810    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/67/working//K33/final_contigs.paths\n  0:00:10.821    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/67/working//K33/scaffolds.paths\n  0:00:10.837    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.840    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/67/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/67/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/67/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/67/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/67/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/67/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/67/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/67/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/67/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/67/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat']\n      right reads: ['/galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/67/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/67/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/67/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/67/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\n  0:00:01.192     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:02.309     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.323    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.924    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.947    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.972    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.974    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.977    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.978    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.987    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.987    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.987    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat\n  0:00:03.002    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:03.016    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:03.016    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:03.016    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:03.028    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:03.029    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:03.030    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.041    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.041    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.041    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.041    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/c/2/dataset_fc2f9bcd-fce2-4af7-89f2-72629f590efa.dat and /galaxy/server/database/objects/c/a/4/dataset_ca450671-b5cb-40a1-b745-91f3030b019c.dat\n  0:00:03.084    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.087    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.091    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.135    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/67/working/corrected/corrected.yaml\n  0:00:03.140    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/67/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/67/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/67/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.224   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.239     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.369   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.501     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.501     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.501     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.501     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.502     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.502     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.502     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.120     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.130    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.130    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.323    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.323    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.444    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.444    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.444    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.445    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.445    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.445    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.673     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.688    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:03.078    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.312    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.335    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.360    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.360    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.363    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.363    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nsing short gaps\n  0:00:10.046    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.048    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.048    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.048    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.048    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.049    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.049    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:10.049    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.049    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.049    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.059    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.065    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.065    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.065    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/before_rr.fasta\n  0:00:10.070    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph.fastg\n  0:00:10.075    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/simplified_contigs.fasta\n  0:00:10.082    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/intermediate_contigs.fasta\n  0:00:10.089    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.089    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.089    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.089    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.187   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.354   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.604   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.604   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.625    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.733   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.738   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.741   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.744   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.758   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.762   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.793    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.793    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.793    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.793    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.793    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.793    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.793    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.793    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.793    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.793    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.795    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.795    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.795    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.795    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.795    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.795    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.796    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/67/working//K33/before_rr.fasta\n  0:00:10.802    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/67/working//K33/assembly_graph.fastg\n  0:00:10.810    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/67/working//K33/final_contigs.paths\n  0:00:10.821    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/67/working//K33/scaffolds.paths\n  0:00:10.837    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.840    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/67/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/67/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/67/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/67/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/67/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/67/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/67/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/67/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "15 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "15.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:08:03", "plugin": "core", "name": "end_epoch", "raw_value": "1730855283.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:07:48", "plugin": "core", "name": "start_epoch", "raw_value": "1730855268.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 39.56008791923523, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "b1c0fcabb30feddb"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "9852dffc8b76c033"}}, "job": {"model_class": "Job", "id": "b7b9928daf4a5115", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:08:53.110010", "create_time": "2024-11-06T01:08:31.240807", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-x8vp8", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/4/e/e/dataset_4ee68d7b-af84-4827-8348-a5ef26b2b85e.dat --pe1-2 fasta:/galaxy/server/database/objects/4/6/1/dataset_461fb54e-cff9-4ccb-9ad4-d58457fc5b57.dat && python '/galaxy/server/database/jobs_directory/000/70/configs/tmp_hhxzwji' < contigs.fasta > '/galaxy/server/database/objects/4/e/3/dataset_4e392597-2fe0-478c-a96f-0d1c8dd10d3f.dat' && python '/galaxy/server/database/jobs_directory/000/70/configs/tmp_hhxzwji' < scaffolds.fasta > '/galaxy/server/database/objects/4/7/f/dataset_47f134f6-0068-4cf8-a14e-1ed0f2d54164.dat'", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 115, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "true", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "b1c0fcabb30feddb", "src": "hda", "uuid": "4ee68d7b-af84-4827-8348-a5ef26b2b85e"}, "libraries_0|files_0|file_type|rev_reads": {"id": "9852dffc8b76c033", "src": "hda", "uuid": "461fb54e-cff9-4ccb-9ad4-d58457fc5b57"}}, "outputs": {"out_contig_stats": {"id": "cb532c5f8b0e29ac", "src": "hda", "uuid": "4e392597-2fe0-478c-a96f-0d1c8dd10d3f"}, "out_scaffold_stats": {"id": "aab7742cbfaa8911", "src": "hda", "uuid": "47f134f6-0068-4cf8-a14e-1ed0f2d54164"}, "out_contigs": {"id": "2ec0c950221599ca", "src": "hda", "uuid": "3157a1ba-1e00-4ea9-b251-b5043df003e9"}, "out_scaffolds": {"id": "02f8ff122f8691e3", "src": "hda", "uuid": "f7dafa73-e4f2-4af4-a421-72c935a57e33"}, "out_log": {"id": "fdf0137a46a0b5f9", "src": "hda", "uuid": "41159b87-92fd-4a68-a56c-fc8597171bce"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/70/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/4/e/e/dataset_4ee68d7b-af84-4827-8348-a5ef26b2b85e.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/4/6/1/dataset_461fb54e-cff9-4ccb-9ad4-d58457fc5b57.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/70/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/e/e/dataset_4ee68d7b-af84-4827-8348-a5ef26b2b85e.dat']\n      right reads: ['/galaxy/server/database/objects/4/6/1/dataset_461fb54e-cff9-4ccb-9ad4-d58457fc5b57.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/70/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/70/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/70/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/70/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.084    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.093     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.236     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.363   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.469     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.469     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.469     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.470     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.471     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.471     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.471     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.056     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.065    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.065    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.250    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.250    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.368    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.368    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.368    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.369    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.369    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.369    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.500     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.516    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:02.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.125    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.148    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.170    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.170    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.173    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.173    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.175    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.175    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.175    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.175    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.189    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.189    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.195    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.204    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.241    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.335    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.679    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.266    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.328    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.052    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.053    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.053    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.055    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.055    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.056    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.056    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.056    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:08.123     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:08.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:08.514    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:08.514    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:08.751    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:08.774    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:08.801    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:08.801    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:08.803    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:08.805    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:08.805    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:08.807    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:08.807    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:08.807    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:08.807    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.809    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:08.809    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:08.809    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:08.809    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:08.809    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08\n..\n.548    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:10.548    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.550    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.550    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.550    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.550    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.551    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:10.551    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.551    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.551    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.567    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.567    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.567    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/before_rr.fasta\n  0:00:10.572    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph.fastg\n  0:00:10.576    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/simplified_contigs.fasta\n  0:00:10.580    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/intermediate_contigs.fasta\n  0:00:10.587    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.587    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.587    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.680   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.846   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:11.117    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.228   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.230   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.245   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.249   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.280    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.280    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.280    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.280    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.280    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.280    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.280    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.280    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.282    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.282    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.283    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/before_rr.fasta\n  0:00:11.289    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph.fastg\n  0:00:11.296    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/70/working//K33/final_contigs.paths\n  0:00:11.306    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/70/working//K33/scaffolds.paths\n  0:00:11.324    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.327    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/70/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/70/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/70/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/70/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/70/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/70/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/70/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/70/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/4/e/e/dataset_4ee68d7b-af84-4827-8348-a5ef26b2b85e.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/4/6/1/dataset_461fb54e-cff9-4ccb-9ad4-d58457fc5b57.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/70/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/e/e/dataset_4ee68d7b-af84-4827-8348-a5ef26b2b85e.dat']\n      right reads: ['/galaxy/server/database/objects/4/6/1/dataset_461fb54e-cff9-4ccb-9ad4-d58457fc5b57.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/70/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/70/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/70/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/70/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.084    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.093     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.236     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.363   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.469     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.469     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.469     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.470     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.471     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.471     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.471     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.056     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.065    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.065    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.250    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:01.250    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.368    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.368    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.368    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.369    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.369    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.369    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.500     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:02.516    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:02.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.125    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.148    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.170    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:03.170    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.173    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.173    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:03.174    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:03.175    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:03.175    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:03.175    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:03.175    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.189    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:03.189    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:03.195    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:03.204    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:03.204    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.241    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.335    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.679    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.266    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.328    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:07.052    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:07.053    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:07.053    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:07.053    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:07.053    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:07.055    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:07.055    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:07.056    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:07.056    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:07.056    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:08.123     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:08.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:08.514    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:08.514    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:08.751    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:08.774    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:08.801    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:08.801    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:08.803    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:08.805    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:08.805    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:08.807    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:08.807    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:08.807    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:08.807    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.809    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:08.809    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:08.809    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:08.809    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:08.809    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:08.809    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:08.809    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08\n..\n.548    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:10.548    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:10.550    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:10.550    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:10.550    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:10.550    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:10.551    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:10.551    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:10.551    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:10.551    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:10.551    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.551    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:10.562    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:10.567    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.567    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.567    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/before_rr.fasta\n  0:00:10.572    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph.fastg\n  0:00:10.576    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/simplified_contigs.fasta\n  0:00:10.580    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/intermediate_contigs.fasta\n  0:00:10.587    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:10.587    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:10.587    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:10.587    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:10.680   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.846   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:11.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:11.117    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:11.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:11.228   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.230   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:11.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:11.245   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:11.249   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:11.280    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:11.280    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:11.280    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.280    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:11.280    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:11.280    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:11.280    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:11.280    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:11.280    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:11.280    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:11.282    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:11.282    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:11.282    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:11.282    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:11.282    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:11.282    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:11.283    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/70/working//K33/before_rr.fasta\n  0:00:11.289    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/70/working//K33/assembly_graph.fastg\n  0:00:11.296    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/70/working//K33/final_contigs.paths\n  0:00:11.306    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/70/working//K33/scaffolds.paths\n  0:00:11.324    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:11.327    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/70/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/70/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/70/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/70/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/70/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/70/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/70/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "12 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "12.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:08:45", "plugin": "core", "name": "end_epoch", "raw_value": "1730855325.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:08:33", "plugin": "core", "name": "start_epoch", "raw_value": "1730855313.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 42.36462593078613, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "937074b0533002a0"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "90a758d15a60d8e3"}}, "job": {"model_class": "Job", "id": "aa9dcbd58fa0a3c0", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:09:35.694088", "create_time": "2024-11-06T01:09:11.021523", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-lm7ww", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat && python '/galaxy/server/database/jobs_directory/000/73/configs/tmp3r_no919' < contigs.fasta > '/galaxy/server/database/objects/a/3/3/dataset_a3351b90-0dbe-4a8b-a488-38d7474b9d9b.dat' && python '/galaxy/server/database/jobs_directory/000/73/configs/tmp3r_no919' < scaffolds.fasta > '/galaxy/server/database/objects/e/a/e/dataset_eae4465c-a3a9-46ce-a4c4-c400330f897c.dat'", "traceback": null, "params": {"__input_ext": "\"fastq.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 121, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 122, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "937074b0533002a0", "src": "hda", "uuid": "7c1f04f7-a3fb-485d-ae66-59a9575d9671"}, "libraries_0|files_0|file_type|rev_reads": {"id": "90a758d15a60d8e3", "src": "hda", "uuid": "e1320c1d-7df1-4114-bf5c-abc22f5d5ba9"}}, "outputs": {"out_contig_stats": {"id": "01fd117177a96d7d", "src": "hda", "uuid": "a3351b90-0dbe-4a8b-a488-38d7474b9d9b"}, "out_scaffold_stats": {"id": "3ce0aebc64da62ea", "src": "hda", "uuid": "eae4465c-a3a9-46ce-a4c4-c400330f897c"}, "out_contigs": {"id": "5a9fd6f6c2aa0dd3", "src": "hda", "uuid": "b16010e5-bd30-4a01-a378-5e71671ff1c3"}, "out_scaffolds": {"id": "5e5d632878b8a4ba", "src": "hda", "uuid": "a085b756-53a5-4520-90ed-2ed2524f06ef"}, "out_log": {"id": "4c55ff9c01da92dd", "src": "hda", "uuid": "510345cd-1562-4098-8ff8-f43b2f300807"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/73/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/73/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat']\n      right reads: ['/galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/73/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/73/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/73/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/73/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\n  0:00:01.104     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.105     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.118    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.425    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.425    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.647    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.670    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.691    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.693    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.696    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.697    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.704    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.704    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.704    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\n  0:00:02.717    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.730    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.730    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.730    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.744    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.744    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.758    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.758    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.758    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.758    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat and /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.804    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.808    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.812    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.848    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.848    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.848    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/73/working/corrected/corrected.yaml\n  0:00:02.852    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/73/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/73/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/73/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.235     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.360   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.497     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.497     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.497     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.498     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.499     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.499     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.499     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.075     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.085    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.085    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.277    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.277    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.403    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.404    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.404    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.405    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.502     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.517    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.895    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.895    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.126    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.151    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.176    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.176    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.179    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.179    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCED\n..\nsing short gaps\n  0:00:09.544    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.546    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.546    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.546    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.546    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.562    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.562    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.562    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/before_rr.fasta\n  0:00:09.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph.fastg\n  0:00:09.571    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/simplified_contigs.fasta\n  0:00:09.575    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/intermediate_contigs.fasta\n  0:00:09.583    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.583    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.583    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.678   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.846   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.116    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.228   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.230   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.234   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.234   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.246   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.250   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.282    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.282    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.282    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.282    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.282    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.283    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.283    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.283    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.283    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.283    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.283    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.283    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.284    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.284    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.286    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/before_rr.fasta\n  0:00:10.291    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph.fastg\n  0:00:10.296    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/73/working//K33/final_contigs.paths\n  0:00:10.307    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/73/working//K33/scaffolds.paths\n  0:00:10.325    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.328    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/73/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/73/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/73/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/73/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/73/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/73/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/73/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/73/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/73/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/73/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat']\n      right reads: ['/galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/73/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/73/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/73/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/73/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\n  0:00:01.104     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.105     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.118    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.425    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.425    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.647    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.670    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.691    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.693    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.696    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.697    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.704    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.704    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.704    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat\n  0:00:02.717    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.730    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.730    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.730    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.743    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.744    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.744    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.758    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.758    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.758    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.758    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/c/1/dataset_7c1f04f7-a3fb-485d-ae66-59a9575d9671.dat and /galaxy/server/database/objects/e/1/3/dataset_e1320c1d-7df1-4114-bf5c-abc22f5d5ba9.dat\n  0:00:02.804    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.808    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.812    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.848    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.848    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.848    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/73/working/corrected/corrected.yaml\n  0:00:02.852    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/73/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/73/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/73/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.235     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.360   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.497     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.497     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.497     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.498     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.499     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.499     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.499     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.075     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.085    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.085    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.277    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.277    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.403    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.404    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.404    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.405    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.405    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.502     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.517    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.895    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.895    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.126    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.151    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.176    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.176    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.179    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.179    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCED\n..\nsing short gaps\n  0:00:09.544    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.546    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.546    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.546    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.546    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.546    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.546    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.546    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.557    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.562    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.562    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.562    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/before_rr.fasta\n  0:00:09.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph.fastg\n  0:00:09.571    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/simplified_contigs.fasta\n  0:00:09.575    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/intermediate_contigs.fasta\n  0:00:09.583    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.583    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.583    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.583    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.678   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.846   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:10.094   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:10.116    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.223   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.228   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.230   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.233   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.234   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.234   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.246   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.250   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.282    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.282    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.282    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.282    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.282    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.282    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.283    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.283    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.283    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.283    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.283    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.283    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.283    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.283    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.284    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.284    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.284    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.284    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.284    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.284    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.286    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/73/working//K33/before_rr.fasta\n  0:00:10.291    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/73/working//K33/assembly_graph.fastg\n  0:00:10.296    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/73/working//K33/final_contigs.paths\n  0:00:10.307    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/73/working//K33/scaffolds.paths\n  0:00:10.325    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.328    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/73/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/73/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/73/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/73/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/73/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/73/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/73/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/73/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "14 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "14.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:09:27", "plugin": "core", "name": "end_epoch", "raw_value": "1730855367.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:09:13", "plugin": "core", "name": "start_epoch", "raw_value": "1730855353.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 51.84014630317688, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "a84dea9d6285c8d7"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "f59631115d60633b"}}, "job": {"model_class": "Job", "id": "b2797ccaf4cf60c5", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:10:27.779834", "create_time": "2024-11-06T01:09:52.834009", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-hgjjd", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat --pe1-2 fastq:/galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat && python '/galaxy/server/database/jobs_directory/000/76/configs/tmp_sof0o4k' < contigs.fasta > '/galaxy/server/database/objects/f/5/1/dataset_f517049e-710d-47c0-8029-d54909022ca4.dat' && python '/galaxy/server/database/jobs_directory/000/76/configs/tmp_sof0o4k' < scaffolds.fasta > '/galaxy/server/database/objects/7/8/c/dataset_78ca9619-0c68-4b22-a430-4699ec50203b.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 128, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": true}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "a84dea9d6285c8d7", "src": "hda", "uuid": "dfce5778-a1ee-4220-addc-96c87e9b39f5"}, "libraries_0|files_0|file_type|rev_reads": {"id": "f59631115d60633b", "src": "hda", "uuid": "08af12fa-de71-47a5-ac68-7b452928f5be"}}, "outputs": {"out_contig_stats": {"id": "14b08314e482e455", "src": "hda", "uuid": "f517049e-710d-47c0-8029-d54909022ca4"}, "out_scaffold_stats": {"id": "551660a555eb2425", "src": "hda", "uuid": "78ca9619-0c68-4b22-a430-4699ec50203b"}, "out_contigs": {"id": "e60ee0b94c27e6a9", "src": "hda", "uuid": "01626bae-c4d5-4c5b-814e-6653f780dfa1"}, "out_scaffolds": {"id": "ce6c4dea9129d2e7", "src": "hda", "uuid": "87d308f4-fa5d-4268-880f-6a85bd95d71b"}, "out_log": {"id": "fc0c493303d053ea", "src": "hda", "uuid": "2f9c1460-7cf5-4657-9cf4-71792ceae3c0"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/76/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/76/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat']\n      right reads: ['/galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/76/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/76/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/76/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/76/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\n  0:00:01.174     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:02.267     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.281    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.626    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.626    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.878    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.901    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.928    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.930    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.934    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.935    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.946    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\n  0:00:02.960    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:02.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.975    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.990    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.990    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.000    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.000    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat and /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:03.043    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.048    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.051    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.090    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.090    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.090    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/76/working/corrected/corrected.yaml\n  0:00:03.095    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/76/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/76/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/76/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.221   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.237     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.368   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.496     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.496     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.496     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.497     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.103     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.113    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.113    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.321    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.321    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.439    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.440    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.440    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.441    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.441    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.441    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.646     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.665    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.418    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.445    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.478    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.478    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.481    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.482    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.482    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ear\n..\n short gaps\n  0:00:07.506    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.507    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:07.507    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.507    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.508    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.524    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.524    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:07.524    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/before_rr.fasta\n  0:00:07.531    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph.fastg\n  0:00:07.536    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/simplified_contigs.fasta\n  0:00:07.541    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/intermediate_contigs.fasta\n  0:00:07.552    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.552    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.552    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.647   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.815   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.065   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.065   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:08.093    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.202   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.207   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.209   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.225   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.229   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.261    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.261    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.261    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.261    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.261    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.262    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.262    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.262    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.262    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.262    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.262    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.262    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.263    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.263    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.264    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.264    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.264    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.264    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.265    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/before_rr.fasta\n  0:00:08.270    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph.fastg\n  0:00:08.275    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/76/working//K55/final_contigs.paths\n  0:00:08.286    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/76/working//K55/scaffolds.paths\n  0:00:08.309    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.312    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/76/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/76/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/76/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/76/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/76/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/76/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/76/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/76/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/76/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/76/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat']\n      right reads: ['/galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/76/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/76/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/76/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/76/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\n  0:00:01.174     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:02.267     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.281    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.626    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.626    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.878    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.901    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.928    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.930    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.934    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.935    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.946    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat\n  0:00:02.960    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:02.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.975    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.989    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.990    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.990    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:03.000    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:03.000    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/f/c/dataset_dfce5778-a1ee-4220-addc-96c87e9b39f5.dat and /galaxy/server/database/objects/0/8/a/dataset_08af12fa-de71-47a5-ac68-7b452928f5be.dat\n  0:00:03.043    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:03.048    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:03.051    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:03.090    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:03.090    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:03.090    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/76/working/corrected/corrected.yaml\n  0:00:03.095    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/76/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/76/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/76/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.221   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.237     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.368   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.496     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.496     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.496     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.497     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.497     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:01.103     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.113    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.113    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.321    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:01.321    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.439    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.440    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.440    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.441    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.441    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.441    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.646     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:02.665    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:03.120    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.418    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.445    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.478    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:03.478    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.481    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.482    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:03.482    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ear\n..\n short gaps\n  0:00:07.506    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.507    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.507    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.507    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.507    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:07.507    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.507    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.508    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.517    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.524    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.524    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:07.524    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/before_rr.fasta\n  0:00:07.531    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph.fastg\n  0:00:07.536    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/simplified_contigs.fasta\n  0:00:07.541    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/intermediate_contigs.fasta\n  0:00:07.552    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.552    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.552    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.552    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.647   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.815   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.065   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.065   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:08.093    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.202   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.207   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.209   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.212   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.225   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.229   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.261    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.261    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.261    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.261    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.261    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.261    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.262    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.262    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.262    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.262    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.262    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.262    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.262    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.262    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.263    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.263    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.263    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.263    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.263    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.264    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.264    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.264    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.264    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.264    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.264    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:08.265    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/76/working//K55/before_rr.fasta\n  0:00:08.270    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/76/working//K55/assembly_graph.fastg\n  0:00:08.275    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/76/working//K55/final_contigs.paths\n  0:00:08.286    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/76/working//K55/scaffolds.paths\n  0:00:08.309    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.312    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/76/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/76/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/76/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/76/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/76/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/76/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/76/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/76/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "25 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "25.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:10:19", "plugin": "core", "name": "end_epoch", "raw_value": "1730855419.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:09:54", "plugin": "core", "name": "start_epoch", "raw_value": "1730855394.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 37.671799659729004, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "440cb45a940faf4f"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "bcf69509a68e16b2"}}, "job": {"model_class": "Job", "id": "7b7acdd234f16c31", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:11:05.338797", "create_time": "2024-11-06T01:10:43.766110", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-pf4vg", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat --pe1-2 fastq:/galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat && python '/galaxy/server/database/jobs_directory/000/79/configs/tmp6xg7zked' < contigs.fasta > '/galaxy/server/database/objects/9/a/5/dataset_9a58d0a8-fe7e-4330-a65a-3847b0c1c03c.dat' && python '/galaxy/server/database/jobs_directory/000/79/configs/tmp6xg7zked' < scaffolds.fasta > '/galaxy/server/database/objects/9/2/9/dataset_9290b690-f0a1-4bcd-9b98-906644c27bf2.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "440cb45a940faf4f", "src": "hda", "uuid": "f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f"}, "libraries_0|files_0|file_type|rev_reads": {"id": "bcf69509a68e16b2", "src": "hda", "uuid": "4ed7364d-4f54-4b43-815e-81406047cc06"}}, "outputs": {"out_contig_stats": {"id": "0a78bd4e65892e13", "src": "hda", "uuid": "9a58d0a8-fe7e-4330-a65a-3847b0c1c03c"}, "out_scaffold_stats": {"id": "3e7b609c40bf753c", "src": "hda", "uuid": "9290b690-f0a1-4bcd-9b98-906644c27bf2"}, "out_contigs": {"id": "0dda8ebd687159e9", "src": "hda", "uuid": "d2e38e74-1c3f-4846-92f0-1d7511c70b93"}, "out_scaffolds": {"id": "f124cacb1fbaf441", "src": "hda", "uuid": "802584a7-1737-49e3-9bed-7dfdb5cbffb9"}, "out_log": {"id": "3410aaaa4694302e", "src": "hda", "uuid": "83e14991-b08a-420e-8b4b-be920c53ac46"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/79/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/79/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat']\n      right reads: ['/galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/79/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/79/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/79/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/79/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\n  0:00:01.082     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.027     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.040    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.585    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.608    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.633    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.636    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.639    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.641    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.650    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.650    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.650    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\n  0:00:02.663    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.677    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.678    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.678    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.691    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.691    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.701    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.701    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.701    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.701    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat and /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.744    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.748    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.751    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.788    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.788    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.788    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/79/working/corrected/corrected.yaml\n  0:00:02.792    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/79/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/79/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/79/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.092     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.236     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.364   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.482     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.482     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.482     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.483     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.484     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.484     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.484     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.040     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.049    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.049    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.241    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.241    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.363    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.364    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.364    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.365    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:02.427     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:02.442    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.837    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.837    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.078    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.101    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.125    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.125    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.128    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.129    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nosing short gaps\n  0:00:06.911    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:06.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:06.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:06.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:06.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:06.926    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.926    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:06.927    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/before_rr.fasta\n  0:00:06.930    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph.fastg\n  0:00:06.934    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/simplified_contigs.fasta\n  0:00:06.937    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/intermediate_contigs.fasta\n  0:00:06.945    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:06.945    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:06.945    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.040   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.206   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.454   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:07.454   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:07.476    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:07.584   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:07.589   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.590   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:07.607   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.610   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.642    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:07.642    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:07.642    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:07.642    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:07.642    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:07.642    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:07.642    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:07.642    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:07.644    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.644    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:07.645    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/before_rr.fasta\n  0:00:07.652    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph.fastg\n  0:00:07.656    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/79/working//K77/final_contigs.paths\n  0:00:07.665    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/79/working//K77/scaffolds.paths\n  0:00:07.682    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:07.685    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/79/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/79/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/79/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/79/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/79/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/79/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/79/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/79/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/79/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/79/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat']\n      right reads: ['/galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/79/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/79/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/79/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/79/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\n  0:00:01.082     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.027     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.040    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.585    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.608    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.633    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.636    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.639    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.641    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.650    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.650    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.650    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat\n  0:00:02.663    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.677    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.678    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.678    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.690    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.691    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.691    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.701    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.701    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.701    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.701    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/1/0/dataset_f10a73e9-c5b3-4bba-9e9e-df850e7f2d8f.dat and /galaxy/server/database/objects/4/e/d/dataset_4ed7364d-4f54-4b43-815e-81406047cc06.dat\n  0:00:02.744    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.748    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.751    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.788    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.788    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.788    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/79/working/corrected/corrected.yaml\n  0:00:02.792    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/79/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/79/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/79/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.082    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.092     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.236     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.364   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.482     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.482     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.482     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.483     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.484     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.484     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.484     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:01.040     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.049    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.049    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.241    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:01.241    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.363    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.364    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.364    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.365    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.365    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:02.427     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:02.442    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.837    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.837    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.078    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.101    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.125    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:03.125    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.128    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.129    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nosing short gaps\n  0:00:06.911    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:06.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:06.913    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:06.913    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:06.913    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:06.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:06.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:06.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:06.921    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:06.926    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.926    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:06.927    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/before_rr.fasta\n  0:00:06.930    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph.fastg\n  0:00:06.934    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/simplified_contigs.fasta\n  0:00:06.937    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/intermediate_contigs.fasta\n  0:00:06.945    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:06.945    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:06.945    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:06.945    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.040   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.206   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.454   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:07.454   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:07.476    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:07.584   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:07.589   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.590   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:07.594   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:07.607   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.610   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:07.642    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:07.642    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:07.642    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:07.642    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:07.642    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:07.642    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:07.642    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:07.642    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:07.642    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:07.642    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:07.644    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:07.644    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:07.644    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:07.644    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:07.644    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.644    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:07.645    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/79/working//K77/before_rr.fasta\n  0:00:07.652    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/79/working//K77/assembly_graph.fastg\n  0:00:07.656    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/79/working//K77/final_contigs.paths\n  0:00:07.665    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/79/working//K77/scaffolds.paths\n  0:00:07.682    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:07.685    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/79/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/79/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/79/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/79/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/79/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/79/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/79/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/79/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:10:56", "plugin": "core", "name": "end_epoch", "raw_value": "1730855456.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:10:45", "plugin": "core", "name": "start_epoch", "raw_value": "1730855445.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 16.027120113372803, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 41.10439157485962, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "4753a528c6795349"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "29148ea9184d8ff4"}}, "job": {"model_class": "Job", "id": "dd86c7682aa9c96a", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:12:02.342527", "create_time": "2024-11-06T01:11:38.304304", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-5grwp", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat --pe1-2 fastq:/galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat && python '/galaxy/server/database/jobs_directory/000/84/configs/tmp7v8n42wu' < contigs.fasta > '/galaxy/server/database/objects/9/e/3/dataset_9e3307ec-bf99-479e-82fd-4c210b5d7d2f.dat' && python '/galaxy/server/database/jobs_directory/000/84/configs/tmp7v8n42wu' < scaffolds.fasta > '/galaxy/server/database/objects/5/d/9/dataset_5d970a20-4c15-4f2d-8a00-2944ca73bf8b.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|file_type|fwd_reads": {"id": "4753a528c6795349", "src": "hda", "uuid": "dfdd8d79-4116-4cb2-bc02-59da1c1db5c8"}, "libraries_0|files_0|file_type|rev_reads": {"id": "29148ea9184d8ff4", "src": "hda", "uuid": "95583c2e-541c-496d-ad5a-56c5afb365e6"}}, "outputs": {"out_contig_stats": {"id": "3aceb7c2defbf1bb", "src": "hda", "uuid": "9e3307ec-bf99-479e-82fd-4c210b5d7d2f"}, "out_scaffold_stats": {"id": "e84ef0ac6ec6c5bf", "src": "hda", "uuid": "5d970a20-4c15-4f2d-8a00-2944ca73bf8b"}, "out_contigs": {"id": "7b4009c3c3c293ff", "src": "hda", "uuid": "4c09db8e-fd99-460f-b7fa-a6e32ad6508a"}, "out_scaffolds": {"id": "3cf7056c4389939f", "src": "hda", "uuid": "82896f27-6be0-4a76-8da1-6797e0d0aaa2"}, "out_log": {"id": "cbd0cc6c38ba614a", "src": "hda", "uuid": "f6fbfcd8-b8cc-4a1d-acad-3654e5cff6fb"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/84/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/84/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat']\n      right reads: ['/galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/84/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/84/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/84/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/84/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\n  0:00:01.092     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.049     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.062    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.643    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.667    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.694    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.696    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.699    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.700    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.709    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\n  0:00:02.723    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.736    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.736    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.736    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.750    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.750    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.760    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.760    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.760    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.760    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat and /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.804    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.807    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.811    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.853    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.853    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.853    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/84/working/corrected/corrected.yaml\n  0:00:02.857    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/84/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/84/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/84/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.081    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.223   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.239     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.367   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.479     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.479     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.479     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.480     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.035     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.045    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.045    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.346    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.347    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.347    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.348    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.348    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.348    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.506     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.523    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.891    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.891    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.134    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.159    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.184    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.184    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.187    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.187    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nsing short gaps\n  0:00:09.400    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.402    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.402    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.402    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.402    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.417    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.418    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.418    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/before_rr.fasta\n  0:00:09.423    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph.fastg\n  0:00:09.428    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/simplified_contigs.fasta\n  0:00:09.433    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/intermediate_contigs.fasta\n  0:00:09.441    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.441    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.441    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.537   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.706   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.959   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.959   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:09.982    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.089   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.094   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.096   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.114   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.119   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.151    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.151    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.152    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.152    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.152    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.152    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.152    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.152    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.154    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.154    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.154    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.154    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.155    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/before_rr.fasta\n  0:00:10.161    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph.fastg\n  0:00:10.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/84/working//K33/final_contigs.paths\n  0:00:10.177    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/84/working//K33/scaffolds.paths\n  0:00:10.196    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.199    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/84/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/84/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/84/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/84/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/84/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/84/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/84/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/84/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/84/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.100+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/84/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat']\n      right reads: ['/galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/84/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/84/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/84/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/84/working/corrected/configs/config.info\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\n  0:00:01.092     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.049     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:02.062    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.379    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.643    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.667    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.694    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.696    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.699    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.700    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.709    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat\n  0:00:02.723    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.736    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.736    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.736    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.749    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.750    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.750    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.760    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.760    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.760    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.760    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/f/d/dataset_dfdd8d79-4116-4cb2-bc02-59da1c1db5c8.dat and /galaxy/server/database/objects/9/5/5/dataset_95583c2e-541c-496d-ad5a-56c5afb365e6.dat\n  0:00:02.804    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.807    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.811    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.853    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.853    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.853    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/84/working/corrected/corrected.yaml\n  0:00:02.857    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/84/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/84/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/84/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.081    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.091     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.223   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.239     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.367   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.479     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.479     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.479     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.480     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.480     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.035     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:01.045    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:01.045    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.346    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.347    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.347    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.348    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.348    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.348    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:02.506     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:02.523    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.891    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.891    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:03.134    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:03.159    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:03.184    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:03.184    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:03.187    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:03.187    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==\n..\nsing short gaps\n  0:00:09.400    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:09.402    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:09.402    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:09.402    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:09.402    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:09.402    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:09.402    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.402    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:09.412    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:09.417    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.418    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.418    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/before_rr.fasta\n  0:00:09.423    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph.fastg\n  0:00:09.428    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/simplified_contigs.fasta\n  0:00:09.433    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/intermediate_contigs.fasta\n  0:00:09.441    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:09.441    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:09.441    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:09.441    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.537   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.706   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.959   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.959   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:09.982    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.089   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.094   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.096   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.100   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.114   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.119   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.151    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.151    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.152    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.152    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.152    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.152    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.152    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.152    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.154    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.154    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.154    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.154    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.154    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.154    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.155    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/84/working//K33/before_rr.fasta\n  0:00:10.161    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/84/working//K33/assembly_graph.fastg\n  0:00:10.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/84/working//K33/final_contigs.paths\n  0:00:10.177    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/84/working//K33/scaffolds.paths\n  0:00:10.196    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.199    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/84/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/84/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/84/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/84/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/84/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/84/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/84/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/84/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "13 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "13.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:11:53", "plugin": "core", "name": "end_epoch", "raw_value": "1730855513.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:11:40", "plugin": "core", "name": "start_epoch", "raw_value": "1730855500.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 14.328429698944092, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "stringtie/2.2.3+galaxy0-0", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 0, "time_seconds": 9.195019245147705, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "stringtie/2.2.3+galaxy0-1", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 1, "time_seconds": 33.668853759765625, "inputs": {"input_options|input_bam": {"src": "hda", "id": "a8a18e25063721bd"}, "input_options|input_mode": "short_reads", "adv|fraction": "0.17"}, "job": {"model_class": "Job", "id": "dc542d2af3b9a1c8", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:13:52.138372", "create_time": "2024-11-06T01:13:33.006121", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-ttv8q", "command_line": "mkdir -p ./special_de_output/sample1/ &&    stringtie '/galaxy/server/database/objects/0/a/6/dataset_0a64d5c2-6089-4055-b249-2814c5147d9a.dat'  -o '/galaxy/server/database/objects/a/f/a/dataset_afa62e62-1105-47ca-9238-4e53f14f1713.dat' -p \"${GALAXY_SLOTS:-1}\"     -f '0.17' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 0, \"use_guide\": \"no\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "a8a18e25063721bd", "src": "hda", "uuid": "0a64d5c2-6089-4055-b249-2814c5147d9a"}}, "outputs": {"output_gtf": {"id": "1f51140e7932c664", "src": "hda", "uuid": "afa62e62-1105-47ca-9238-4e53f14f1713"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:13:41", "plugin": "core", "name": "end_epoch", "raw_value": "1730855621.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:13:41", "plugin": "core", "name": "start_epoch", "raw_value": "1730855621.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-10", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 10, "time_seconds": 10.551293134689331, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "stringtie/2.2.3+galaxy0-11", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 11, "time_seconds": 29.097034692764282, "inputs": {"input_options|input_bam_short": {"src": "hda", "id": "f504614a9ff22858"}, "input_options|input_bam_long": {"src": "hda", "id": "55344906c88787df"}, "input_options|input_mode": "mixed_reads"}, "job": {"model_class": "Job", "id": "9852dffc8b76c033", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:17:53.612295", "create_time": "2024-11-06T01:17:42.008567", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-4btb9", "command_line": "mkdir -p ./special_de_output/sample1/ &&    stringtie '/galaxy/server/database/objects/d/a/a/dataset_daacaa5a-a4b9-4670-bcda-76fd2d3ffd5a.dat' '/galaxy/server/database/objects/3/d/9/dataset_3d94f920-999e-45eb-af5a-a07596393976.dat' -E 25  -o '/galaxy/server/database/objects/a/5/b/dataset_a5b2c82f-9edf-4b0a-8cae-6eec5b8796e5.dat' -p \"${GALAXY_SLOTS:-1}\"     -f '0.01' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 0, \"use_guide\": \"no\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 2, \"error_splice\": \"25\", \"input_bam_long\": {\"values\": [{\"id\": 191, \"src\": \"hda\"}]}, \"input_bam_short\": {\"values\": [{\"id\": 190, \"src\": \"hda\"}]}, \"input_mode\": \"mixed_reads\"}"}, "inputs": {"input_options|input_bam_short": {"id": "f504614a9ff22858", "src": "hda", "uuid": "daacaa5a-a4b9-4670-bcda-76fd2d3ffd5a"}, "input_options|input_bam_long": {"id": "55344906c88787df", "src": "hda", "uuid": "3d94f920-999e-45eb-af5a-a07596393976"}}, "outputs": {"output_gtf": {"id": "0af80314edd64e2a", "src": "hda", "uuid": "a5b2c82f-9edf-4b0a-8cae-6eec5b8796e5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:17:43", "plugin": "core", "name": "end_epoch", "raw_value": "1730855863.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:17:43", "plugin": "core", "name": "start_epoch", "raw_value": "1730855863.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-12", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 12, "time_seconds": 26.376424312591553, "inputs": {"input_options|input_bam_short": {"src": "hda", "id": "daf0aba73677e36a"}, "input_options|input_bam_long": {"src": "hda", "id": "daf0aba73677e36a"}, "input_options|input_mode": "mixed_reads"}, "job": {"model_class": "Job", "id": "aab7742cbfaa8911", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:18:19.952637", "create_time": "2024-11-06T01:18:09.263078", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-j4qbx", "command_line": "mkdir -p ./special_de_output/sample1/ &&    stringtie '/galaxy/server/database/objects/d/2/6/dataset_d2626d79-5878-4c49-9479-c8da696631e2.dat' '/galaxy/server/database/objects/d/2/6/dataset_d2626d79-5878-4c49-9479-c8da696631e2.dat' -E 25  -o '/galaxy/server/database/objects/e/4/a/dataset_e4a0fb87-c4b2-45f1-aaa3-b22bebc0deb6.dat' -p \"${GALAXY_SLOTS:-1}\"     -f '0.01' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 0, \"use_guide\": \"no\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 2, \"error_splice\": \"25\", \"input_bam_long\": {\"values\": [{\"id\": 193, \"src\": \"hda\"}]}, \"input_bam_short\": {\"values\": [{\"id\": 193, \"src\": \"hda\"}]}, \"input_mode\": \"mixed_reads\"}"}, "inputs": {"input_options|input_bam_short": {"id": "daf0aba73677e36a", "src": "hda", "uuid": "d2626d79-5878-4c49-9479-c8da696631e2"}, "input_options|input_bam_long": {"id": "daf0aba73677e36a", "src": "hda", "uuid": "d2626d79-5878-4c49-9479-c8da696631e2"}}, "outputs": {"output_gtf": {"id": "67e687f9ed1d4b2e", "src": "hda", "uuid": "e4a0fb87-c4b2-45f1-aaa3-b22bebc0deb6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:18:10", "plugin": "core", "name": "end_epoch", "raw_value": "1730855890.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:18:10", "plugin": "core", "name": "start_epoch", "raw_value": "1730855890.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-2", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 2, "time_seconds": 28.525895595550537, "inputs": {"input_options|input_bam": {"src": "hda", "id": "411f5212ffd76f0a"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "18849190b087100e"}, "guide|guide_source|guide_gff_select": "history", "guide|use_guide": "yes"}, "job": {"model_class": "Job", "id": "37b29c450bd06db7", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:14:20.726839", "create_time": "2024-11-06T01:14:09.618985", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-cmrlx", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/a/c/9/dataset_ac9d7435-c12b-442c-b9f8-c9bb261e45e7.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/f/1/6/dataset_f167f2a8-0325-40f6-ac76-57e5f38c6080.dat'  -o '/galaxy/server/database/objects/3/9/f/dataset_39f6bfd8-3d67-4706-a803-9d75c920b3ed.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff  -b ./special_de_output/sample1/  -f '0.01' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": false, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "411f5212ffd76f0a", "src": "hda", "uuid": "f167f2a8-0325-40f6-ac76-57e5f38c6080"}, "guide|guide_source|ref_hist": {"id": "18849190b087100e", "src": "hda", "uuid": "ac9d7435-c12b-442c-b9f8-c9bb261e45e7"}}, "outputs": {"output_gtf": {"id": "87e368e14cc0b98f", "src": "hda", "uuid": "39f6bfd8-3d67-4706-a803-9d75c920b3ed"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:14:11", "plugin": "core", "name": "end_epoch", "raw_value": "1730855651.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:14:11", "plugin": "core", "name": "start_epoch", "raw_value": "1730855651.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-3", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 3, "time_seconds": 27.38070583343506, "inputs": {"input_options|input_bam": {"src": "hda", "id": "96a3a61b0209456a"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "10064f95babb208b"}, "guide|guide_source|guide_gff_select": "history", "guide|use_guide": "yes", "adv|fraction": "0.17"}, "job": {"model_class": "Job", "id": "7746afdfcd141a6b", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:14:48.166623", "create_time": "2024-11-06T01:14:36.941333", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-2k2gq", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/3/d/5/dataset_3d595dda-d29a-4447-a7a1-eb368eb1e6dc.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/f/4/a/dataset_f4a60d1b-5a20-47ed-9b74-100c1a39ea6a.dat'  -o '/galaxy/server/database/objects/9/d/d/dataset_9dda1687-958a-4f25-af73-76de3705a9e7.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff  -b ./special_de_output/sample1/  -f '0.17' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": false, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 161, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "96a3a61b0209456a", "src": "hda", "uuid": "f4a60d1b-5a20-47ed-9b74-100c1a39ea6a"}, "guide|guide_source|ref_hist": {"id": "10064f95babb208b", "src": "hda", "uuid": "3d595dda-d29a-4447-a7a1-eb368eb1e6dc"}}, "outputs": {"output_gtf": {"id": "71a144a8592ced97", "src": "hda", "uuid": "9dda1687-958a-4f25-af73-76de3705a9e7"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:14:39", "plugin": "core", "name": "end_epoch", "raw_value": "1730855679.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:14:39", "plugin": "core", "name": "start_epoch", "raw_value": "1730855679.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-4", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 4, "time_seconds": 24.81888246536255, "inputs": {"input_options|input_bam": {"src": "hda", "id": "5163f214d373a2cf"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "5be89156183c2175"}, "guide|guide_source|guide_gff_select": "history", "guide|special_outputs|special_outputs_select": "ballgown", "guide|coverage_file": true, "guide|use_guide": "yes"}, "job": {"model_class": "Job", "id": "75c53c7ce527c0c6", "state": "error", "exit_code": null, "update_time": "2024-11-06T01:15:12.262153", "create_time": "2024-11-06T01:15:05.586665", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-sxn6s", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/2/a/c/dataset_2ac105a3-521f-437b-a05a-e0ca3dac0ff3.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/4/f/a/dataset_4fabba40-ea50-4912-9d79-e6e545358942.dat'  -o '/galaxy/server/database/objects/0/b/6/dataset_0b686501-af9d-4245-bbfe-c0cd8198e56c.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff -C '/galaxy/server/database/objects/c/2/6/dataset_c263ac34-3c62-4795-a2de-07d3efd2fa0a.dat'  -b ./special_de_output/sample1/  -f '0.01' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": true, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 0, \"special_outputs_select\": \"ballgown\"}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 164, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "5163f214d373a2cf", "src": "hda", "uuid": "4fabba40-ea50-4912-9d79-e6e545358942"}, "guide|guide_source|ref_hist": {"id": "5be89156183c2175", "src": "hda", "uuid": "2ac105a3-521f-437b-a05a-e0ca3dac0ff3"}}, "outputs": {"output_gtf": {"id": "d551f9f931f385e8", "src": "hda", "uuid": "0b686501-af9d-4245-bbfe-c0cd8198e56c"}, "coverage": {"id": "a3d1dd876ef652f0", "src": "hda", "uuid": "c263ac34-3c62-4795-a2de-07d3efd2fa0a"}, "exon_expression": {"id": "510e38eac67d9118", "src": "hda", "uuid": "276a1aee-101b-4ff7-8b27-15826e337d0e"}, "intron_expression": {"id": "c956a8d90879e8bc", "src": "hda", "uuid": "c33d5a44-222a-4375-b2f5-6576da007e7b"}, "transcript_expression": {"id": "0b5aa2af8bec2ce7", "src": "hda", "uuid": "4f1b4bd4-63e1-45f5-a731-9a86fa0c7d47"}, "exon_transcript_mapping": {"id": "e2ad54b983bf1fe4", "src": "hda", "uuid": "f7442b2e-bd80-4222-949d-c71c52278adb"}, "intron_transcript_mapping": {"id": "fe2e5f2bb2eb5a2d", "src": "hda", "uuid": "5c03ca94-b020-4145-af1f-629469fe37f6"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "stringtie/2.2.3+galaxy0-5", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 5, "time_seconds": 30.55587887763977, "inputs": {"input_options|input_bam": {"src": "hda", "id": "32a7a25f683ac131"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "717a3ff41941c773"}, "guide|guide_source|guide_gff_select": "history", "guide|input_estimation": true, "guide|special_outputs|clustering": true, "guide|special_outputs|special_outputs_select": "deseq2", "guide|coverage_file": true, "guide|use_guide": "yes"}, "job": {"model_class": "Job", "id": "a3cea7ec23a652ae", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:15:42.124285", "create_time": "2024-11-06T01:15:30.644936", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-2sngq", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/c/6/b/dataset_c6b769a1-311c-49cf-bddd-b4cdf9f9dfe1.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/d/8/1/dataset_d811141e-8f50-4026-b197-a9ed70aa9eba.dat'  -o '/galaxy/server/database/objects/6/5/a/dataset_65ad861d-ac28-45ef-9158-d22b134b05c7.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff -C '/galaxy/server/database/objects/0/4/f/dataset_04fd68d6-4743-4721-a772-04cb7dba2561.dat' -e -b ./special_de_output/sample1/  -f '0.01' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'    && ln -s '/galaxy/server/database/objects/6/5/a/dataset_65ad861d-ac28-45ef-9158-d22b134b05c7.dat' ./special_de_output/sample1/output.gtf && TAB=$(printf '\\t') && CR=$(printf '\\r') && prepDE.py -i ./special_de_output/ -g gene_counts.csv -t transcript_counts.csv -l 75 -c --legend '/galaxy/server/database/objects/6/4/e/dataset_64e6af1f-c245-43ec-a39b-090906454f8a.dat' > /dev/null && sed -i.bak -e \"s/,/${TAB}/g\" -e \"s/${CR}//g\" '/galaxy/server/database/objects/6/4/e/dataset_64e6af1f-c245-43ec-a39b-090906454f8a.dat'  && sed -i.bak -e \"s/,/${TAB}/g\" -e \"s/${CR}//g\" gene_counts.csv transcript_counts.csv && head -n 1 gene_counts.csv | sed -e 's/sample1/stringtie_in1_bam/' > '/galaxy/server/database/objects/6/1/d/dataset_61dcd216-5db1-430e-b390-d5be061750a6.dat' && head -n 1 transcript_counts.csv | sed -e 's/sample1/stringtie_in1_bam/' > '/galaxy/server/database/objects/8/b/2/dataset_8b238de4-40b4-4200-852c-199ada10245f.dat' && tail -n +2 gene_counts.csv | sort -t\"${TAB}\" -k1,1 >> '/galaxy/server/database/objects/6/1/d/dataset_61dcd216-5db1-430e-b390-d5be061750a6.dat' && tail -n +2 transcript_counts.csv | sort -t\"${TAB}\" -k1,1 >> '/galaxy/server/database/objects/8/b/2/dataset_8b238de4-40b4-4200-852c-199ada10245f.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.01\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": true, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 174, \"src\": \"hda\"}]}}, \"input_estimation\": true, \"special_outputs\": {\"__current_case__\": 1, \"clustering\": true, \"key\": null, \"read_length\": \"75\", \"special_outputs_select\": \"deseq2\", \"string\": null}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 173, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "32a7a25f683ac131", "src": "hda", "uuid": "d811141e-8f50-4026-b197-a9ed70aa9eba"}, "guide|guide_source|ref_hist": {"id": "717a3ff41941c773", "src": "hda", "uuid": "c6b769a1-311c-49cf-bddd-b4cdf9f9dfe1"}}, "outputs": {"output_gtf": {"id": "847daf6aae9e88a8", "src": "hda", "uuid": "65ad861d-ac28-45ef-9158-d22b134b05c7"}, "coverage": {"id": "d75f82f2b7ee0da8", "src": "hda", "uuid": "04fd68d6-4743-4721-a772-04cb7dba2561"}, "gene_counts": {"id": "78089ebd985eb830", "src": "hda", "uuid": "61dcd216-5db1-430e-b390-d5be061750a6"}, "transcript_counts": {"id": "e904d81aa4ede651", "src": "hda", "uuid": "8b238de4-40b4-4200-852c-199ada10245f"}, "legend": {"id": "b9f579ae802e54c6", "src": "hda", "uuid": "64e6af1f-c245-43ec-a39b-090906454f8a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:15:33", "plugin": "core", "name": "end_epoch", "raw_value": "1730855733.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:15:32", "plugin": "core", "name": "start_epoch", "raw_value": "1730855732.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-6", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 6, "time_seconds": 29.866456508636475, "inputs": {"input_options|input_bam": {"src": "hda", "id": "d8d78be8a3f19c8e"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "302f31ef14787122"}, "guide|guide_source|guide_gff_select": "history", "guide|use_guide": "yes", "adv|abundance_estimation": true, "adv|fraction": "0.17"}, "job": {"model_class": "Job", "id": "549df6d66831a4e3", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:16:13.026753", "create_time": "2024-11-06T01:16:01.758482", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-xtzj9", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/8/5/a/dataset_85ac2254-be28-47fb-a7f2-21172d81409c.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/a/4/9/dataset_a495a9f9-34e0-4e0b-91c6-3154435dcd48.dat'  -o '/galaxy/server/database/objects/d/5/7/dataset_d5761c8c-4932-4279-8d2a-782d684e8cd4.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff  -b ./special_de_output/sample1/  -f '0.17' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'   -A '/galaxy/server/database/objects/6/c/5/dataset_6c54cc03-d061-4e2f-a037-55a334145113.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": true, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.17\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": false, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 181, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 180, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "d8d78be8a3f19c8e", "src": "hda", "uuid": "a495a9f9-34e0-4e0b-91c6-3154435dcd48"}, "guide|guide_source|ref_hist": {"id": "302f31ef14787122", "src": "hda", "uuid": "85ac2254-be28-47fb-a7f2-21172d81409c"}}, "outputs": {"output_gtf": {"id": "3de89d9dd70d21a3", "src": "hda", "uuid": "d5761c8c-4932-4279-8d2a-782d684e8cd4"}, "gene_abundance_estimation": {"id": "3fecb20ae0744c8e", "src": "hda", "uuid": "6c54cc03-d061-4e2f-a037-55a334145113"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:16:03", "plugin": "core", "name": "end_epoch", "raw_value": "1730855763.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:16:03", "plugin": "core", "name": "start_epoch", "raw_value": "1730855763.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-7", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 7, "time_seconds": 28.0735604763031, "inputs": {"input_options|input_bam": {"src": "hda", "id": "5d9ad334164d3b4a"}, "input_options|input_mode": "short_reads", "guide|guide_source|ref_hist": {"src": "hda", "id": "b021fd3515a6a92e"}, "guide|guide_source|guide_gff_select": "history", "guide|use_guide": "yes", "adv|fraction": "0.15"}, "job": {"model_class": "Job", "id": "3b4060f5f3f1562e", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:16:41.833010", "create_time": "2024-11-06T01:16:31.394372", "galaxy_version": "23.1", "command_version": "2.2.3", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-7gxhf", "command_line": "mkdir -p ./special_de_output/sample1/ &&   ln -s '/galaxy/server/database/objects/4/5/8/dataset_458bff65-f052-4c1e-b145-bb4e9f226e13.dat' guide.gff &&  stringtie '/galaxy/server/database/objects/3/2/7/dataset_3279fe97-30a4-4dfc-818c-a558d559b095.dat'  -o '/galaxy/server/database/objects/5/b/2/dataset_5b278384-92f8-455d-8569-13fd336de18b.dat' -p \"${GALAXY_SLOTS:-1}\"    -G guide.gff  -b ./special_de_output/sample1/  -f '0.15' -m '200' -a '10' -j '1' -c '1' -g '50' -M '1.0'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"abundance_estimation\": false, \"bdist\": \"50\", \"bundle_fraction\": \"1.0\", \"disable_trimming\": false, \"fraction\": \"0.15\", \"min_anchor_cov\": \"1\", \"min_anchor_len\": \"10\", \"min_bundle_cov\": \"1\", \"min_tlen\": \"200\", \"multi_mapping\": false, \"name_prefix\": null, \"omit_sequences\": \"\", \"point_features\": null}", "guide": "{\"__current_case__\": 1, \"coverage_file\": false, \"guide_source\": {\"__current_case__\": 1, \"guide_gff_select\": \"history\", \"ref_hist\": {\"values\": [{\"id\": 185, \"src\": \"hda\"}]}}, \"input_estimation\": false, \"special_outputs\": {\"__current_case__\": 2, \"special_outputs_select\": \"no\"}, \"use_guide\": \"yes\"}", "rna_strandness": "\"\"", "input_options": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 184, \"src\": \"hda\"}]}, \"input_mode\": \"short_reads\"}"}, "inputs": {"input_options|input_bam": {"id": "5d9ad334164d3b4a", "src": "hda", "uuid": "3279fe97-30a4-4dfc-818c-a558d559b095"}, "guide|guide_source|ref_hist": {"id": "b021fd3515a6a92e", "src": "hda", "uuid": "458bff65-f052-4c1e-b145-bb4e9f226e13"}}, "outputs": {"output_gtf": {"id": "8d992e9ea61b7584", "src": "hda", "uuid": "5b278384-92f8-455d-8569-13fd336de18b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-11-06 01:16:32", "plugin": "core", "name": "end_epoch", "raw_value": "1730855792.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:16:32", "plugin": "core", "name": "start_epoch", "raw_value": "1730855792.0000000"}, {"title": "Memory Allocated (MB)", "value": "26843", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "26843.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "stringtie/2.2.3+galaxy0-8", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 8, "time_seconds": 16.019023180007935, "inputs": {"input_options|input_bam": {"src": "hda", "id": "abdc4464fdd2e831"}, "input_options|input_mode": "short_reads", "guide|guide_source|guide_gff_select": "cached", "guide|use_guide": "yes", "adv|fraction": "0.15"}, "execution_problem": "parameter 'ref_builtin': an invalid option (None) was selected, please verify", "dynamic_param_error": true, "status": "error"}}, {"id": "stringtie/2.2.3+galaxy0-9", "has_data": true, "data": {"tool_id": "stringtie", "tool_version": "2.2.3+galaxy0", "test_index": 9, "time_seconds": 15.983831882476807, "inputs": {"input_options|input_bam": {"src": "hda", "id": "a9f95e8d7a45e8fa"}, "input_options|input_mode": "long_reads", "guide|guide_source|guide_gff_select": "cached", "guide|use_guide": "yes", "adv|fraction": "0.15"}, "execution_problem": "parameter 'ref_builtin': an invalid option (None) was selected, please verify", "dynamic_param_error": true, "status": "error"}}, {"id": "vcf2tsv/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcf2tsv", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 34.34259390830994, "inputs": {"input": {"src": "hda", "id": "b7b9928daf4a5115"}, "g_option": true, "null_filler": "."}, "job": {"model_class": "Job", "id": "1fdc7f4a26a816e9", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:59:28.076046", "create_time": "2024-11-06T00:59:08.155981", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcf2tsv/vcf2tsv/1.0.0_rc3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-q48cf", "command_line": "vcf2tsv -g -n '.' '/galaxy/server/database/objects/f/5/f/dataset_f5f22450-ba61-46a4-9a9f-0b3bea43bcb5.dat' > '/galaxy/server/database/objects/6/d/f/dataset_6df0bf4a-433e-4a8d-a3b6-df8ff0781614.dat'", "traceback": null, "params": {"g_option": "true", "null_filler": "\".\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"vcf\""}, "inputs": {"input": {"id": "b7b9928daf4a5115", "src": "hda", "uuid": "f5f22450-ba61-46a4-9a9f-0b3bea43bcb5"}}, "outputs": {"out_file1": {"id": "a6413172f403ed73", "src": "hda", "uuid": "6df0bf4a-433e-4a8d-a3b6-df8ff0781614"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:59:17", "plugin": "core", "name": "start_epoch", "raw_value": "1730854757.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:59:17", "plugin": "core", "name": "end_epoch", "raw_value": "1730854757.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "vcf2tsv/1.0.0_rc3+galaxy0-1", "has_data": true, "data": {"tool_id": "vcf2tsv", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 1, "time_seconds": 25.681344747543335, "inputs": {"input": {"src": "hda", "id": "72f792f77c1d8e85"}, "g_option": false, "null_filler": "."}, "job": {"model_class": "Job", "id": "afd02bf82b7a5cee", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T00:59:53.751366", "create_time": "2024-11-06T00:59:42.819417", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcf2tsv/vcf2tsv/1.0.0_rc3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-s6zcv", "command_line": "vcf2tsv  -n '.' '/galaxy/server/database/objects/9/0/7/dataset_90736c33-86b7-440d-b461-e3c8c6a2f3b1.dat' > '/galaxy/server/database/objects/0/3/6/dataset_0369ccc9-c7bf-4334-8e60-59af8d5e6f46.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "null_filler": "\".\"", "g_option": "false"}, "inputs": {"input": {"id": "72f792f77c1d8e85", "src": "hda", "uuid": "90736c33-86b7-440d-b461-e3c8c6a2f3b1"}}, "outputs": {"out_file1": {"id": "aa9dcbd58fa0a3c0", "src": "hda", "uuid": "0369ccc9-c7bf-4334-8e60-59af8d5e6f46"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 00:59:44", "plugin": "core", "name": "start_epoch", "raw_value": "1730854784.0000000"}, {"title": "Job End Time", "value": "2024-11-06 00:59:44", "plugin": "core", "name": "end_epoch", "raw_value": "1730854784.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "vcfhethom/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 21.289283514022827, "inputs": {"analysis_type": "count", "vcf_input": {"src": "hda", "id": "f7f09fe86ffcda26"}}, "job": {"model_class": "Job", "id": "6497b649f6de55d0", "state": "error", "exit_code": null, "update_time": "2024-11-06T01:00:16.101774", "create_time": "2024-11-06T01:00:10.730315", "galaxy_version": "23.1", "command_version": null, "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-s7lff", "command_line": "vcfhetcount '/galaxy/server/database/objects/b/8/0/dataset_b806728c-a689-4a6d-a361-42cde2b822c2.dat' > '/galaxy/server/database/objects/a/a/e/dataset_aae34ddb-b1b9-4c94-8804-d0ed2f096591.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "\"count\""}, "inputs": {"vcf_input": {"id": "f7f09fe86ffcda26", "src": "hda", "uuid": "b806728c-a689-4a6d-a361-42cde2b822c2"}}, "outputs": {"out_file1": {"id": "93d2b24df1ae2069", "src": "hda", "uuid": "aae34ddb-b1b9-4c94-8804-d0ed2f096591"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "vcfhethom/1.0.0_rc3+galaxy0-1", "has_data": true, "data": {"tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 1, "time_seconds": 26.666016578674316, "inputs": {"analysis_type": "ratio", "vcf_input": {"src": "hda", "id": "b2797ccaf4cf60c5"}}, "job": {"model_class": "Job", "id": "a0b1a8abc84d2ef0", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:00:42.502570", "create_time": "2024-11-06T01:00:30.589725", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-httkp", "command_line": "vcfhethomratio '/galaxy/server/database/objects/0/3/1/dataset_031cd1f9-06e3-4a75-99c1-043d3c036551.dat' > '/galaxy/server/database/objects/0/e/d/dataset_0ed5431e-fead-43c5-9fc3-b71e5d1d28ff.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "\"ratio\""}, "inputs": {"vcf_input": {"id": "b2797ccaf4cf60c5", "src": "hda", "uuid": "031cd1f9-06e3-4a75-99c1-043d3c036551"}}, "outputs": {"out_file1": {"id": "50d30379cf22a7b6", "src": "hda", "uuid": "0ed5431e-fead-43c5-9fc3-b71e5d1d28ff"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:00:32", "plugin": "core", "name": "start_epoch", "raw_value": "1730854832.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:00:32", "plugin": "core", "name": "end_epoch", "raw_value": "1730854832.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "vcfhethom/1.0.0_rc3+galaxy0-2", "has_data": true, "data": {"tool_id": "vcfhethom", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 2, "time_seconds": 26.044269561767578, "inputs": {"analysis_type": "allele_count", "vcf_input": {"src": "hda", "id": "64f66842bf38f337"}}, "job": {"model_class": "Job", "id": "21686a009afb8eb5", "state": "ok", "exit_code": 0, "update_time": "2024-11-06T01:01:08.763228", "create_time": "2024-11-06T01:00:57.667155", "galaxy_version": "23.1", "command_version": "", "copied_from_job_id": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfhethom/vcfhethom/1.0.0_rc3+galaxy0", "history_id": "1b7b36fc584f75c7", "external_id": "gxy-tnp6k", "command_line": "vcfcountalleles '/galaxy/server/database/objects/3/b/5/dataset_3b5839d2-24d2-4b04-8fc0-c821563029b8.dat' > '/galaxy/server/database/objects/3/7/0/dataset_37093f99-70b8-4ca2-a7d4-ef31cbab11c3.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "analysis_type": "\"allele_count\""}, "inputs": {"vcf_input": {"id": "64f66842bf38f337", "src": "hda", "uuid": "3b5839d2-24d2-4b04-8fc0-c821563029b8"}}, "outputs": {"out_file1": {"id": "7b7acdd234f16c31", "src": "hda", "uuid": "37093f99-70b8-4ca2-a7d4-ef31cbab11c3"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2024-11-06 01:00:59", "plugin": "core", "name": "start_epoch", "raw_value": "1730854859.0000000"}, {"title": "Job End Time", "value": "2024-11-06 01:00:59", "plugin": "core", "name": "end_epoch", "raw_value": "1730854859.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}], "galaxy_url": "http://34.138.78.21:8000/galaxy/"}