<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="45"
           errors="4"
           failures="6"
           skip="0">
    
    <testcase classname="bcftools_cnv (Test #1)" name="0" time="72.79522228240967">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #2)" name="1" time="31.322932720184326">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #3)" name="2" time="33.47540092468262">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #4)" name="3" time="29.355704307556152">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_cnv (Test #5)" name="4" time="33.1354022026062">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of lines: total/processed: 184/184
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #1)" name="0" time="36.57608222961426">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8889Number of lines filtered/no AF/no alt/multiallelic/dup: 0/0/0/1/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #2)" name="1" time="30.188488006591797">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8889Number of lines filtered/no AF/no alt/multiallelic/dup: 0/0/0/1/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #3)" name="2" time="30.12749195098877">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8889Number of lines filtered/no AF/no alt/multiallelic/dup: 0/0/0/1/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_roh (Test #4)" name="3" time="31.478291749954224">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of target samples: 1Number of --estimate-AF samples: 0Number of sites in the buffer/overlap: unlimitedNumber of lines total/processed: 8890/8889Number of lines filtered/no AF/no alt/multiallelic/dup: 0/0/0/1/0
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #1)" name="0" time="32.87387037277222">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #2)" name="1" time="32.39086890220642">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #3)" name="2" time="30.25117254257202">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #4)" name="3" time="31.20266628265381">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #5)" name="4" time="31.590706825256348">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #6)" name="5" time="32.90211796760559">
        
            
            <system-out><![CDATA[
            Due to filtering, 51.08108108108108% of the aforementioned alignments will be used 1115.6108108108108
            ]]></system-out>
            <system-err><![CDATA[
            normalization: 1x (effective genome size 2451960000)bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000filter_strand: reverseOffset: [1, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_coverage (Test #7)" name="6" time="29.49584937095642">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam']binLength: 10numberOfSamples: NoneblackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: 242numberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 968filter_strand: NoneOffset: [-4, -1]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #1)" name="0" time="48.76195430755615">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #2)" name="1" time="32.77096176147461">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_matrix (Test #3)" name="2" time="30.51643204689026">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca5 ch2:125:150. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda5 ch2:150:175. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) ca8 ch3:75:100. Skipping...A region that is shorter than the bin size (possibly only after accounting for unscaled regions) was found: (25) cda8 ch3:100:125. Skipping...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="46.5325140953064">
        
            
            <system-out><![CDATA[
            null
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="26.43019199371338">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "contaminants": {   "id": "1ee5301288f20bcd",   "src": "hda"  },  "input_file": {   "id": "a3205355fea834a1",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/a/7/dataset_3a73a641-51b6-474a-9658-0d42978e3f07.dat\u0027 \u00271000trimmed_fastq\u0027 \u0026\u0026 mkdir -p \u0027/galaxy/server/database/objects/3/4/e/dataset_34ee147c-19e1-459f-a60e-ad004bd34bf9_files\u0027 \u0026\u0026 fastqc --outdir \u0027/galaxy/server/database/objects/3/4/e/dataset_34ee147c-19e1-459f-a60e-ad004bd34bf9_files\u0027 --contaminants \u0027/galaxy/server/database/objects/2/9/4/dataset_294903b9-7871-4e93-9c8e-4bdf33f4e3ad.dat\u0027   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f \u0027fastq\u0027 \u00271000trimmed_fastq\u0027  \u0026\u0026 cp \u0027/galaxy/server/database/objects/3/4/e/dataset_34ee147c-19e1-459f-a60e-ad004bd34bf9_files\u0027/*/fastqc_data.txt output.txt \u0026\u0026 cp \u0027/galaxy/server/database/objects/3/4/e/dataset_34ee147c-19e1-459f-a60e-ad004bd34bf9_files\u0027/*\\.html output.html",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-13T12:51:46.277706",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bf9t5",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "1ee5301288f20bcd",  "inputs": {   "contaminants": {    "id": "1ee5301288f20bcd",    "src": "hda",    "uuid": "294903b9-7871-4e93-9c8e-4bdf33f4e3ad"   },   "input_file": {    "id": "a3205355fea834a1",    "src": "hda",    "uuid": "3a73a641-51b6-474a-9658-0d42978e3f07"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "html_file": {    "id": "bec8baf85e485800",    "src": "hda",    "uuid": "34ee147c-19e1-459f-a60e-ad004bd34bf9"   },   "text_file": {    "id": "23956ed43f4202a0",    "src": "hda",    "uuid": "9afc0ae2-e52f-464c-a552-b2a3c5e0bea1"   }  },  "params": {   "__input_ext": "\"input\"",   "adapters": null,   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "kmers": "\"7\"",   "limits": null,   "min_length": "\"\"",   "nogroup": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T12:51:53.517812",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 26.43019199371338, "tool_id": "fastqc", "tool_version": "0.74+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="36.002628326416016">
        
            
            <system-out><![CDATA[
            null
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="10.922903776168823">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.922903776168823, "tool_id": "fastqc", "tool_version": "0.74+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="35.15231919288635">
        
            
            <system-out><![CDATA[
            null
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="35.28030180931091">
        
            
            <system-out><![CDATA[
            null
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="33.31357002258301">
        
            
            <system-out><![CDATA[
            null
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="34.70210409164429">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #1)" name="0" time="36.822447299957275">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #2)" name="1" time="18.822621822357178">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 18.822621822357178, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="lofreq_indelqual (Test #3)" name="2" time="24.134708642959595">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "cf2071ea82745af9",   "src": "hda"  },  "strategy|insertions": "20",  "strategy|selector": "uniform" }, "job": {  "command_line": "lofreq indelqual --uniform 20 -o output.bam /galaxy/server/database/objects/c/2/5/dataset_c253d643-255a-4ac3-9490-8a4e356076da.dat",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-13T13:13:09.751212",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6kvjn",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "dbdc826e649e374e",  "inputs": {   "reads": {    "id": "cf2071ea82745af9",    "src": "hda",    "uuid": "c253d643-255a-4ac3-9490-8a4e356076da"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "a083bdfdd75782eb",    "src": "hda",    "uuid": "fd317dac-31c1-43a1-980e-010cad45b415"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "strategy": "{\"__current_case__\": 0, \"deletions\": \"\", \"insertions\": \"20\", \"selector\": \"uniform\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T13:13:14.850311",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_indelqual/lofreq_indelqual/2.1.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 24.134708642959595, "tool_id": "lofreq_indelqual", "tool_version": "2.1.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="58.564950466156006">
        
            
            <system-out><![CDATA[
            gnuplot 5.4 patchlevel 8
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #2)" name="1" time="30.46805500984192">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '5c3a0g6c30c2g2t0c0c2c2c11c20c2a11c23g10g77' -> '5C3A0G6C30C2G2T0C0C2C2C11C20C2A11C23G10G4'[bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '7c0a0g6c2t4c2a23t7c8g8t8c2c8c2c5a11c5c26c17c2c23g8c2c5t2t2a5t2g11t1c19c5^cccag2^ca7c6t5^g0c6c0c2^a4c4c1a0t0g0a4^c1g4c7c4a3t11g5c2g14c5t2g20g5c2c28a27t0g4g5105' -> '7C0A0G6C2T4C2A23T7C8G8T8C2C8C2C5A11C5C26C17C2C23G8C2C5T2T2A5T2G11T1C19C5^CCCAG2^CA7C6T5^G0C6C0C2^A4C4C1A0T0G0A4^C1G4C7C4A3T11G5C2G14C5T2G20G5C2C28A27T0G4G26'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #3)" name="2" time="31.274247884750366">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="58.35805010795593">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="32.086257219314575">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="31.638492584228516">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #1)" name="0" time="34.23886966705322">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "8bf95661cf25801d",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/0/3/7/dataset_03773902-bf78-42fe-9a9a-55fa0fef119d.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads    coordsort.sam \u0027/galaxy/server/database/objects/c/b/b/dataset_cbb49718-1e2f-4a59-b954-a350d94aaa92.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-13T12:55:19.110601",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w7vkh",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "b5e211dca7d3537e",  "inputs": {   "bamfile": {    "id": "8bf95661cf25801d",    "src": "hda",    "uuid": "03773902-bf78-42fe-9a9a-55fa0fef119d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726232123.0000000",    "title": "Job Start Time",    "value": "2024-09-13 12:55:23"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726232123.0000000",    "title": "Job End Time",    "value": "2024-09-13 12:55:23"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "798db3e1655161b9",    "src": "hda",    "uuid": "cbb49718-1e2f-4a59-b954-a350d94aaa92"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T12:55:34.678709",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 34.23886966705322, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #2)" name="1" time="29.503196477890015">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "0b7d35c1b9d1776f",   "src": "hda"  },  "remove": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/5/4/d/dataset_54da9bc2-9f94-4ac3-9570-ca33643d9f3c.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads -r   coordsort.sam \u0027/galaxy/server/database/objects/e/4/0/dataset_e404466b-255e-4889-b690-3978df1e8d3f.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-13T12:55:51.967969",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jjcpw",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "abb93f83ad1abac1",  "inputs": {   "bamfile": {    "id": "0b7d35c1b9d1776f",    "src": "hda",    "uuid": "54da9bc2-9f94-4ac3-9570-ca33643d9f3c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726232154.0000000",    "title": "Job Start Time",    "value": "2024-09-13 12:55:54"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726232154.0000000",    "title": "Job End Time",    "value": "2024-09-13 12:55:54"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9ae54c2b904ab36d",    "src": "hda",    "uuid": "e404466b-255e-4889-b690-3978df1e8d3f"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "true",   "stats": "false",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T12:56:04.026245",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (6_remove_dups.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 1, "time_seconds": 29.503196477890015, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #3)" name="2" time="29.22003746032715">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "856870e7af861376",   "src": "hda"  },  "supp": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/6/6/a/dataset_66ac331c-473e-4014-a6e7-604ac529cb69.dat\u0027 coordsort.sam \u0026\u0026  samtools markdup  -@ $addthreads   -S coordsort.sam \u0027/galaxy/server/database/objects/9/5/8/dataset_958a3bf0-2b8c-4dc7-a338-8c080d2a74eb.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-13T12:56:21.889620",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fbt8m",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "a7660f3f6907abed",  "inputs": {   "bamfile": {    "id": "856870e7af861376",    "src": "hda",    "uuid": "66ac331c-473e-4014-a6e7-604ac529cb69"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726232183.0000000",    "title": "Job Start Time",    "value": "2024-09-13 12:56:23"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726232183.0000000",    "title": "Job End Time",    "value": "2024-09-13 12:56:23"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "1845570e93b662e5",    "src": "hda",    "uuid": "958a3bf0-2b8c-4dc7-a338-8c080d2a74eb"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "false",   "supp": "true"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T12:56:33.417877",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (7_mark_supp_dup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 29.22003746032715, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_markdup (Test #4)" name="3" time="30.41949224472046">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "bamfile": {   "id": "6f157ff11626f482",   "src": "hda"  },  "stats": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -m ${GALAXY_MEMORY_MB:-768}M -T \"${TMPDIR:-.}\" -O sam -o coordsort.sam \u0027/galaxy/server/database/objects/4/9/c/dataset_49c5ad0e-1e4f-4c9d-bb24-3ba2b402f3c6.dat\u0027 \u0026\u0026  samtools markdup  -@ $addthreads  -s  coordsort.sam \u0027/galaxy/server/database/objects/0/0/9/dataset_00989505-58ae-434e-92ab-09fee94c14a8.dat\u0027 2\u003e \u0027/galaxy/server/database/objects/e/7/8/dataset_e780fd9b-37ad-49ae-82aa-f1bf4a21139f.dat\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2024-09-13T12:56:51.825881",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gpr2x",  "galaxy_version": "23.1",  "history_id": "57401f7398b62ea4",  "id": "8bf95661cf25801d",  "inputs": {   "bamfile": {    "id": "6f157ff11626f482",    "src": "hda",    "uuid": "49c5ad0e-1e4f-4c9d-bb24-3ba2b402f3c6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1726232214.0000000",    "title": "Job End Time",    "value": "2024-09-13 12:56:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1726232213.0000000",    "title": "Job Start Time",    "value": "2024-09-13 12:56:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "9834c22a62480c94",    "src": "hda",    "uuid": "00989505-58ae-434e-92ab-09fee94c14a8"   },   "stats_output": {    "id": "19d5b2af8080edf9",    "src": "hda",    "uuid": "e780fd9b-37ad-49ae-82aa-f1bf4a21139f"   }  },  "params": {   "__input_ext": "\"sam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "maxlen": "\"\"",   "remove": "false",   "stats": "true",   "supp": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_markdup/samtools_markdup/1.9+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-09-13T12:57:03.799800",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output: Test output file (5_markdup.expected.bam) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output stats_output:  different than expected, difference (using diff):\n( /tmp/tmpmk2aiehvstats.txt v. /tmp/tmpn93yybhwstats.txt )\n--- local_file\n+++ history_data\n@@ -1,17 +1,5 @@\n-COMMAND: samtools markdup -@ 0 -m t -s -f /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_9e69bd59-3165-4ede-92bf-2f438627a6a1.dat -O BAM coordsort.sam /tmp/tmpo1hsz7dc/job_working_directory/000/8/outputs/dataset_ccf59cfe-ffbd-41d5-9412-d7a7ac6e65d9.dat\n-READ: 16\n-WRITTEN: 16\n-EXCLUDED: 3\n-EXAMINED: 13\n-PAIRED: 10\n-SINGLE: 3\n-DUPLICATE PAIR: 4\n-DUPLICATE SINGLE: 2\n-DUPLICATE PAIR OPTICAL: 0\n-DUPLICATE SINGLE OPTICAL: 0\n-DUPLICATE NON PRIMARY: 0\n-DUPLICATE NON PRIMARY OPTICAL: 0\n-DUPLICATE PRIMARY TOTAL: 6\n-DUPLICATE TOTAL: 6\n-ESTIMATED_LIBRARY_SIZE: 4\n-\n+READ 16 WRITTEN 16 \n+EXCLUDED 3 EXAMINED 13\n+PAIRED 10 SINGLE 3\n+DULPICATE PAIR 4 DUPLICATE SINGLE 2\n+DUPLICATE TOTAL 6\n" ], "status": "failure", "test_index": 3, "time_seconds": 30.41949224472046, "tool_id": "samtools_markdup", "tool_version": "1.9+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sqlite_to_tabular (Test #1)" name="0" time="90.9967770576477">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #1)" name="0" time="10.703158855438232">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.703158855438232, "tool_id": "vcfbedintersect", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="vcfbedintersect (Test #2)" name="1" time="35.36524701118469">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #1)" name="0" time="18.190065383911133">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 18.190065383911133, "tool_id": "vcfvcfintersect", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="vcfvcfintersect (Test #2)" name="1" time="34.501280307769775">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>