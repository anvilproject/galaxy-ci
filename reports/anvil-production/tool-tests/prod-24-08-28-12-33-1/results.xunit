<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="33"
           errors="4"
           failures="1"
           skip="0">
    
    <testcase classname="bcftools_convert_to_vcf (Test #1)" name="0" time="37.236876249313354">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of processed rows: 32
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #2)" name="1" time="23.393112659454346">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "convert|convert_from": "hap_sample",  "convert|input_file": {   "id": "762b41debccc9ffb",   "src": "hda"  },  "convert|input_sample": {   "id": "ed8c660f97454b62",   "src": "hda"  },  "output_type": "v" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;    bcftools convert   --output-type \u0027v\u0027   --hapsample2vcf \u0027/galaxy/server/database/objects/2/0/1/dataset_201d1d8e-3e58-4623-8292-36a5b79b3411.dat,/galaxy/server/database/objects/8/7/c/dataset_87ca6cf7-4597-4437-b204-03ce9c28ee24.dat\u0027 \u003e \u0027/galaxy/server/database/objects/b/4/a/dataset_b4a3bc92-dd86-4f40-a2ad-264f0d5820b2.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-08-28T12:59:25.474400",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-sknpg",  "galaxy_version": "23.1",  "history_id": "6b38dee249b79b28",  "id": "b500f0baaf3967f3",  "inputs": {   "convert|input_file": {    "id": "762b41debccc9ffb",    "src": "hda",    "uuid": "201d1d8e-3e58-4623-8292-36a5b79b3411"   },   "convert|input_sample": {    "id": "ed8c660f97454b62",    "src": "hda",    "uuid": "87ca6cf7-4597-4437-b204-03ce9c28ee24"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "793fa5e46f2bcd45",    "src": "hda",    "uuid": "b4a3bc92-dd86-4f40-a2ad-264f0d5820b2"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "convert": "{\"__current_case__\": 3, \"convert_from\": \"hap_sample\", \"input_file\": {\"values\": [{\"id\": 49, \"src\": \"hda\"}]}, \"input_sample\": {\"values\": [{\"id\": 50, \"src\": \"hda\"}]}}",   "dbkey": "\"?\"",   "output_type": "\"v\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_convert_to_vcf/bcftools_convert_to_vcf/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-08-28T12:59:30.781857",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_convert_to_vcf/bcftools_convert_to_vcf/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_convert_to_vcf/bcftools_convert_to_vcf/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 23.393112659454346, "tool_id": "bcftools_convert_to_vcf", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #3)" name="2" time="33.47201442718506">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Number of processed rows: 35
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #4)" name="3" time="31.142640829086304">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #5)" name="4" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 4, "tool_id": "bcftools_convert_to_vcf", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #6)" name="5" time="9.785277366638184">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 9.785277366638184, "tool_id": "bcftools_convert_to_vcf", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_convert_to_vcf (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "bcftools_convert_to_vcf", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fill_an_ac (Test #1)" name="0" time="38.4514377117157">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_column_join (Test #1)" name="0" time="47.479010581970215">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 47.479010581970215, "tool_id": "collection_column_join", "tool_version": "0.0.3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="collection_column_join (Test #2)" name="1" time="63.61522316932678">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_column_join (Test #3)" name="2" time="33.85291910171509">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_column_join (Test #4)" name="3" time="33.53869676589966">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_coverage (Test #1)" name="0" time="59.312175273895264">
        
            
            <system-out><![CDATA[
            samplemeanstdmin25%50%75%maxbowtie2 test1.bam0.504.1000.00.00.035bowtie2 test1.bam0.504.1000.00.00.035
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_coverage (Test #2)" name="1" time="33.14817523956299">
        
            
            <system-out><![CDATA[
            samplemeanstdmin25%50%75%maxbowtie2 test1.bam0.504.1000.00.00.035bowtie2 test1.bam0.504.1000.00.00.035
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_paired_end_interlacer (Test #1)" name="0" time="36.57417273521423">
        
            
            <system-out><![CDATA[
            There were 0 single reads.Interlaced 5 pairs of sequences.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_paired_end_interlacer (Test #2)" name="1" time="31.75231623649597">
        
            
            <system-out><![CDATA[
            There were 4 single reads.Interlaced 3 pairs of sequences.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_paired_end_interlacer (Test #3)" name="2" time="31.30308747291565">
        
            
            <system-out><![CDATA[
            There were 4 single reads.Interlaced 3 pairs of sequences.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_paired_end_interlacer (Test #4)" name="3" time="31.57825517654419">
        
            
            <system-out><![CDATA[
            There were 4 single reads.Interlaced 3 pairs of sequences.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_paired_end_interlacer (Test #5)" name="4" time="11.192864418029785">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.192864418029785, "tool_id": "fastq_paired_end_interlacer", "tool_version": "1.2.0.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="ivar_consensus (Test #1)" name="0" time="38.46664810180664">
        
            
            <system-out><![CDATA[
            Minimum Quality: 20Threshold: 0Minimum depth: 10Regions with depth less than minimum depth covered by: NReference length: 29790Positions with 0 depth: 0Positions with depth below 10: 921
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="jq (Test #1)" name="0" time="32.87334704399109">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="jq (Test #2)" name="1" time="29.244527339935303">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant_pipeline (Test #1)" name="0" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 0, "tool_id": "medaka_variant_pipeline", "tool_version": "1.0.3+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="miniasm (Test #1)" name="0" time="19.612467288970947">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 19.612467288970947, "tool_id": "miniasm", "tool_version": "0.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="miniasm (Test #2)" name="1" time="34.10555982589722">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::main] ===> Step 1: reading read mappings <===[M::ma_hit_read::0.217*1.00] read 100000 hits; stored 187766 hits and 12068 sequences (111355211 bp)[M::main] ===> Step 2: 1-pass (crude) read selection <===[M::ma_hit_sub::0.242*1.00] 10122 query sequences remain after sub[M::ma_hit_cut::0.245*1.00] 171862 hits remain after cut[M::ma_hit_flt::0.249*1.00] 165533 hits remain after filtering; crude coverage after filtering: 11.51[M::main] ===> Step 3: 2-pass (fine) read selection <===[M::ma_hit_sub::0.262*1.00] 9994 query sequences remain after sub[M::ma_hit_cut::0.265*1.00] 163595 hits remain after cut[M::ma_hit_contained::0.271*1.00] 1772 sequences and 10061 hits remain after containment removal[M::main] ===> Step 4: graph cleaning <===[M::ma_sg_gen] read 9758 arcs[M::main] ===> Step 4.1: transitive reduction <===[M::asg_arc_del_trans] transitively reduced 4694 arcs[M::asg_arc_del_multi] removed 0 multi-arcs[M::asg_arc_del_asymm] removed 484 asymmetric arcs[M::main] ===> Step 4.2: initial tip cutting and bubble popping <===[M::asg_cut_tip] cut 282 tips[M::asg_pop_bubble] popped 173 bubbles and trimmed 6 tips[M::main] ===> Step 4.3: cutting short overlaps (2 rounds in total) <===[M::asg_arc_del_multi] removed 0 multi-arcs[M::asg_arc_del_asymm] removed 26 asymmetric arcs[M::asg_arc_del_short] removed 38 short overlaps[M::asg_cut_tip] cut 53 tips[M::asg_pop_bubble] popped 8 bubbles and trimmed 0 tips[M::asg_arc_del_multi] removed 0 multi-arcs[M::asg_arc_del_asymm] removed 2 asymmetric arcs[M::asg_arc_del_short] removed 2 short overlaps[M::asg_cut_tip] cut 2 tips[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips[M::main] ===> Step 4.4: removing short internal sequences and bi-loops <===[M::asg_cut_internal] cut 0 internal sequences[M::asg_cut_biloop] cut 0 small bi-loops[M::asg_cut_tip] cut 0 tips[M::asg_pop_bubble] popped 0 bubbles and trimmed 0 tips[M::main] ===> Step 4.5: aggressively cutting short overlaps <===[M::asg_arc_del_short] removed 0 short overlaps[M::main] ===> Step 5: generating unitigs <===[M::main] Version: 0.3-r179[M::main] CMD: miniasm -f /galaxy/server/database/objects/8/8/c/dataset_88c4e74d-abdf-42ae-839b-8121fa75f434.dat -m 99 -i 0.04 -s 999 -c 2 -o 999 -h 999 -I 0.7 -g 999 -d 45000 -e 3 -n 2 -F 0.7 /galaxy/server/database/objects/8/9/0/dataset_89028c18-9d14-4c61-bc16-431052049d3e.dat[M::main] Real time: 0.288 sec; CPU: 0.284 sec
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualdist (Test #1)" name="0" time="59.62093257904053">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_qualdist (Test #2)" name="1" time="31.40730571746826">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sam2interval (Test #1)" name="0" time="35.211215019226074">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sam2interval (Test #2)" name="1" time="31.27181053161621">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sam2interval (Test #3)" name="2" time="30.407488346099854">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_flagstat (Test #1)" name="0" time="34.445655822753906">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfaddinfo (Test #1)" name="0" time="39.73138356208801">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfleftalign (Test #1)" name="0" time="36.05022144317627">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
</testsuite>